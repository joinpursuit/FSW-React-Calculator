{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/GITHUB/REPOS/Calculator/src/components/Display.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Display(props) {\n  const {\n    display,\n    evaluate,\n    number,\n    result,\n    deleted,\n    formatter\n  } = props;\n  const lenResult = result.length;\n  let formatted = \"\";\n  let infix = deleted ? display : evaluate;\n\n  if (result != \"\" && display === result) {\n    if (lenResult < 21) {\n      formatted = formatter(result, true);\n    } else {\n      formatted = formatter(result, false);\n    }\n  } else {\n    formatted = isNaN(parseFloat(number)) ? 0 : formatter(number, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display glass\",\n    children: [formatted || '0', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: infix.trim().toLocaleString() || '0'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOS/Calculator/src/components/Display.js"],"names":["React","Display","props","display","evaluate","number","result","deleted","formatter","lenResult","length","formatted","infix","isNaN","parseFloat","trim","toLocaleString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,MAA7B;AAAqCC,IAAAA,OAArC;AAA8CC,IAAAA;AAA9C,MAA4DN,KAAlE;AACA,QAAMO,SAAS,GAAGH,MAAM,CAACI,MAAzB;AAEA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,KAAK,GAAIL,OAAD,GAAYJ,OAAZ,GAAsBC,QAAlC;;AAEE,MAAGE,MAAM,IAAG,EAAT,IAAeH,OAAO,KAAGG,MAA5B,EAAmC;AAC/B,QAAGG,SAAS,GAAG,EAAf,EAAkB;AAChBE,MAAAA,SAAS,GAAGH,SAAS,CAACF,MAAD,EAAS,IAAT,CAArB;AACD,KAFD,MAEK;AACDK,MAAAA,SAAS,GAAGH,SAAS,CAACF,MAAD,EAAS,KAAT,CAArB;AACH;AACJ,GAND,MAMK;AACDK,IAAAA,SAAS,GAAIE,KAAK,CAACC,UAAU,CAACT,MAAD,CAAX,CAAN,GAA8B,CAA9B,GAAkCG,SAAS,CAACH,MAAD,EAAS,IAAT,CAAvD;AACH;;AAEH,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACGM,SAAS,IAAI,GADhB,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAA0BC,KAAK,CAACG,IAAN,GAAaC,cAAb,MAAiC;AAA3D;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAvBQf,O;AAyBT,eAAeA,OAAf","sourcesContent":["import React from 'react'\n\n\nfunction Display (props) {\n  const { display, evaluate, number, result, deleted, formatter } = props\n  const lenResult = result.length\n\n  let formatted = \"\"\n  let infix = (deleted) ? display : evaluate;\n\n    if(result !=\"\" && display===result){\n        if(lenResult < 21){\n          formatted = formatter(result, true)\n        }else{\n            formatted = formatter(result, false)\n        }\n    }else{\n        formatted = (isNaN(parseFloat(number))) ? 0 : formatter(number, true)\n    }\n \n  return (\n    <div className='display glass'>\n      {formatted || '0'}\n      <div className='preview'>{infix.trim().toLocaleString() || '0'}</div>\n    </div>\n  )\n}\n\nexport default Display\n"]},"metadata":{},"sourceType":"module"}