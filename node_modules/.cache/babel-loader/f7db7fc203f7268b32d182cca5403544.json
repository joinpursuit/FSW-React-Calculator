{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/GITHUB/REPOSITORIES PINNED/Calculator/src/App.js\";\nimport 'css-doodle';\nimport './App.css';\nimport React from 'react';\nimport Navigation from './components/Navigation';\nimport Calculator from './components/Calculator';\nimport formatter from './helpers/formatter';\nimport data from './helpers/data';\nimport { create, all } from 'mathjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst config = {};\nconst math = create(all, config);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: [],\n      evaluate: [],\n      numbers: [],\n      result: 0\n    };\n    this.prevState = {\n      display: this.state.display,\n      evaluate: this.state.evaluate,\n      numbers: this.state.numbers,\n      result: this.state.result\n    };\n    this.isClicked = this.isClicked.bind(this);\n  }\n\n  isClicked(value, className, number) {\n    console.log(this.state);\n    console.log(this.prevState);\n\n    if (isNaN(number)) {\n      const isClass = className.split(' ');\n\n      switch (isClass[1]) {\n        case 'result':\n          {\n            const doMath = math.evaluate(this.state.evaluate.join('').trim());\n            const numArray = String(doMath).split('').map(doMath => {\n              return Number(doMath);\n            });\n            this.setState({\n              numbers: [formatter(numArray)],\n              evaluate: [...this.state.evaluate, ' = ', doMath]\n            });\n            break;\n          }\n\n        case 'ac':\n          {\n            this.setState({\n              display: [],\n              evaluate: [],\n              numbers: [],\n              result: 0\n            });\n            break;\n          }\n\n        case 'delete':\n          {\n            this.setState({\n              display: [],\n              evaluate: [],\n              numbers: [],\n              result: 0\n            });\n            break;\n          }\n\n        default:\n          {\n            this.setState({\n              numbers: [],\n              evaluate: [...this.state.evaluate, ' ', value, ' ']\n            });\n            break;\n          }\n      }\n    } else {\n      this.setState({\n        numbers: [...this.state.numbers, number],\n        evaluate: [...this.state.evaluate, number]\n      });\n    }\n  }\n\n  render() {\n    const skeleton = data;\n    const numbers = this.state.numbers;\n    const evaluate = this.state.evaluate;\n    const format = formatter;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Calculator, {\n        skeleton: skeleton,\n        isClicked: this.isClicked,\n        numbers: numbers,\n        evaluate: evaluate,\n        format: format\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOSITORIES PINNED/Calculator/src/App.js"],"names":["React","Navigation","Calculator","formatter","data","create","all","config","math","App","Component","constructor","props","state","display","evaluate","numbers","result","prevState","isClicked","bind","value","className","number","console","log","isNaN","isClass","split","doMath","join","trim","numArray","String","map","Number","setState","render","skeleton","format"],"mappings":"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","sourcesContent":["import 'css-doodle'\nimport './App.css'\nimport React from 'react'\nimport Navigation from './components/Navigation'\nimport Calculator from './components/Calculator'\nimport formatter from './helpers/formatter'\n\nimport data from './helpers/data'\nimport { create, all } from 'mathjs'\n\nconst config = { }\nconst math = create(all, config)\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      display: [],\n      evaluate: [],\n      numbers:[],\n      result: 0\n    }\n    this.prevState ={\n      display: this.state.display,\n      evaluate: this.state.evaluate,\n      numbers: this.state.numbers,\n      result: this.state.result\n    }\n\n    this.isClicked = this.isClicked.bind(this)\n  }\n  \n  isClicked(value,className,number){\n   console.log(this.state)\n   console.log(this.prevState)\n    if(isNaN(number)){\n      const isClass = className.split(' ')\n\n      switch(isClass[1]){\n\n        case 'result': {\n                        const doMath = math.evaluate(this.state.evaluate.join('').trim());\n                        const numArray = String(doMath).split('').map((doMath)=>{return Number(doMath)});\n                        this.setState({\n                            numbers:[formatter(numArray)],\n                            evaluate:[...this.state.evaluate,' = ',doMath]\n                            });\n\n                        break;\n                        }\n        case 'ac' : {\n                        this.setState({\n                            display: [],\n                            evaluate: [],\n                            numbers:[],\n                            result: 0 \n                        });\n                        break;\n                    }\n        case 'delete' : {\n                      this.setState({\n                          display: [],\n                          evaluate: [],\n                          numbers:[],\n                          result: 0 \n                      });\n                      break;\n                  }  \n        default :   {\n                        this.setState({\n                        numbers:[],\n                        evaluate:[...this.state.evaluate,' ',value,' ']\n                        });\n                        break;\n                    }       \n    }\n\n\n\n    }else{\n      this.setState({\n        numbers:[...this.state.numbers,number],\n        evaluate:[...this.state.evaluate,number]\n      })\n    }\n  }\n\n  render() {\n    const skeleton = data\n    const numbers = this.state.numbers\n    const evaluate  = this.state.evaluate\n    const format = formatter\n    return (\n      <>\n      <Navigation />\n      <Calculator skeleton={skeleton} isClicked={this.isClicked} numbers={numbers} evaluate={evaluate} format={format}/>\n    </>\n    )\n  }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}