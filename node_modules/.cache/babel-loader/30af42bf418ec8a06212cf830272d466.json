{"ast":null,"code":"const operation = (input, type, number) => {\n  let toEval = \"\";\n\n  switch (type) {\n    case \"geo\":\n      {\n        switch (input) {\n          case \"sin\":\n            toEval = `sin(${number})`;\n            break;\n\n          case \"cos\":\n            toEval = `cos(${number})`;\n            break;\n\n          case \"tan\":\n            toEval = `tan(${number})`;\n            break;\n\n          default:\n            break;\n        }\n      }\n      break;\n\n    case \"square\":\n      toEval = `${number}^2`;\n      break;\n\n    case \"pow\":\n      break;\n\n    case \"sqrt\":\n      break;\n\n    case \"pi\":\n      break;\n\n    case \"exp\":\n      break;\n\n    case \"factorial\":\n      break;\n\n    case \"percent\":\n      break;\n\n    case \"allClear\":\n      break;\n\n    case \"neg\":\n      break;\n\n    case \"delete\":\n      break;\n\n    case \"operator\":\n      break;\n\n    case \"result\":\n      break;\n\n    default:\n      break;\n  }\n\n  return toEval;\n};\n\nexport default operation;","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOS/Calculator/src/helpers/operation.js"],"names":["operation","input","type","number","toEval"],"mappings":"AAAA,MAAMA,SAAS,GAAC,CAACC,KAAD,EAAOC,IAAP,EAAYC,MAAZ,KAAqB;AACjC,MAAIC,MAAM,GAAG,EAAb;;AAEA,UAAQF,IAAR;AAEI,SAAK,KAAL;AAAY;AACA,gBAAOD,KAAP;AACI,eAAK,KAAL;AAAaG,YAAAA,MAAM,GAAI,OAAMD,MAAO,GAAvB;AAA2B;;AACxC,eAAK,KAAL;AAAaC,YAAAA,MAAM,GAAI,OAAMD,MAAO,GAAvB;AAA2B;;AACxC,eAAK,KAAL;AAAaC,YAAAA,MAAM,GAAI,OAAMD,MAAO,GAAvB;AAA2B;;AACxC;AAAS;AAJb;AAKE;AAAA;;AACd,SAAK,QAAL;AAAeC,MAAAA,MAAM,GAAI,GAAED,MAAO,IAAnB;AAAuB;;AACtC,SAAK,KAAL;AAAY;;AACZ,SAAK,MAAL;AAAa;;AACb,SAAK,IAAL;AAAW;;AACX,SAAK,KAAL;AAAY;;AACZ,SAAK,WAAL;AAAkB;;AAClB,SAAK,SAAL;AAAgB;;AAChB,SAAK,UAAL;AAAiB;;AACjB,SAAK,KAAL;AAAY;;AACZ,SAAK,QAAL;AAAe;;AACf,SAAK,UAAL;AAAiB;;AACjB,SAAK,QAAL;AAAe;;AACf;AAAS;AArBb;;AAwBJ,SAAOC,MAAP;AAEC,CA7BD;;AA+BA,eAAeJ,SAAf","sourcesContent":["const operation=(input,type,number)=>{\n    let toEval = \"\"\n\n    switch (type){\n\n        case \"geo\": {\n                    switch(input){\n                        case \"sin\" : toEval = `sin(${number})`; break;\n                        case \"cos\" : toEval = `cos(${number})`; break;\n                        case \"tan\" : toEval = `tan(${number})`; break;\n                        default: break;\n                    }}break;\n        case \"square\": toEval = `${number}^2`;break;\n        case \"pow\": break;\n        case \"sqrt\": break;\n        case \"pi\": break;\n        case \"exp\": break;\n        case \"factorial\": break;\n        case \"percent\": break;\n        case \"allClear\": break;\n        case \"neg\": break;\n        case \"delete\": break;\n        case \"operator\": break;\n        case \"result\": break;\n        default: break;     \n\n    }\nreturn toEval\n\n}\n\nexport default operation"]},"metadata":{},"sourceType":"module"}