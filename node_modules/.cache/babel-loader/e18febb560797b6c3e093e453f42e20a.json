{"ast":null,"code":"const formatter = numbers => {\n  const numbers_ = numbers.join('');\n  const display = '';\n  const len = numbers.length;\n  const div = Math.floor(len / 3);\n  const mod = len % 3;\n\n  switch (div) {\n    case 0:\n      display = numbers_;\n      break;\n\n    case 1:\n      switch (mod) {\n        case 0:\n          display = numbers_;\n          break;\n\n        case 1:\n          display = numbers_.substring(0, 1) + ',' + numbers_.substring(1, len);\n          break;\n\n        case 2:\n          display = numbers_.substring(0, mod) + ',' + numbers_.substring(mod, len);\n          break;\n\n        default:\n          break;\n      }\n\n      break;\n\n    case 2:\n      switch (mod) {\n        case 0:\n          display = numbers_.substring(0, 3) + ',' + numbers_.substring(3, len);\n          break;\n\n        case 1:\n          display = numbers_.substring(0, 1) + ',' + numbers_.substring(1, 4) + ',' + numbers_.substring(4, len);\n          break;\n\n        case 2:\n          display = numbers_.substring(0, 2) + ',' + numbers_.substring(2, 5) + ',' + numbers_.substring(5, len);\n          break;\n\n        default:\n          break;\n      }\n\n      break;\n\n    case 3:\n      switch (mod) {\n        case 0:\n          display = numbers_.substring(0, 3) + ',' + numbers_.substring(3, 6) + ',' + numbers_.substring(6, len);\n          break;\n\n        case 1:\n          display = numbers_.substring(0, 1) + ',' + numbers_.substring(1, 4) + ',' + numbers_.substring(4, 7) + ',' + numbers_.substring(7, len);\n          break;\n\n        case 2:\n          display = numbers_.substring(0, 2) + ',' + numbers_.substring(2, 5) + ',' + numbers_.substring(5, 8) + ',' + numbers_.substring(8, len);\n          break;\n\n        default:\n          break;\n      }\n\n      break;\n\n    case 4:\n      switch (mod) {\n        case 0:\n          display = numbers_.substring(0, 3) + ',' + numbers_.substring(3, 6) + ',' + numbers_.substring(6, 9) + ',' + numbers_.substring(9, len);\n          break;\n\n        case 1:\n          display = numbers_.substring(0, 1) + ',' + numbers_.substring(1, 4) + ',' + numbers_.substring(4, 7) + ',' + numbers_.substring(7, 10) + ',' + numbers_.substring(10, len);\n          break;\n\n        case 2:\n          display = numbers_.substring(0, 2) + ',' + numbers_.substring(2, 5) + ',' + numbers_.substring(5, 8) + ',' + numbers_.substring(8, 11) + ',' + numbers_.substring(11, len);\n          break;\n\n        default:\n          break;\n      }\n\n      break;\n\n    case 5:\n      switch (mod) {\n        case 0:\n          display = numbers_.substring(0, 3) + ',' + numbers_.substring(3, 6) + ',' + numbers_.substring(6, 9) + ',' + numbers_.substring(9, 12) + ',' + numbers_.substring(12, len);\n          break;\n\n        case 1:\n          display = numbers_.substring(0, 1) + ',' + numbers_.substring(1, 4) + ',' + numbers_.substring(4, 7) + ',' + numbers_.substring(7, 10) + ',' + numbers_.substring(10, 13) + ',' + numbers_.substring(13, len);\n          break;\n\n        case 2:\n          display = numbers_.substring(0, 2) + ',' + numbers_.substring(2, 5) + ',' + numbers_.substring(5, 8) + ',' + numbers_.substring(8, 11) + ',' + numbers_.substring(11, 15) + ',' + numbers_.substring(15, len);\n          break;\n\n        default:\n          break;\n      }\n\n      break;\n\n    case 6:\n      display = numbers_.substring(0, 1) + '.' + numbers_.substring(1, 3) + 'e' + len;\n      break;\n\n    case 7:\n      display = numbers_.substring(0, 1) + '.' + numbers_.substring(1, 3) + 'e' + len;\n      break;\n\n    case 8:\n      display = numbers_.substring(0, 1) + '.' + numbers_.substring(1, 3) + 'e' + len;\n      break;\n\n    case 9:\n      display = numbers_.substring(0, 1) + '.' + numbers_.substring(1, 3) + 'e' + len;\n      break;\n\n    default:\n      display = numbers_;\n      break;\n  }\n\n  return display;\n};\n\nexport default formatter;","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOSITORIES PINNED/Calculator/src/helpers/formatter.js"],"names":["formatter","numbers","numbers_","join","display","len","length","div","Math","floor","mod","substring"],"mappings":"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","sourcesContent":["const formatter =(numbers)=>{\n    \n    const numbers_ = numbers.join('') \n    const display =''     \n    const len =numbers.length\n    const div = Math.floor(len / 3)\n    const mod = len % 3\n\n\n    switch(div){\n        case 0 : \n                    display = numbers_;break;\n                  \n        \n        case 1 : switch(mod){\n                    case 0 : display  = numbers_;break;\n                    case 1 : display  = numbers_.substring(0,1)+','+ numbers_.substring(1,len);break;\n                    case 2 : display  = numbers_.substring(0,mod)+','+ numbers_.substring(mod,len);break; \n                    default : break;\n                    }break;\n                 \n                 \n        case 2 : \n                 switch(mod){\n                    case 0 : display  = numbers_.substring(0,3)+','+ numbers_.substring(3,len);break;\n                    case 1 : display  = numbers_.substring(0,1)+','+ numbers_.substring(1,4)+','+ numbers_.substring(4,len);break;\n                    case 2 : display  = numbers_.substring(0,2)+','+ numbers_.substring(2,5)+','+ numbers_.substring(5,len);break; \n                    default : break;\n                }break;\n        case 3 : \n                switch(mod){\n                   case 0 : display  = numbers_.substring(0,3)+','+ numbers_.substring(3,6)+','+ numbers_.substring(6,len);break;\n                   case 1 : display  = numbers_.substring(0,1)+','+ numbers_.substring(1,4)+','+ numbers_.substring(4,7)+','+ numbers_.substring(7,len);break; \n                   case 2 : display  = numbers_.substring(0,2)+','+ numbers_.substring(2,5)+','+ numbers_.substring(5,8)+','+ numbers_.substring(8,len);break; \n                   default : break;\n               }break;\n        case 4 : \n               switch(mod){\n                  case 0 : display  = numbers_.substring(0,3)+','+ numbers_.substring(3,6)+','+ numbers_.substring(6,9)+','+ numbers_.substring(9,len);break; \n                  case 1 : display  = numbers_.substring(0,1)+','+ numbers_.substring(1,4)+','+ numbers_.substring(4,7)+','+ numbers_.substring(7,10)+','+ numbers_.substring(10,len);break; \n                  case 2 : display  = numbers_.substring(0,2)+','+ numbers_.substring(2,5)+','+ numbers_.substring(5,8)+','+ numbers_.substring(8,11)+','+ numbers_.substring(11,len);break; \n                  default : break;\n              }break;\n        \n        case 5 : \n              switch(mod){\n                 case 0 : display  = numbers_.substring(0,3)+','+ numbers_.substring(3,6)+','+ numbers_.substring(6,9)+','+ numbers_.substring(9,12)+','+ numbers_.substring(12,len);break; \n                 case 1 : display  = numbers_.substring(0,1)+','+ numbers_.substring(1,4)+','+ numbers_.substring(4,7)+','+ numbers_.substring(7,10)+','+ numbers_.substring(10,13)+','+ numbers_.substring(13,len);break; \n                 case 2 : display  = numbers_.substring(0,2)+','+ numbers_.substring(2,5)+','+ numbers_.substring(5,8)+','+ numbers_.substring(8,11)+','+ numbers_.substring(11,15)+','+ numbers_.substring(15,len);break; \n                 default : break;\n             }break;\n\n        case 6 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break\n        case 7 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break\n        case 8 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break\n        case 9 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break        \n        default: display = numbers_;break;\n    }\n    return display\n}\nexport default formatter"]},"metadata":{},"sourceType":"module"}