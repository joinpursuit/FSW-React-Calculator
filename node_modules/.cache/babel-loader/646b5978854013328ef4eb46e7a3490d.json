{"ast":null,"code":"var operation=function operation(input,type,number,prevEva,prevRes,prevNum){var casePi=prevRes===\"\"?number:prevRes;var casePrevRes=prevRes===\"\"&&number===\"\"?\"0\":prevRes;// let casePrevEva = prevEva.split('').filter(ele => ele != \" \")\n// console.log(casePrevEva)\n// let casePi = (prevNum ===\"\") ? number : prevNum\nvar lastOperation=[];var toEval=[];var len=0;var whichType=type;if(number===\"\"&&prevNum===\"\"&&prevRes===\"\"&&type===\"result\"){toEval=[\"\",false,false,true];return toEval;}console.log(\"This is operation casePrevRes: \".concat(casePrevRes));console.log(\"Whictype: \".concat(whichType));if(prevRes!=\"\"||type===\"delete\"||type===\"result\"){lastOperation=prevEva.split('').filter(function(ele){return ele!=\" \";});len=lastOperation.length;console.log(\"LAST OPERATION: \");console.log(\"\".concat(lastOperation));}if(number===\"\"&&prevNum===\"\"&&casePrevRes===\"\"){console.log('everything is empty');toEval=[input,false,false,false];console.log(toEval);return toEval;}if(type===\"geo\"){switch(input){case\"sin\":toEval[0]=number===\"\"?\"sin(0 deg)\":\"sin(\".concat(number,\" deg)\");toEval[1]=true;toEval[2]=false;toEval[3]=false;break;case\"cos\":toEval[0]=number===\"\"?\"cos(0 deg)\":\"cos(\".concat(number,\" deg)\");toEval[1]=true;toEval[2]=false;toEval[3]=false;break;case\"tan\":toEval[0]=number===\"\"?\"tan(0 deg)\":\"tan(\".concat(number,\" deg)\");toEval[1]=true;toEval[2]=false;toEval[3]=false;break;default:break;}}else if(type===\"operator\"){switch(input){case\"/\":toEval[0]=\"\".concat(number,\" /\");toEval[1]=false;toEval[2]=false;toEval[3]=false;break;case\"*\":toEval[0]=\"\".concat(number,\" *\");toEval[1]=false;toEval[2]=false;toEval[3]=false;break;case\"-\":toEval[0]=\"\".concat(number,\" -\");toEval[1]=false;toEval[2]=false;toEval[3]=false;break;case\"+\":toEval[0]=\"\".concat(number,\" +\");toEval[1]=false;toEval[2]=false;toEval[3]=false;break;default:break;}}switch(whichType){case\"square\":toEval[0]=number===\"\"?\"\".concat(casePrevRes,\"^2\"):\"\".concat(number,\"^2\");toEval[1]=true;toEval[2]=false;toEval[3]=false;break;case\"pow\":toEval[0]=number===\"\"?\"\".concat(casePrevRes):\"\".concat(number,\"^\");toEval[1]=false;toEval[2]=false;toEval[3]=false;break;case\"sqrt\":toEval[0]=number===\"\"?\"\".concat(casePrevRes,\"^(1/2)\"):\"\".concat(number,\"^(1/2)\");toEval[1]=true;toEval[2]=false;toEval[3]=false;break;case\"pi\":toEval[0]=number===\"\"?\"pi\":\"\".concat(casePi,\"*pi\");toEval[1]=true;toEval[2]=false;toEval[3]=false;break;case\"exp\":toEval[0]=\"\".concat(number,\"*(\");toEval[1]=false;toEval[2]=false;toEval[3]=false;break;case\"factorial\":toEval[0]=number===\"\"?\"\".concat(casePrevRes,\"!\"):\"\".concat(number,\"!\");toEval[1]=true;toEval[2]=false;toEval[3]=false;break;case\"percent\":toEval[0]=number===\"\"?\"\".concat(casePrevRes,\"*(1/100)\"):\"\".concat(number,\"*(1/100)\");toEval[1]=true;toEval[2]=false;toEval[3]=false;break;case\"allClear\":toEval[0]=\"\";toEval[1]=false;toEval[2]=false;toEval[3]=true;break;case\"neg\":toEval[0]=number===\"\"?\"\".concat(casePrevRes,\"*(-1)\"):\"\".concat(number,\"*(-1)\");toEval[1]=true;toEval[2]=false;toEval[3]=false;break;case\"delete\":toEval[0]=\"\".concat(lastOperation.splice(0,len-1).join(\" \"));toEval[1]=false;toEval[2]=true;toEval[3]=false;break;case\"result\":if(prevRes!=\"\"){toEval[0]=len===2?\"\".concat(lastOperation[len-2],\" \").concat(lastOperation[len-1]):\"\".concat(prevRes,\" \").concat(lastOperation[len-2],\" \").concat(lastOperation[len-1]);toEval[1]=true;toEval[2]=false;toEval[3]=false;break;}else{toEval[0]=\"\".concat(prevEva);toEval[1]=true;toEval[2]=false;toEval[3]=false;break;}default:break;}console.log(\"toEval : \");console.log(toEval);return toEval;};export default operation;","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOS/Calculator/src/helpers/operation.js"],"names":["operation","input","type","number","prevEva","prevRes","prevNum","casePi","casePrevRes","lastOperation","toEval","len","whichType","console","log","split","filter","ele","length","splice","join"],"mappings":"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","sourcesContent":["const operation=(input,type,number,prevEva, prevRes, prevNum)=>{\n    \n    let casePi = (prevRes ===\"\") ? number : prevRes\n    let casePrevRes = (prevRes ===\"\" && number ===\"\") ? \"0\" : prevRes\n    // let casePrevEva = prevEva.split('').filter(ele => ele != \" \")\n    // console.log(casePrevEva)\n    // let casePi = (prevNum ===\"\") ? number : prevNum\n\n    let lastOperation = []\n    let toEval = []\n    let len = 0\n    const whichType = type\n\n    if(number === \"\" && prevNum === \"\" && prevRes === \"\" && type === \"result\"){\n        toEval = [\"\",false,false,true]\n        return toEval\n      }\n\n    console.log(`This is operation casePrevRes: ${casePrevRes}`)\n    console.log(`Whictype: ${whichType}`)\n\n    if(prevRes != \"\" || type === \"delete\" || type === \"result\"){\n        lastOperation = prevEva.split('').filter(ele => ele != \" \")\n        len = lastOperation.length\n        console.log(`LAST OPERATION: `)\n        console.log(`${lastOperation}`)\n    }\n\n    \n\n    if(number === \"\" && prevNum === \"\" && casePrevRes === \"\"){\n        console.log('everything is empty')\n        toEval = [input,false,false,false]\n        console.log(toEval)\n        return toEval\n    }\n\n    \n\n\n    if(type === \"geo\"){\n        switch(input){\n            case \"sin\" : toEval[0] = (number === \"\") ? `sin(0 deg)` :`sin(${number} deg)`;\n                         toEval[1] = true ;\n                         toEval[2] = false ;\n                         toEval[3] = false;\n                         break;\n            case \"cos\" : toEval[0] = (number === \"\") ? `cos(0 deg)`: `cos(${number} deg)`;\n                         toEval[1] = true ;\n                         toEval[2] = false ;\n                         toEval[3] = false;\n                         break;\n            case \"tan\" : toEval[0] = (number === \"\") ? `tan(0 deg)` : `tan(${number} deg)`;\n                         toEval[1] = true ;\n                         toEval[2] = false ;\n                         toEval[3] = false;\n                         break;\n            default: break;\n        }\n    }else if(type === \"operator\"){\n\n        switch(input){\n            case \"/\" :  toEval[0] = `${number} /`;\n                        toEval[1] = false ;\n                        toEval[2] = false ;\n                        toEval[3] = false;\n                        break;\n            case \"*\" :  toEval[0] = `${number} *`;\n                        toEval[1] = false ;\n                        toEval[2] = false ;\n                        toEval[3] = false;\n                        break;\n            case \"-\" :  toEval[0] = `${number} -`;\n                        toEval[1] = false ;\n                        toEval[2] = false ;\n                        toEval[3] = false;\n                        break;\n            case \"+\" :  toEval[0] = `${number} +`;\n                        toEval[1] = false ;\n                        toEval[2] = false ;\n                        toEval[3] = false;\n                        break;\n            default: break;\n        }\n\n    }\n\n\n    switch (whichType){\n\n        case \"square\": toEval[0] = (number === \"\") ? `${casePrevRes}^2`: `${number}^2`;\n                       toEval[1] = true ;\n                       toEval[2] = false ;\n                       toEval[3] = false;\n                       break;\n\n        case \"pow\":    toEval[0] = (number === \"\") ? `${casePrevRes}` : `${number}^`;   \n                       toEval[1] = false ;   \n                       toEval[2] = false ;   \n                       toEval[3] = false;   \n                       break;\n\n\n        case \"sqrt\":   toEval[0] = (number === \"\") ? `${casePrevRes}^(1/2)` : `${number}^(1/2)`; \n                       toEval[1] = true ;\n                       toEval[2] = false ;\n                       toEval[3] = false;\n                       break;\n\n        case \"pi\":     toEval[0] = (number === \"\") ? `pi`: `${casePi}*pi`;\n                       toEval[1] = true ;\n                       toEval[2] = false ;\n                       toEval[3] = false;\n                       break;\n\n        case \"exp\":    toEval[0] = `${number}*(`;\n                       toEval[1] = false ;\n                       toEval[2] = false ;\n                       toEval[3] = false;\n                       break;\n\n        case \"factorial\": toEval[0] = (number === \"\") ? `${casePrevRes}!` :  `${number}!`;\n                          toEval[1] = true ;\n                          toEval[2] = false ;\n                          toEval[3] = false;\n                          break;\n\n        case \"percent\": toEval[0] = (number === \"\") ? `${casePrevRes}*(1/100)` :  `${number}*(1/100)`;\n                        toEval[1] = true ;\n                        toEval[2] = false ;\n                        toEval[3] = false;\n                        break;\n\n        case \"allClear\": toEval[0] = \"\";\n                         toEval[1] = false ;\n                         toEval[2] = false ;\n                         toEval[3] = true;\n                         break;\n\n        case \"neg\":     toEval[0] = (number === \"\") ? `${casePrevRes}*(-1)` :  `${number}*(-1)`;\n                        toEval[1] = true ;\n                        toEval[2] = false ;\n                        toEval[3] = false;\n                        break;\n\n        case \"delete\":  toEval[0] = `${lastOperation.splice(0,len-1).join(\" \")}`\n                        toEval[1] = false ;\n                        toEval[2] = true ;\n                        toEval[3] = false;\n                        break;\n\n        case \"result\": \n                        if(prevRes != \"\"){\n                            toEval[0] = (len === 2) ? `${lastOperation[len-2]} ${lastOperation[len-1]}` \n                                                    : `${prevRes} ${lastOperation[len-2]} ${lastOperation[len-1]}`\n                            toEval[1] = true ;\n                            toEval[2] = false ;\n                            toEval[3] = false;\n                            break;\n                        }else{\n                            toEval[0] = `${prevEva}`;\n                            toEval[1] = true ;\n                            toEval[2] = false ;\n                            toEval[3] = false;\n                            break;\n                        }\n                      \n        default: break;     \n\n    }\nconsole.log(`toEval : `)\nconsole.log(toEval)\nreturn toEval\n\n}\n\nexport default operation"]},"metadata":{},"sourceType":"module"}