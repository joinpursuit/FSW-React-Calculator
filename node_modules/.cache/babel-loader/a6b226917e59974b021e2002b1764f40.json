{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/GITHUB/REPOS/Calculator/src/components/Display.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Display(props) {\n  const {\n    numbers,\n    display,\n    evaluate,\n    number,\n    result\n  } = props;\n  let formatted = \"\";\n  let infix = \"\";\n\n  if (result != \"\" && display === result) {\n    formatted = result.toLocaleString();\n    console.log('FORMATTED');\n    console.log(formatted);\n  } else {\n    formatted = isNaN(parseFloat(number)) ? 0 : parseFloat(number).toLocaleString();\n  } //(display != number) ? display : formatted\n\n\n  infix = evaluate;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display glass\",\n    children: [formatted || '0', /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: infix.toLocaleString() || '0'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Display;\nexport default Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOS/Calculator/src/components/Display.js"],"names":["React","Display","props","numbers","display","evaluate","number","result","formatted","infix","toLocaleString","console","log","isNaN","parseFloat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA,MAA9B;AAAsCC,IAAAA;AAAtC,MAAiDL,KAAvD;AACA,MAAIM,SAAS,GAAG,EAAhB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AAEE,MAAGF,MAAM,IAAG,EAAT,IAAeH,OAAO,KAAGG,MAA5B,EAAmC;AACjCC,IAAAA,SAAS,GAAGD,MAAM,CAACG,cAAP,EAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACD,GAJD,MAIK;AAEHA,IAAAA,SAAS,GAAIK,KAAK,CAACC,UAAU,CAACR,MAAD,CAAX,CAAN,GAA8B,CAA9B,GAAkCQ,UAAU,CAACR,MAAD,CAAV,CAAmBI,cAAnB,EAA9C;AAED,GAboB,CAcvB;;;AAEED,EAAAA,KAAK,GAAGJ,QAAR;AAEF,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACGG,SAAS,IAAI,GADhB,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAA0BC,KAAK,CAACC,cAAN,MAA0B;AAApD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAxBQT,O;AA0BT,eAAeA,OAAf","sourcesContent":["import React from 'react'\n\nfunction Display (props) {\n  const { numbers, display, evaluate, number, result } = props\n  let formatted = \"\"\n  let infix = \"\"\n\n    if(result !=\"\" && display===result){\n      formatted = result.toLocaleString()\n      console.log('FORMATTED')\n      console.log(formatted)\n    }else{\n\n      formatted = (isNaN(parseFloat(number))) ? 0 : parseFloat(number).toLocaleString()\n      \n    }\n  //(display != number) ? display : formatted\n\n    infix = evaluate\n \n  return (\n    <div className='display glass'>\n      {formatted || '0'}\n      <div className='preview'>{infix.toLocaleString() || '0'}</div>\n    </div>\n  )\n}\n\nexport default Display\n"]},"metadata":{},"sourceType":"module"}