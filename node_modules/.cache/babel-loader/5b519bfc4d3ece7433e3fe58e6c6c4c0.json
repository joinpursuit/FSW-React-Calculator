{"ast":null,"code":"var formatter=function formatter(numbers,format){var numbers_=numbers;var len=numbers.length;if(len>=21&&format===false||numbers_.includes(\"e\")||numbers_.includes(\".\")||numbers_.includes(\"-\")){if(numbers_.includes(\"e\")){return numbers_;}else{return parseFloat(numbers_).toLocaleString();}}if(numbers_===\"Infinity\"||numbers_===\"-Infinity\"){return parseFloat(numbers_).toLocaleString();}var div=Math.floor(len/3);var mod=len%3;var display='';switch(div){case 0:display=numbers_;break;case 1:switch(mod){case 0:display=numbers_;break;case 1:display=numbers_.substring(0,1)+','+numbers_.substring(1,len);break;case 2:display=numbers_.substring(0,mod)+','+numbers_.substring(mod,len);break;default:break;}break;case 2:switch(mod){case 0:display=numbers_.substring(0,3)+','+numbers_.substring(3,len);break;case 1:display=numbers_.substring(0,1)+','+numbers_.substring(1,4)+','+numbers_.substring(4,len);break;case 2:display=numbers_.substring(0,2)+','+numbers_.substring(2,5)+','+numbers_.substring(5,len);break;default:break;}break;case 3:switch(mod){case 0:display=numbers_.substring(0,3)+','+numbers_.substring(3,6)+','+numbers_.substring(6,len);break;case 1:display=numbers_.substring(0,1)+','+numbers_.substring(1,4)+','+numbers_.substring(4,7)+','+numbers_.substring(7,len);break;case 2:display=numbers_.substring(0,2)+','+numbers_.substring(2,5)+','+numbers_.substring(5,8)+','+numbers_.substring(8,len);break;default:break;}break;case 4:switch(mod){case 0:display=numbers_.substring(0,3)+','+numbers_.substring(3,6)+','+numbers_.substring(6,9)+','+numbers_.substring(9,len);break;case 1:display=numbers_.substring(0,1)+','+numbers_.substring(1,4)+','+numbers_.substring(4,7)+','+numbers_.substring(7,10)+','+numbers_.substring(10,len);break;case 2:display=numbers_.substring(0,2)+','+numbers_.substring(2,5)+','+numbers_.substring(5,8)+','+numbers_.substring(8,11)+','+numbers_.substring(11,len);break;default:break;}break;case 5:switch(mod){case 0:display=numbers_.substring(0,3)+','+numbers_.substring(3,6)+','+numbers_.substring(6,9)+','+numbers_.substring(9,12)+','+numbers_.substring(12,len);break;case 1:display=numbers_.substring(0,1)+','+numbers_.substring(1,4)+','+numbers_.substring(4,7)+','+numbers_.substring(7,10)+','+numbers_.substring(10,13)+','+numbers_.substring(13,len);break;case 2:display=numbers_.substring(0,2)+','+numbers_.substring(2,5)+','+numbers_.substring(5,8)+','+numbers_.substring(8,11)+','+numbers_.substring(11,14)+','+numbers_.substring(14,len);break;default:break;}break;case 6:display=numbers_.substring(0,1)+'.'+numbers_.substring(1,3)+'e'+len;break;case 7:display=numbers_.substring(0,1)+'.'+numbers_.substring(1,3)+'e'+len;break;case 8:display=numbers_.substring(0,1)+'.'+numbers_.substring(1,3)+'e'+len;break;case 9:display=numbers_.substring(0,1)+'.'+numbers_.substring(1,3)+'e'+len;break;case 10:display=numbers_.substring(0,1)+'.'+numbers_.substring(1,3)+'e'+len;break;case 11:display=numbers_.substring(0,1)+'.'+numbers_.substring(1,3)+'e'+len;break;case 12:display=numbers_.substring(0,1)+'.'+numbers_.substring(1,3)+'e'+len;break;case 13:display=numbers_.substring(0,1)+'.'+numbers_.substring(1,3)+'e'+len;break;case 14:display=numbers_.substring(0,1)+'.'+numbers_.substring(1,3)+'e'+len;break;case 15:display=numbers_.substring(0,1)+'.'+numbers_.substring(1,3)+'e'+len;break;default:break;}return display;};export default formatter;","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOS/Calculator/src/helpers/formatter.js"],"names":["formatter","numbers","format","numbers_","len","length","includes","parseFloat","toLocaleString","div","Math","floor","mod","display","substring"],"mappings":"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","sourcesContent":["const formatter =(numbers,format)=>{\n\n    const numbers_ = numbers\n    const len = numbers.length\n\n    if((len >= 21 && format === false) || (numbers_.includes(\"e\")) || (numbers_.includes(\".\")) || (numbers_.includes(\"-\"))){\n        \n        if(numbers_.includes(\"e\")){\n                return numbers_\n        }else{\n            return parseFloat(numbers_).toLocaleString()\n        }\n    }\n\n    if(numbers_ === \"Infinity\" || numbers_ === \"-Infinity\"){\n        return parseFloat(numbers_).toLocaleString()\n    }\n    \n    const div = Math.floor(len / 3)\n    const mod = len % 3\n    let display = ''   \n\n\n    switch(div){\n        case 0 : \n                    display = numbers_;break;\n                  \n        \n        case 1 : switch(mod){\n                    case 0 : display  = numbers_;break;\n                    case 1 : display  = numbers_.substring(0,1)+','+ numbers_.substring(1,len);break;\n                    case 2 : display  = numbers_.substring(0,mod)+','+ numbers_.substring(mod,len);break; \n                    default : break;\n                    }break;\n                 \n                 \n        case 2 : \n                 switch(mod){\n                    case 0 : display  = numbers_.substring(0,3)+','+ numbers_.substring(3,len);break;\n                    case 1 : display  = numbers_.substring(0,1)+','+ numbers_.substring(1,4)+','+ numbers_.substring(4,len);break;\n                    case 2 : display  = numbers_.substring(0,2)+','+ numbers_.substring(2,5)+','+ numbers_.substring(5,len);break; \n                    default : break;\n                }break;\n        case 3 : \n                switch(mod){\n                   case 0 : display  = numbers_.substring(0,3)+','+ numbers_.substring(3,6)+','+ numbers_.substring(6,len);break;\n                   case 1 : display  = numbers_.substring(0,1)+','+ numbers_.substring(1,4)+','+ numbers_.substring(4,7)+','+ numbers_.substring(7,len);break; \n                   case 2 : display  = numbers_.substring(0,2)+','+ numbers_.substring(2,5)+','+ numbers_.substring(5,8)+','+ numbers_.substring(8,len);break; \n                   default : break;\n               }break;\n        case 4 : \n               switch(mod){\n                  case 0 : display  = numbers_.substring(0,3)+','+ numbers_.substring(3,6)+','+ numbers_.substring(6,9)+','+ numbers_.substring(9,len);break; \n                  case 1 : display  = numbers_.substring(0,1)+','+ numbers_.substring(1,4)+','+ numbers_.substring(4,7)+','+ numbers_.substring(7,10)+','+ numbers_.substring(10,len);break; \n                  case 2 : display  = numbers_.substring(0,2)+','+ numbers_.substring(2,5)+','+ numbers_.substring(5,8)+','+ numbers_.substring(8,11)+','+ numbers_.substring(11,len);break; \n                  default : break;\n              }break;\n        \n        case 5 : \n              switch(mod){\n                 case 0 : display  = numbers_.substring(0,3)+','+ numbers_.substring(3,6)+','+ numbers_.substring(6,9)+','+ numbers_.substring(9,12)+','+ numbers_.substring(12,len);break; \n                 case 1 : display  = numbers_.substring(0,1)+','+ numbers_.substring(1,4)+','+ numbers_.substring(4,7)+','+ numbers_.substring(7,10)+','+ numbers_.substring(10,13)+','+ numbers_.substring(13,len);break; \n                 case 2 : display  = numbers_.substring(0,2)+','+ numbers_.substring(2,5)+','+ numbers_.substring(5,8)+','+ numbers_.substring(8,11)+','+ numbers_.substring(11,14)+','+ numbers_.substring(14,len);break; \n                 default : break;\n             }break;\n\n        case 6 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break\n        case 7 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break\n        case 8 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break\n        case 9 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break\n        case 10 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break \n        case 11 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break \n        case 12 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break\n        case 13 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break\n        case 14 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break\n        case 15 : display = numbers_.substring(0,1)+'.'+ numbers_.substring(1,3)+'e'+len;break         \n        default: break;\n    }\n    return display\n}\n\n\nexport default formatter"]},"metadata":{},"sourceType":"module"}