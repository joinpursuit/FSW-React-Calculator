{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/GITHUB/REPOSITORIES PINNED/Calculator/src/App.js\";\nimport 'css-doodle';\nimport './App.css';\nimport React from 'react';\nimport Navigation from './components/Navigation';\nimport Calculator from './components/Calculator';\nimport formatter from './helpers/formatter';\nimport data from './helpers/data';\nimport { create, all } from 'mathjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst config = {};\nconst math = create(all, config);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: [],\n      evaluate: [],\n      numbers: []\n    };\n    this.isClicked = this.isClicked.bind(this);\n  }\n\n  isClicked(value, className, number) {\n    if (isNaN(number)) {\n      if (className.includes('result')) {\n        const doMath = math.evaluate(this.state.evaluate.join('').trim());\n        console.log('Math');\n        console.log(doMath);\n        const numArray = String(doMath).split('').map(doMath => {\n          return Number(doMath);\n        });\n        this.setState({\n          numbers: [doMath],\n          evaluate: [...this.state.evaluate, ' = ', doMath]\n        });\n      } else {\n        console.log(this.state.numbers);\n        const nums = parseInt(this.state.numbers.join(''));\n        console.log(nums);\n        this.setState({\n          numbers: [],\n          evaluate: [...this.state.evaluate, ' ', value, ' ']\n        });\n      }\n    } else {\n      this.setState({\n        numbers: [...this.state.numbers, number],\n        evaluate: [...this.state.evaluate, number]\n      });\n    }\n  }\n\n  render() {\n    const skeleton = data;\n    const numbers = this.state.numbers;\n    const evaluate = this.state.evaluate;\n    const format = formatter;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Calculator, {\n        skeleton: skeleton,\n        isClicked: this.isClicked,\n        numbers: numbers,\n        evaluate: evaluate,\n        format: format\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOSITORIES PINNED/Calculator/src/App.js"],"names":["React","Navigation","Calculator","formatter","data","create","all","config","math","App","Component","constructor","props","state","display","evaluate","numbers","isClicked","bind","value","className","number","isNaN","includes","doMath","join","trim","console","log","numArray","String","split","map","Number","setState","nums","parseInt","render","skeleton","format"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,QAA5B;;;AAEA,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,IAAI,GAAGH,MAAM,CAACC,GAAD,EAAMC,MAAN,CAAnB;;AAEA,MAAME,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,OAAO,EAAC;AAHG,KAAb;AAKA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACD;;AAEDD,EAAAA,SAAS,CAACE,KAAD,EAAOC,SAAP,EAAiBC,MAAjB,EAAwB;AAE/B,QAAGC,KAAK,CAACD,MAAD,CAAR,EAAiB;AAEf,UAAGD,SAAS,CAACG,QAAV,CAAmB,QAAnB,CAAH,EAAgC;AAC9B,cAAMC,MAAM,GAAGhB,IAAI,CAACO,QAAL,CAAc,KAAKF,KAAL,CAAWE,QAAX,CAAoBU,IAApB,CAAyB,EAAzB,EAA6BC,IAA7B,EAAd,CAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,cAAMK,QAAQ,GAAGC,MAAM,CAACN,MAAD,CAAN,CAAeO,KAAf,CAAqB,EAArB,EAAyBC,GAAzB,CAA8BR,MAAD,IAAU;AACtD,iBAAOS,MAAM,CAACT,MAAD,CAAb;AACD,SAFgB,CAAjB;AAGA,aAAKU,QAAL,CAAc;AACZlB,UAAAA,OAAO,EAAC,CAACQ,MAAD,CADI;AAEZT,UAAAA,QAAQ,EAAC,CAAC,GAAG,KAAKF,KAAL,CAAWE,QAAf,EAAwB,KAAxB,EAA8BS,MAA9B;AAFG,SAAd;AAID,OAXD,MAWK;AACLG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWG,OAAvB;AACA,cAAMmB,IAAI,GAAGC,QAAQ,CAAC,KAAKvB,KAAL,CAAWG,OAAX,CAAmBS,IAAnB,CAAwB,EAAxB,CAAD,CAArB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACA,aAAKD,QAAL,CAAc;AACZlB,UAAAA,OAAO,EAAC,EADI;AAEZD,UAAAA,QAAQ,EAAC,CAAC,GAAG,KAAKF,KAAL,CAAWE,QAAf,EAAwB,GAAxB,EAA4BI,KAA5B,EAAkC,GAAlC;AAFG,SAAd;AAID;AAEA,KAvBD,MAuBK;AACH,WAAKe,QAAL,CAAc;AACZlB,QAAAA,OAAO,EAAC,CAAC,GAAG,KAAKH,KAAL,CAAWG,OAAf,EAAuBK,MAAvB,CADI;AAEZN,QAAAA,QAAQ,EAAC,CAAC,GAAG,KAAKF,KAAL,CAAWE,QAAf,EAAwBM,MAAxB;AAFG,OAAd;AAID;AACF;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAGlC,IAAjB;AACA,UAAMY,OAAO,GAAG,KAAKH,KAAL,CAAWG,OAA3B;AACA,UAAMD,QAAQ,GAAI,KAAKF,KAAL,CAAWE,QAA7B;AACA,UAAMwB,MAAM,GAAGpC,SAAf;AACA,wBACE;AAAA,8BACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEmC,QAAtB;AAAgC,QAAA,SAAS,EAAE,KAAKrB,SAAhD;AAA2D,QAAA,OAAO,EAAED,OAApE;AAA6E,QAAA,QAAQ,EAAED,QAAvF;AAAiG,QAAA,MAAM,EAAEwB;AAAzG;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADF;AAMD;;AAvD+B;;AA0DlC,eAAe9B,GAAf","sourcesContent":["import 'css-doodle'\nimport './App.css'\nimport React from 'react'\nimport Navigation from './components/Navigation'\nimport Calculator from './components/Calculator'\nimport formatter from './helpers/formatter'\nimport data from './helpers/data'\nimport { create, all } from 'mathjs'\n\nconst config = { }\nconst math = create(all, config)\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      display: [],\n      evaluate: [],\n      numbers:[]\n    }\n    this.isClicked = this.isClicked.bind(this)\n  }\n  \n  isClicked(value,className,number){\n   \n    if(isNaN(number)){\n\n      if(className.includes('result')){\n        const doMath = math.evaluate(this.state.evaluate.join('').trim())\n        console.log('Math')\n        console.log(doMath)\n        const numArray = String(doMath).split('').map((doMath)=>{\n          return Number(doMath)\n        })\n        this.setState({\n          numbers:[doMath],\n          evaluate:[...this.state.evaluate,' = ',doMath]\n        })\n      }else{\n      console.log(this.state.numbers)\n      const nums = parseInt(this.state.numbers.join(''))\n      console.log(nums)\n      this.setState({\n        numbers:[],\n        evaluate:[...this.state.evaluate,' ',value,' ']\n      })\n    }\n      \n    }else{\n      this.setState({\n        numbers:[...this.state.numbers,number],\n        evaluate:[...this.state.evaluate,number]\n      })\n    }\n  }\n\n  render() {\n    const skeleton = data\n    const numbers = this.state.numbers\n    const evaluate  = this.state.evaluate\n    const format = formatter\n    return (\n      <>\n      <Navigation />\n      <Calculator skeleton={skeleton} isClicked={this.isClicked} numbers={numbers} evaluate={evaluate} format={format}/>\n    </>\n    )\n  }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}