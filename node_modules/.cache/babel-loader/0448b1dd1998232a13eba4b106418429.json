{"ast":null,"code":"var _jsxFileName = \"/Users/macpro/GITHUB/REPOSITORIES PINNED/Calculator/src/components/Buttons.js\";\nimport { render } from '@testing-library/react';\nimport React from 'react';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Buttons(props) {\n  const {\n    skeleton,\n    isClicked\n  } = props;\n\n  class Boton {\n    constructor(value, className) {\n      this.value = value;\n      this.className = className;\n      this.int = this.int.bind(this);\n    }\n\n    int() {\n      console.log(this);\n    }\n\n  }\n\n  const buttons = skeleton.map(item => {\n    const {\n      value,\n      className\n    } = item;\n    const button = new Boton(value, className);\n    return /*#__PURE__*/_jsxDEV(Button, {\n      value: button.value,\n      className: button.className,\n      isClicked: isClicked,\n      int: button.int\n    }, button.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: buttons\n  }, void 0, false);\n}\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOSITORIES PINNED/Calculator/src/components/Buttons.js"],"names":["render","React","Button","Buttons","props","skeleton","isClicked","Boton","constructor","value","className","int","bind","console","log","buttons","map","item","button"],"mappings":";AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAwBF,KAA9B;;AAGA,QAAMG,KAAN,CAAY;AACXC,IAAAA,WAAW,CAAEC,KAAF,EAAQC,SAAR,EAAmB;AAC5B,WAAKD,KAAL,GAAaA,KAAb;AACA,WAAKC,SAAL,GAAiBA,SAAjB;AACA,WAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,IAAT,CAAc,IAAd,CAAX;AACD;;AACDD,IAAAA,GAAG,GAAE;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;AARU;;AAaZ,QAAMC,OAAO,GAAGV,QAAQ,CAACW,GAAT,CAAaC,IAAI,IAAI;AACpC,UAAM;AAAER,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAuBO,IAA7B;AACA,UAAMC,MAAM,GAAG,IAAIX,KAAJ,CAAUE,KAAV,EAAiBC,SAAjB,CAAf;AAEC,wBACM,QAAC,MAAD;AAEC,MAAA,KAAK,EAAEQ,MAAM,CAACT,KAFf;AAGC,MAAA,SAAS,EAAES,MAAM,CAACR,SAHnB;AAIC,MAAA,SAAS,EAAEJ,SAJZ;AAKC,MAAA,GAAG,EAAEY,MAAM,CAACP;AALb,OACMO,MAAM,CAACT,KADb;AAAA;AAAA;AAAA;AAAA,YADN;AAUD,GAde,CAAhB;AAgBF,sBAAO;AAAA,cAAGM;AAAH,mBAAP;AACD;;KAlCQZ,O;AAoCT,eAAeA,OAAf","sourcesContent":["import { render } from '@testing-library/react'\nimport React from 'react'\nimport Button from './Button'\n\nfunction Buttons (props) {\n    const {skeleton, isClicked} = props\n  \n\n    class Boton {\n     constructor (value,className) {\n       this.value = value\n       this.className = className\n       this.int = this.int.bind(this)\n     }\n     int(){\n         console.log(this)\n     }\n    }\n\n\n  \n    const buttons = skeleton.map(item => {\n     const { value, className } = item\n     const button = new Boton(value, className)\n\n      return(\n            <Button \n             key={button.value}\n             value={button.value} \n             className={button.className}\n             isClicked={isClicked}\n             int={button.int}\n             />\n               \n        )\n    })\n\n  return <>{buttons}</>\n}\n\nexport default Buttons\n"]},"metadata":{},"sourceType":"module"}