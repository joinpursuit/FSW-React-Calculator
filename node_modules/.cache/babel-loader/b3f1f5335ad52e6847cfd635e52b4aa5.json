{"ast":null,"code":"var _assertThisInitialized = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _createForOfIteratorHelper = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _toArray = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/toArray\");\n\nvar _defineProperty = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _createClass = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _toConsumableArray = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"/Users/macpro/GITHUB/REPOS/Calculator/node_modules/@babel/runtime/helpers/slicedToArray\");\n\n/*! css-doodle@0.15.3 */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.CSSDoodle = factory());\n})(this, function () {\n  'use strict';\n\n  var _Property;\n\n  function iterator(input) {\n    var _index = 0,\n        col = 1,\n        line = 1;\n    return {\n      curr: function curr() {\n        var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        return input[_index + n];\n      },\n      end: function end() {\n        return input.length <= _index;\n      },\n      info: function info() {\n        return {\n          index: _index,\n          col: col,\n          line: line\n        };\n      },\n      index: function index(n) {\n        return n === undefined ? _index : _index = n;\n      },\n      next: function next() {\n        var next = input[_index++];\n        if (next == '\\n') line++, col = 0;else col++;\n        return next;\n      }\n    };\n  } // I'll make it work first\n\n\n  function parse(it) {\n    var word = '',\n        marks = [];\n    var groups = [],\n        result = {};\n\n    while (!it.end()) {\n      var c = it.curr();\n\n      if (c == '(') {\n        marks.push(c);\n        word = '';\n      } else if (c == ')' || c == ',') {\n        if (/^\\-\\-.+/.test(word)) {\n          if (!result.name) {\n            result.name = word;\n          } else {\n            if (!result.alternative) {\n              result.alternative = [];\n            }\n\n            result.alternative.push({\n              name: word\n            });\n          }\n        }\n\n        if (c == ')') {\n          if (marks[marks.length - 1] == '(') {\n            marks.pop();\n          } else {\n            throw new Error('bad match');\n          }\n        }\n\n        if (c == ',') {\n          if (!marks.length) {\n            groups.push(result);\n            result = {};\n          }\n        }\n\n        word = '';\n      } else if (!/\\s/.test(c)) {\n        word += c;\n      }\n\n      it.next();\n    }\n\n    if (marks.length) {\n      return [];\n    }\n\n    if (result.name) {\n      groups.push(result);\n    }\n\n    return groups;\n  }\n\n  function parse_var(input) {\n    input = input.trim();\n    var result = [];\n\n    if (!/^var\\(/.test(input)) {\n      return result;\n    }\n\n    var it = iterator(input);\n\n    try {\n      result = parse(it);\n    } catch (e) {\n      console.warn(e && e.message || 'Bad variables.');\n    }\n\n    return result;\n  }\n\n  function List(random) {\n    function make_array(arr) {\n      return Array.isArray(arr) ? arr : [arr];\n    }\n\n    function join(arr) {\n      var spliter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '\\n';\n      return (arr || []).join(spliter);\n    }\n\n    function last(arr) {\n      var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return arr[arr.length - n];\n    }\n\n    function first(arr) {\n      return arr[0];\n    }\n\n    function clone(arr) {\n      return JSON.parse(JSON.stringify(arr));\n    }\n\n    function shuffle(arr) {\n      var ret = Array.from ? Array.from(arr) : arr.slice();\n      var m = arr.length;\n\n      while (m) {\n        var i = ~~(random() * m--);\n        var t = ret[m];\n        ret[m] = ret[i];\n        ret[i] = t;\n      }\n\n      return ret;\n    }\n\n    function flat_map(arr, fn) {\n      if (Array.prototype.flatMap) return arr.flatMap(fn);\n      return arr.reduce(function (acc, x) {\n        return acc.concat(fn(x));\n      }, []);\n    }\n\n    function remove_empty_values(arr) {\n      return arr.filter(function (v) {\n        return v !== undefined && v !== null && String(v).trim().length;\n      });\n    }\n\n    return {\n      make_array: make_array,\n      join: join,\n      last: last,\n      first: first,\n      clone: clone,\n      shuffle: shuffle,\n      flat_map: flat_map,\n      remove_empty_values: remove_empty_values\n    };\n  }\n\n  var _List = List(),\n      first = _List.first,\n      last = _List.last,\n      clone = _List.clone;\n\n  var Tokens = {\n    func: function func() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return {\n        type: 'func',\n        name: name,\n        arguments: []\n      };\n    },\n    argument: function argument() {\n      return {\n        type: 'argument',\n        value: []\n      };\n    },\n    text: function text() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return {\n        type: 'text',\n        value: value\n      };\n    },\n    pseudo: function pseudo() {\n      var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return {\n        type: 'pseudo',\n        selector: selector,\n        styles: []\n      };\n    },\n    cond: function cond() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return {\n        type: 'cond',\n        name: name,\n        styles: [],\n        arguments: []\n      };\n    },\n    rule: function rule() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return {\n        type: 'rule',\n        property: property,\n        value: []\n      };\n    },\n    keyframes: function keyframes() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return {\n        type: 'keyframes',\n        name: name,\n        steps: []\n      };\n    },\n    step: function step() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return {\n        type: 'step',\n        name: name,\n        styles: []\n      };\n    }\n  };\n  var is = {\n    white_space: function white_space(c) {\n      return /[\\s\\n\\t]/.test(c);\n    },\n    line_break: function line_break(c) {\n      return /\\n/.test(c);\n    },\n    number: function number(n) {\n      return !isNaN(n);\n    },\n    pair: function pair(n) {\n      return ['\"', '(', ')', \"'\"].includes(n);\n    },\n    pair_of: function pair_of(c, n) {\n      return {\n        '\"': '\"',\n        \"'\": \"'\",\n        '(': ')'\n      }[c] == n;\n    }\n  }; // This should not be in the parser\n  // but I'll leave it here until the rewriting\n\n  var symbols = {\n    'π': Math.PI,\n    '∏': Math.PI\n  };\n\n  function throw_error(msg, _ref) {\n    var col = _ref.col,\n        line = _ref.line;\n    console.warn(\"(at line \".concat(line, \", column \").concat(col, \") \").concat(msg));\n  }\n\n  function get_text_value(input) {\n    if (input.trim().length) {\n      return is.number(+input) ? +input : input.trim();\n    } else {\n      return input;\n    }\n  }\n\n  function read_until(fn) {\n    return function (it, reset) {\n      var index = it.index();\n      var word = '';\n\n      while (!it.end()) {\n        var c = it.next();\n        if (fn(c)) break;else word += c;\n      }\n\n      if (reset) {\n        it.index(index);\n      }\n\n      return word;\n    };\n  }\n\n  function read_word(it, reset) {\n    var check = function check(c) {\n      return /[^\\w@]/.test(c);\n    };\n\n    return read_until(check)(it, reset);\n  }\n\n  function read_keyframe_name(it) {\n    return read_until(function (c) {\n      return /[\\s\\{]/.test(c);\n    })(it);\n  }\n\n  function read_line(it, reset) {\n    var check = function check(c) {\n      return is.line_break(c) || c == '{';\n    };\n\n    return read_until(check)(it, reset);\n  }\n\n  function read_step(it, extra) {\n    var c,\n        step = Tokens.step();\n\n    while (!it.end()) {\n      if ((c = it.curr()) == '}') break;\n\n      if (is.white_space(c)) {\n        it.next();\n        continue;\n      } else if (!step.name.length) {\n        step.name = read_selector(it);\n      } else {\n        step.styles.push(read_rule(it, extra));\n        if (it.curr() == '}') break;\n      }\n\n      it.next();\n    }\n\n    return step;\n  }\n\n  function read_steps(it, extra) {\n    var steps = [];\n    var c;\n\n    while (!it.end()) {\n      if ((c = it.curr()) == '}') break;else if (is.white_space(c)) {\n        it.next();\n        continue;\n      } else {\n        steps.push(read_step(it, extra));\n      }\n      it.next();\n    }\n\n    return steps;\n  }\n\n  function read_keyframes(it, extra) {\n    var keyframes = Tokens.keyframes(),\n        c;\n\n    while (!it.end()) {\n      if ((c = it.curr()) == '}') break;else if (!keyframes.name.length) {\n        read_word(it);\n        keyframes.name = read_keyframe_name(it);\n\n        if (!keyframes.name.length) {\n          throw_error('missing keyframes name', it.info());\n          break;\n        }\n\n        continue;\n      } else if (c == '{') {\n        it.next();\n        keyframes.steps = read_steps(it, extra);\n        break;\n      }\n      it.next();\n    }\n\n    return keyframes;\n  }\n\n  function read_comments(it) {\n    var flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    it.next();\n\n    while (!it.end()) {\n      var c = it.curr();\n\n      if (flag.inline) {\n        if (c == '\\n') break;\n      } else {\n        if ((c = it.curr()) == '*' && it.curr(1) == '/') break;\n      }\n\n      it.next();\n    }\n\n    if (!flag.inline) {\n      it.next();\n      it.next();\n    }\n  }\n\n  function read_tag(it) {\n    it.next();\n\n    while (!it.end()) {\n      var c = it.curr();\n      if (c == '>') break;\n      it.next();\n    }\n  }\n\n  function read_property(it) {\n    var prop = '',\n        c;\n\n    while (!it.end()) {\n      if ((c = it.curr()) == ':') break;else if (!is.white_space(c)) prop += c;\n      it.next();\n    }\n\n    return prop;\n  }\n\n  function read_arguments(it, composition, doodle) {\n    var args = [],\n        group = [],\n        stack = [],\n        arg = '',\n        c;\n\n    while (!it.end()) {\n      c = it.curr();\n\n      if (/[\\('\"`]/.test(c) && it.curr(-1) !== '\\\\') {\n        if (stack.length) {\n          if (c != '(' && c === last(stack)) {\n            stack.pop();\n          } else {\n            stack.push(c);\n          }\n        } else {\n          stack.push(c);\n        }\n\n        arg += c;\n      } else if (c == '@' && !doodle) {\n        if (!group.length) {\n          arg = arg.trimLeft();\n        }\n\n        if (arg.length) {\n          group.push(Tokens.text(arg));\n          arg = '';\n        }\n\n        group.push(read_func(it));\n      } else if (doodle && /[)]/.test(c) || !doodle && /[,)]/.test(c)) {\n        if (stack.length) {\n          if (c == ')') {\n            stack.pop();\n          }\n\n          arg += c;\n        } else {\n          if (arg.length) {\n            if (!group.length) {\n              group.push(Tokens.text(get_text_value(arg)));\n            } else {\n              group.push(Tokens.text(arg));\n            }\n\n            if (arg.startsWith('±') && !doodle) {\n              var raw = arg.substr(1);\n              var cloned = clone(group);\n              last(cloned).value = '-' + raw;\n              args.push(normalize_argument(cloned));\n              last(group).value = raw;\n            }\n          }\n\n          args.push(normalize_argument(group));\n          group = [];\n          arg = '';\n          if (c == ')') break;\n        }\n      } else {\n        if (symbols[c] && !/[0-9]/.test(it.curr(-1))) {\n          c = symbols[c];\n        }\n\n        arg += c;\n      }\n\n      if (composition && it.curr() == ')' && !stack.length) {\n        if (group.length) {\n          args.push(normalize_argument(group));\n        }\n\n        break;\n      } else {\n        it.next();\n      }\n    }\n\n    return args;\n  }\n\n  function normalize_argument(group) {\n    var result = group.map(function (arg) {\n      if (arg.type == 'text' && typeof arg.value == 'string') {\n        var value = String(arg.value);\n\n        if (value.includes('`')) {\n          arg.value = value = value.replace(/`/g, '\"');\n        }\n\n        arg.value = value.replace(/\\n+|\\s+/g, ' ');\n      }\n\n      return arg;\n    });\n    var ft = first(result) || {};\n    var ed = last(result) || {};\n\n    if (ft.type == 'text' && ed.type == 'text') {\n      var cf = first(ft.value);\n      var ce = last(ed.value);\n\n      if (typeof ft.value == 'string' && typeof ed.value == 'string') {\n        if (is.pair_of(cf, ce)) {\n          ft.value = ft.value.slice(1);\n          ed.value = ed.value.slice(0, ed.value.length - 1);\n          result.cluster = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function seperate_func_name(name) {\n    var fname = '',\n        extra = '';\n\n    if (/\\D$/.test(name) && !/\\d+x\\d+/.test(name) || Math[name.substr(1)]) {\n      return {\n        fname: name,\n        extra: extra\n      };\n    }\n\n    for (var i = name.length - 1; i >= 0; i--) {\n      var c = name[i];\n      var prev = name[i - 1];\n      var next = name[i + 1];\n\n      if (/[\\d.]/.test(c) || c == 'x' && /\\d/.test(prev) && /\\d/.test(next)) {\n        extra = c + extra;\n      } else {\n        fname = name.substring(0, i + 1);\n        break;\n      }\n    }\n\n    return {\n      fname: fname,\n      extra: extra\n    };\n  }\n\n  function read_func(it) {\n    var func = Tokens.func();\n    var name = '@',\n        c;\n    var has_argument = false;\n    it.next();\n\n    while (!it.end()) {\n      c = it.curr();\n      var composition = c == '.' && it.curr(1) == '@';\n      var next = it.curr(1);\n\n      if (c == '(' || composition) {\n        has_argument = true;\n        it.next();\n        func.arguments = read_arguments(it, composition, name === '@doodle' || name == '@shaders');\n        break;\n      } else if (!has_argument && next !== '(' && !/[0-9a-zA-Z_\\-.]/.test(next)) {\n        name += c;\n        break;\n      } else {\n        name += c;\n      }\n\n      it.next();\n    }\n\n    var _seperate_func_name = seperate_func_name(name),\n        fname = _seperate_func_name.fname,\n        extra = _seperate_func_name.extra;\n\n    func.name = fname;\n\n    if (extra.length) {\n      func.arguments.unshift([{\n        type: 'text',\n        value: extra\n      }]);\n    }\n\n    func.position = it.info().index;\n    return func;\n  }\n\n  function read_value(it) {\n    var text = Tokens.text(),\n        idx = 0,\n        skip = true,\n        c;\n    var value = [],\n        stack = [];\n    value[idx] = [];\n\n    while (!it.end()) {\n      c = it.curr();\n\n      if (skip && is.white_space(c)) {\n        it.next();\n        continue;\n      } else {\n        skip = false;\n      }\n\n      if (c == '\\n' && !is.white_space(it.curr(-1))) {\n        text.value += ' ';\n      } else if (c == ',' && !stack.length) {\n        if (text.value.length) {\n          value[idx].push(text);\n          text = Tokens.text();\n        }\n\n        value[++idx] = [];\n        skip = true;\n      } else if (/[;}]/.test(c)) {\n        if (text.value.length) {\n          value[idx].push(text);\n          text = Tokens.text();\n        }\n\n        break;\n      } else if (c == '@') {\n        if (text.value.length) {\n          value[idx].push(text);\n          text = Tokens.text();\n        }\n\n        value[idx].push(read_func(it));\n      } else if (!is.white_space(c) || !is.white_space(it.curr(-1))) {\n        if (c == '(') stack.push(c);\n        if (c == ')') stack.pop();\n\n        if (symbols[c] && !/[0-9]/.test(it.curr(-1))) {\n          c = symbols[c];\n        }\n\n        text.value += c;\n      }\n\n      it.next();\n    }\n\n    if (text.value.length) {\n      value[idx].push(text);\n    }\n\n    return value;\n  }\n\n  function read_selector(it) {\n    var selector = '',\n        c;\n\n    while (!it.end()) {\n      if ((c = it.curr()) == '{') break;else if (!is.white_space(c)) {\n        selector += c;\n      }\n      it.next();\n    }\n\n    return selector;\n  }\n\n  function read_cond_selector(it) {\n    var selector = {\n      name: '',\n      arguments: []\n    },\n        c;\n\n    while (!it.end()) {\n      if ((c = it.curr()) == '(') {\n        it.next();\n        selector.arguments = read_arguments(it);\n      } else if (/[){]/.test(c)) break;else if (!is.white_space(c)) selector.name += c;\n\n      it.next();\n    }\n\n    return selector;\n  }\n\n  function read_pseudo(it, extra) {\n    var pseudo = Tokens.pseudo(),\n        c;\n\n    while (!it.end()) {\n      if ((c = it.curr()) == '}') break;\n\n      if (is.white_space(c)) {\n        it.next();\n        continue;\n      } else if (!pseudo.selector) {\n        pseudo.selector = read_selector(it);\n      } else {\n        var rule = read_rule(it, extra);\n\n        if (rule.property == '@use') {\n          pseudo.styles = pseudo.styles.concat(rule.value);\n        } else {\n          pseudo.styles.push(rule);\n        }\n\n        if (it.curr() == '}') break;\n      }\n\n      it.next();\n    }\n\n    return pseudo;\n  }\n\n  function read_rule(it, extra) {\n    var rule = Tokens.rule(),\n        c;\n\n    while (!it.end()) {\n      if ((c = it.curr()) == ';') break;else if (!rule.property.length) {\n        rule.property = read_property(it);\n\n        if (rule.property == '@use') {\n          rule.value = read_var(it, extra);\n          break;\n        }\n      } else {\n        rule.value = read_value(it);\n        break;\n      }\n      it.next();\n    }\n\n    return rule;\n  }\n\n  function read_cond(it, extra) {\n    var cond = Tokens.cond(),\n        c;\n\n    while (!it.end()) {\n      if ((c = it.curr()) == '}') break;else if (!cond.name.length) {\n        Object.assign(cond, read_cond_selector(it));\n      } else if (c == ':') {\n        var pseudo = read_pseudo(it);\n        if (pseudo.selector) cond.styles.push(pseudo);\n      } else if (c == '@' && !read_line(it, true).includes(':')) {\n        cond.styles.push(read_cond(it));\n      } else if (!is.white_space(c)) {\n        var rule = read_rule(it, extra);\n        if (rule.property) cond.styles.push(rule);\n        if (it.curr() == '}') break;\n      }\n      it.next();\n    }\n\n    return cond;\n  }\n\n  function read_variable(extra, name) {\n    var rule = '';\n\n    if (extra && extra.get_variable) {\n      rule = extra.get_variable(name);\n    }\n\n    return rule;\n  }\n\n  function evaluate_value(values, extra) {\n    values.forEach && values.forEach(function (v) {\n      if (v.type == 'text' && v.value) {\n        var vars = parse_var(v.value);\n        v.value = vars.reduce(function (ret, p) {\n          var rule = '',\n              other = '',\n              parsed;\n          rule = read_variable(extra, p.name);\n\n          if (!rule && p.alternative) {\n            p.alternative.every(function (n) {\n              other = read_variable(extra, n.name);\n\n              if (other) {\n                rule = other;\n                return false;\n              }\n            });\n          }\n\n          try {\n            parsed = parse$1(rule, extra);\n          } catch (e) {}\n\n          if (parsed) {\n            ret.push.apply(ret, parsed);\n          }\n\n          return ret;\n        }, []);\n      }\n\n      if (v.type == 'func' && v.arguments) {\n        v.arguments.forEach(function (arg) {\n          evaluate_value(arg, extra);\n        });\n      }\n    });\n  }\n\n  function read_var(it, extra) {\n    it.next();\n    var groups = read_value(it) || [];\n    return groups.reduce(function (ret, group) {\n      evaluate_value(group, extra);\n\n      var _group = _slicedToArray(group, 1),\n          token = _group[0];\n\n      if (token.value && token.value.length) {\n        ret.push.apply(ret, _toConsumableArray(token.value));\n      }\n\n      return ret;\n    }, []);\n  }\n\n  function parse$1(input, extra) {\n    var it = iterator(input);\n    var Tokens = [];\n\n    while (!it.end()) {\n      var c = it.curr();\n\n      if (is.white_space(c)) {\n        it.next();\n        continue;\n      } else if (c == '/' && it.curr(1) == '*') {\n        read_comments(it);\n      } else if (c == '/' && it.curr(1) == '/') {\n        read_comments(it, {\n          inline: true\n        });\n      } else if (c == ':') {\n        var pseudo = read_pseudo(it, extra);\n        if (pseudo.selector) Tokens.push(pseudo);\n      } else if (c == '@' && read_word(it, true) === '@keyframes') {\n        var keyframes = read_keyframes(it, extra);\n        Tokens.push(keyframes);\n      } else if (c == '@' && !read_line(it, true).includes(':')) {\n        var cond = read_cond(it, extra);\n        if (cond.name.length) Tokens.push(cond);\n      } else if (c == '<') {\n        read_tag(it);\n      } else if (!is.white_space(c)) {\n        var rule = read_rule(it, extra);\n        if (rule.property) Tokens.push(rule);\n      }\n\n      it.next();\n    }\n\n    return Tokens;\n  }\n\n  function clamp(num, min, max) {\n    return Math.max(min, Math.min(max, num));\n  }\n\n  function maybe(cond, value) {\n    if (!cond) return '';\n    return typeof value === 'function' ? value() : value;\n  }\n\n  function range(start, stop, step) {\n    var count = 0,\n        old = start;\n\n    var initial = function initial(n) {\n      return n > 0 && n < 1 ? .1 : 1;\n    };\n\n    var length = arguments.length;\n\n    if (length == 1) {\n      var _ref2 = [initial(start), start];\n      start = _ref2[0];\n      stop = _ref2[1];\n    }\n\n    if (length < 3) step = initial(start);\n    var range = [];\n\n    while (step >= 0 && start <= stop || step < 0 && start > stop) {\n      range.push(start);\n      start += step;\n      if (count++ >= 1000) break;\n    }\n\n    if (!range.length) range.push(old);\n    return range;\n  }\n\n  function alias_for(obj, names) {\n    Object.keys(names).forEach(function (n) {\n      obj[n] = obj[names[n]];\n    });\n    return obj;\n  }\n\n  function is_letter(c) {\n    return /^[a-zA-Z]$/.test(c);\n  }\n\n  function is_nil(s) {\n    return s === undefined || s === null;\n  }\n\n  function lazy(fn) {\n    var wrap = function wrap() {\n      return fn;\n    };\n\n    wrap.lazy = true;\n    return wrap;\n  }\n\n  function sequence(count, fn) {\n    var _String$split = String(count).split('x'),\n        _String$split2 = _slicedToArray(_String$split, 2),\n        x = _String$split2[0],\n        _String$split2$ = _String$split2[1],\n        y = _String$split2$ === void 0 ? 1 : _String$split2$;\n\n    x = clamp(parseInt(x) || 1, 1, 65536);\n    y = clamp(parseInt(y) || 1, 1, 65536);\n    var max = x * y;\n    var ret = [];\n    var index = 1;\n\n    for (var i = 1; i <= y; ++i) {\n      for (var j = 1; j <= x; ++j) {\n        ret.push(fn(index++, j, i, max));\n      }\n    }\n\n    return ret;\n  }\n\n  function cell_id(x, y, z) {\n    return 'c-' + x + '-' + y + '-' + z;\n  }\n\n  function get_value(input) {\n    while (input && input.value) {\n      return get_value(input.value);\n    }\n\n    return is_nil(input) ? '' : input;\n  }\n\n  function normalize_png_name(name) {\n    var prefix = is_nil(name) ? Date.now() : String(name).replace(/\\/.png$/g, '');\n    return prefix + '.png';\n  }\n\n  function cache_image(src, fn) {\n    var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.src = src;\n\n    img.onload = function () {\n      setTimeout(fn, delay);\n    };\n  }\n\n  function is_safari() {\n    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  }\n\n  function un_entity(code) {\n    var textarea = document.createElement('textarea');\n    textarea.innerHTML = code;\n    return textarea.value;\n  }\n\n  var min = 1,\n      max = 32,\n      total = 32 * 32;\n\n  function parse_grid(size) {\n    var _replace$replace$spli = (size + '').replace(/\\s+/g, '').replace(/[,，xX]+/g, 'x').split('x').map(function (n) {\n      return parseInt(n);\n    }),\n        _replace$replace$spli2 = _slicedToArray(_replace$replace$spli, 3),\n        x = _replace$replace$spli2[0],\n        y = _replace$replace$spli2[1],\n        z = _replace$replace$spli2[2];\n\n    var max_xy = x == 1 || y == 1 ? total : max;\n    var max_z = x == 1 && y == 1 ? total : min;\n    var ret = {\n      x: clamp(x || min, 1, max_xy),\n      y: clamp(y || x || min, 1, max_xy),\n      z: clamp(z || min, 1, max_z)\n    };\n    return Object.assign({}, ret, {\n      count: ret.x * ret.y * ret.z\n    });\n  }\n\n  function is_quote(c) {\n    return c == '\"' || c == \"'\";\n  }\n\n  function last$1(array) {\n    return array[array.length - 1];\n  }\n\n  function parse$2(input) {\n    var c = '';\n    var temp = '';\n    var name = '';\n    var stack = [];\n    var result = {\n      textures: []\n    };\n    var w = '';\n    var words = [];\n    var i = 0;\n\n    while ((c = input[i++]) !== undefined) {\n      if (c == '\"' || c == \"'\") {\n        if (last$1(stack) == c) {\n          stack.pop();\n        } else {\n          stack.push(c);\n        }\n      }\n\n      if (c == '{' && !is_quote(last$1(stack))) {\n        if (!stack.length) {\n          name = temp;\n          temp = '';\n        } else {\n          temp += c;\n        }\n\n        stack.push(c);\n      } else if (c == '}' && !is_quote(last$1(stack))) {\n        stack.pop();\n\n        if (!stack.length) {\n          var key = name.trim();\n          var value = temp.trim().replace(/^\\(+|\\)+$/g, '');\n\n          if (key.length) {\n            if (key.startsWith('texture')) {\n              result.textures.push({\n                name: key,\n                value: value\n              });\n            } else {\n              result[key] = value;\n            }\n          }\n\n          name = temp = '';\n        } else {\n          temp += c;\n        }\n      } else {\n        if (/\\s/.test(c) && w.length) {\n          words.push(w);\n          w = '';\n          var need_break = words[words.length - 3] == '#define' || words[words.length - 2] == '#ifdef' || words[words.length - 1] == '#else' || words[words.length - 1] == '#endif';\n\n          if (need_break) {\n            temp = temp + '\\n';\n          }\n        } else {\n          w += c;\n        }\n\n        temp += c;\n      }\n    }\n\n    if (result.fragment === undefined) {\n      return {\n        fragment: input,\n        textures: []\n      };\n    }\n\n    return result;\n  }\n\n  function create_svg_url(svg, id) {\n    var encoded = encodeURIComponent(svg) + (id ? \"#\".concat(id) : '');\n    return \"url(\\\"data:image/svg+xml;utf8,\".concat(encoded, \"\\\")\");\n  }\n\n  function normalize_svg(input) {\n    var xmlns = 'xmlns=\"http://www.w3.org/2000/svg\"';\n\n    if (!input.includes('<svg')) {\n      input = \"<svg \".concat(xmlns, \">\").concat(input, \"</svg>\");\n    }\n\n    if (!input.includes('xmlns')) {\n      input = input.replace(/<svg([\\s>])/, \"<svg \".concat(xmlns, \"$1\"));\n    }\n\n    return input;\n  }\n\n  function svg_to_png(svg, width, height, scale) {\n    return new Promise(function (resolve, reject) {\n      var source = \"data:image/svg+xml;utf8,\".concat(encodeURIComponent(svg));\n\n      function action() {\n        var img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.src = source;\n\n        img.onload = function () {\n          var canvas = document.createElement('canvas');\n          var ctx = canvas.getContext('2d');\n          var dpr = window.devicePixelRatio || 1;\n          /* scale with devicePixelRatio only when the scale equals 1 */\n\n          if (scale != 1) {\n            dpr = 1;\n          }\n\n          canvas.width = width * dpr;\n          canvas.height = height * dpr;\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n          try {\n            canvas.toBlob(function (blob) {\n              resolve({\n                blob: blob,\n                source: source,\n                url: URL.createObjectURL(blob)\n              });\n            });\n          } catch (e) {\n            reject(e);\n          }\n        };\n      }\n\n      if (is_safari) {\n        cache_image(source, action, 200);\n      } else {\n        action();\n      }\n    });\n  }\n\n  function random_func(random) {\n    function lerp(start, end, t) {\n      return start * (1 - t) + end * t;\n    }\n\n    function rand() {\n      var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : start;\n\n      if (arguments.length == 1) {\n        if (start == 1) start = 0;else if (start < 1) start /= 10;else start = 1;\n      }\n\n      return lerp(start, end, random());\n    }\n\n    function nrand() {\n      var mean = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var scale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var u1 = 0,\n          u2 = 0; //Convert [0,1) to (0,1)\n\n      while (u1 === 0) {\n        u1 = random();\n      }\n\n      while (u2 === 0) {\n        u2 = random();\n      }\n\n      var R = Math.sqrt(-2.0 * Math.log(u1));\n      var t = 2.0 * Math.PI * u2;\n      var u0 = R * Math.cos(t);\n      return mean + scale * u0;\n    }\n\n    function pick() {\n      for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n        items[_key] = arguments[_key];\n      }\n\n      var args = items.reduce(function (acc, n) {\n        return acc.concat(n);\n      }, []);\n      return args[~~(random() * args.length)];\n    }\n\n    function unique_id() {\n      var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return prefix + Math.random().toString(32).substr(2);\n    }\n\n    return {\n      lerp: lerp,\n      rand: rand,\n      nrand: nrand,\n      pick: pick,\n      unique_id: unique_id\n    };\n  }\n\n  function by_unit(fn) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var unit = get_unit(args);\n      return restore(fn, unit).apply(null, args);\n    };\n  }\n\n  function restore(fn, unit) {\n    return function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      args = args.map(function (str) {\n        return Number(String(str).replace(/\\D+$/g, ''));\n      });\n      var result = fn.apply(null, args);\n\n      if (!unit.length) {\n        return result;\n      }\n\n      if (Array.isArray(result)) {\n        return result.map(function (n) {\n          return n + unit;\n        });\n      }\n\n      return result + unit;\n    };\n  }\n\n  function get_unit(values) {\n    var unit = '';\n    values.some(function (str) {\n      var input = String(str).trim();\n      if (!input) return '';\n      var matched = input.match(/\\d(\\D+)$/);\n      return unit = matched ? matched[1] : '';\n    });\n    return unit;\n  }\n\n  function by_charcode(fn) {\n    return function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var codes = args.map(function (n) {\n        return String(n).charCodeAt(0);\n      });\n      var result = fn.apply(null, codes);\n      return Array.isArray(result) ? result.map(function (n) {\n        return String.fromCharCode(n);\n      }) : String.fromCharCode(result);\n    };\n  }\n  /**\n   * Based on the Shunting-yard algorithm.\n   */\n\n\n  var _List2 = List(),\n      last$2 = _List2.last;\n\n  var default_context = {\n    'π': Math.PI,\n    '∏': Math.PI\n  };\n\n  function _calc(input, context) {\n    var expr = infix_to_postfix(input);\n    return calc$1(expr, Object.assign(default_context, context));\n  }\n\n  var operator = {\n    '^': 4,\n    '*': 3,\n    '/': 3,\n    '%': 3,\n    '+': 2,\n    '-': 2,\n    '(': 1,\n    ')': 1\n  };\n\n  function calc$1(expr, context) {\n    var repeat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var stack = [];\n\n    while (expr.length) {\n      var _expr$shift = expr.shift(),\n          name = _expr$shift.name,\n          value = _expr$shift.value,\n          type = _expr$shift.type;\n\n      if (type === 'variable') {\n        var result = context[value];\n\n        if (typeof result === 'undefined') {\n          result = Math[value];\n        }\n\n        if (typeof result === 'undefined') {\n          result = expand(value, context);\n        }\n\n        if (typeof result === 'undefined') {\n          result = 0;\n        }\n\n        if (typeof result !== 'number') {\n          repeat.push(result);\n\n          if (is_cycle(repeat)) {\n            result = 0;\n            repeat = [];\n          } else {\n            result = calc$1(infix_to_postfix(result), context, repeat);\n          }\n        }\n\n        stack.push(result);\n      } else if (type === 'function') {\n        var output = value.map(function (v) {\n          return calc$1(v, context);\n        });\n        var fns = name.split('.');\n        var fname = void 0;\n\n        while (fname = fns.pop()) {\n          if (!fname) continue;\n          var fn = context[fname] || Math[fname];\n          output = typeof fn === 'function' ? Array.isArray(output) ? fn.apply(void 0, _toConsumableArray(output)) : fn(output) : 0;\n        }\n\n        stack.push(output);\n      } else {\n        if (/\\d+/.test(value)) stack.push(value);else {\n          var right = stack.pop();\n          var left = stack.pop();\n          stack.push(compute(value, Number(left), Number(right)));\n        }\n      }\n    }\n\n    return stack[0];\n  }\n\n  function get_tokens(input) {\n    var expr = String(input);\n    var tokens = [],\n        num = '';\n\n    for (var i = 0; i < expr.length; ++i) {\n      var c = expr[i];\n\n      if (operator[c]) {\n        if (c == '-' && expr[i - 1] == 'e') {\n          num += c;\n        } else if (!tokens.length && !num.length && /[+-]/.test(c)) {\n          num += c;\n        } else {\n          var _ref3 = last$2(tokens) || {},\n              type = _ref3.type,\n              value = _ref3.value;\n\n          if (type == 'operator' && !num.length && /[^()]/.test(c) && /[^()]/.test(value)) {\n            num += c;\n          } else {\n            if (num.length) {\n              tokens.push({\n                type: 'number',\n                value: num\n              });\n              num = '';\n            }\n\n            tokens.push({\n              type: 'operator',\n              value: c\n            });\n          }\n        }\n      } else if (/\\S/.test(c)) {\n        if (c == ',') {\n          tokens.push({\n            type: 'number',\n            value: num\n          });\n          num = '';\n          tokens.push({\n            type: 'comma',\n            value: c\n          });\n        } else {\n          num += c;\n        }\n      }\n    }\n\n    if (num.length) {\n      tokens.push({\n        type: 'number',\n        value: num\n      });\n    }\n\n    return tokens;\n  }\n\n  function infix_to_postfix(input) {\n    var tokens = get_tokens(input);\n    var op_stack = [],\n        expr = [];\n\n    for (var i = 0; i < tokens.length; ++i) {\n      var _tokens$i = tokens[i],\n          type = _tokens$i.type,\n          value = _tokens$i.value;\n      var next = tokens[i + 1] || {};\n\n      if (type == 'number') {\n        if (next.value == '(' && /[^\\d.]/.test(value)) {\n          var func_body = '';\n          var stack = [];\n          var values = [];\n          i += 1;\n\n          while (tokens[i++] !== undefined) {\n            var token = tokens[i];\n            if (token === undefined) break;\n            var c = token.value;\n\n            if (c == ')') {\n              if (!stack.length) break;\n              stack.pop();\n              func_body += c;\n            } else {\n              if (c == '(') stack.push(c);\n\n              if (c == ',' && !stack.length) {\n                var arg = infix_to_postfix(func_body);\n                if (arg.length) values.push(arg);\n                func_body = '';\n              } else {\n                func_body += c;\n              }\n            }\n          }\n\n          if (func_body.length) {\n            values.push(infix_to_postfix(func_body));\n          }\n\n          expr.push({\n            type: 'function',\n            name: value,\n            value: values\n          });\n        } else if (/[^\\d.]/.test(value)) {\n          expr.push({\n            type: 'variable',\n            value: value\n          });\n        } else {\n          expr.push({\n            type: 'number',\n            value: value\n          });\n        }\n      } else if (type == 'operator') {\n        if (value == '(') {\n          op_stack.push(value);\n        } else if (value == ')') {\n          while (op_stack.length && last$2(op_stack) != '(') {\n            expr.push({\n              type: 'operator',\n              value: op_stack.pop()\n            });\n          }\n\n          op_stack.pop();\n        } else {\n          while (op_stack.length && operator[last$2(op_stack)] >= operator[value]) {\n            var op = op_stack.pop();\n            if (!/[()]/.test(op)) expr.push({\n              type: 'operator',\n              value: op\n            });\n          }\n\n          op_stack.push(value);\n        }\n      }\n    }\n\n    while (op_stack.length) {\n      expr.push({\n        type: 'operator',\n        value: op_stack.pop()\n      });\n    }\n\n    return expr;\n  }\n\n  function compute(op, a, b) {\n    switch (op) {\n      case '+':\n        return a + b;\n\n      case '-':\n        return a - b;\n\n      case '*':\n        return a * b;\n\n      case '/':\n        return a / b;\n\n      case '%':\n        return a % b;\n\n      case '^':\n        return Math.pow(a, b);\n    }\n  }\n\n  function expand(value, context) {\n    var _ref4 = value.match(/([\\d.]+)(.*)/) || [],\n        _ref5 = _slicedToArray(_ref4, 3),\n        _ = _ref5[0],\n        num = _ref5[1],\n        variable = _ref5[2];\n\n    var v = context[variable];\n\n    if (v === undefined) {\n      return v;\n    }\n\n    if (typeof v === 'number') {\n      return Number(num) * v;\n    } else {\n      return num * calc$1(infix_to_postfix(v), context);\n    }\n  }\n\n  function is_cycle(array) {\n    return array[0] == array[2] && array[1] == array[3];\n  }\n\n  var store = {};\n\n  function memo(prefix, fn) {\n    return function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      var key = prefix + args.join('-');\n      if (store[key]) return store[key];\n      return store[key] = fn.apply(null, args);\n    };\n  }\n\n  var _List3 = List(),\n      last$3 = _List3.last,\n      flat_map = _List3.flat_map;\n\n  function expand$1(fn) {\n    return function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return fn.apply(null, flat_map(args, function (n) {\n        return String(n).startsWith('[') ? build_range(n) : n;\n      }));\n    };\n  }\n\n  function Type(type, value) {\n    return {\n      type: type,\n      value: value\n    };\n  }\n\n  function get_tokens$1(input) {\n    var expr = String(input);\n    var tokens = [],\n        stack = [];\n\n    if (!expr.startsWith('[') || !expr.endsWith(']')) {\n      return tokens;\n    }\n\n    for (var i = 1; i < expr.length - 1; ++i) {\n      var c = expr[i];\n\n      if (c == '-' && expr[i - 1] == '-') {\n        continue;\n      }\n\n      if (c == '-') {\n        stack.push(c);\n        continue;\n      }\n\n      if (last$3(stack) == '-') {\n        stack.pop();\n        var from = stack.pop();\n        tokens.push(from ? Type('range', [from, c]) : Type('char', c));\n        continue;\n      }\n\n      if (stack.length) {\n        tokens.push(Type('char', stack.pop()));\n      }\n\n      stack.push(c);\n    }\n\n    if (stack.length) {\n      tokens.push(Type('char', stack.pop()));\n    }\n\n    return tokens;\n  }\n\n  var build_range = memo('build_range', function (input) {\n    var tokens = get_tokens$1(input);\n    return flat_map(tokens, function (_ref6) {\n      var type = _ref6.type,\n          value = _ref6.value;\n      if (type == 'char') return value;\n\n      var _value = _slicedToArray(value, 2),\n          from = _value[0],\n          to = _value[1];\n\n      var reverse = false;\n\n      if (from > to) {\n        var _ref7 = [to, from];\n        from = _ref7[0];\n        to = _ref7[1];\n        reverse = true;\n      }\n\n      var result = by_charcode(range)(from, to);\n      if (reverse) result.reverse();\n      return result;\n    });\n  });\n\n  var Node = function Node(data) {\n    _classCallCheck(this, Node);\n\n    this.prev = this.next = null;\n    this.data = data;\n  };\n\n  var Stack = /*#__PURE__*/function () {\n    function Stack() {\n      var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 20;\n\n      _classCallCheck(this, Stack);\n\n      this._limit = limit;\n      this._size = 0;\n    }\n\n    _createClass(Stack, [{\n      key: \"push\",\n      value: function push(data) {\n        if (this._size >= this._limit) {\n          this.root = this.root.next;\n          this.root.prev = null;\n        }\n\n        var node = new Node(data);\n\n        if (!this.root) {\n          this.root = this.tail = node;\n        } else {\n          node.prev = this.tail;\n          this.tail.next = node;\n          this.tail = node;\n        }\n\n        this._size++;\n      }\n    }, {\n      key: \"last\",\n      value: function last() {\n        var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        var node = this.tail;\n\n        while (--n) {\n          if (!node.prev) break;\n          node = node.prev;\n        }\n\n        return node.data;\n      }\n    }]);\n\n    return Stack;\n  }();\n\n  var cos = Math.cos,\n      sin = Math.sin,\n      sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      PI = Math.PI;\n  var DEG = PI / 180;\n\n  function polygon(option, fn) {\n    if (typeof arguments[0] == 'function') {\n      fn = option;\n      option = {};\n    }\n\n    if (!fn) {\n      fn = function fn(t) {\n        return [cos(t), sin(t)];\n      };\n    }\n\n    var split = option.split || 120;\n    var scale = option.scale || 1;\n    var start = DEG * (option.start || 0);\n    var deg = option.deg ? option.deg * DEG : PI / (split / 2);\n    var points = [];\n\n    var add_point = function add_point(_ref8, scale) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n          x = _ref9[0],\n          y = _ref9[1];\n\n      points.push(x * 50 * scale + 50 + '% ' + (y * 50 * scale + 50 + '%'));\n    };\n\n    var first, first2;\n\n    for (var i = 0; i < split; ++i) {\n      var t = start - deg * i;\n      var point = fn(t, i);\n      if (!i) first = point;\n      add_point(point, scale);\n    }\n\n    if (option.frame !== undefined) {\n      add_point(first, scale);\n      var w = (option.frame || 1) / 100;\n      if (w <= 0) w = 2 / 1000;\n\n      for (var _i = 0; _i < split; ++_i) {\n        var _t = start + deg * _i;\n\n        var _fn2 = fn(_t, _i),\n            _fn3 = _slicedToArray(_fn2, 2),\n            x = _fn3[0],\n            y = _fn3[1];\n\n        var theta = atan2(y, x);\n        var _point = [x - w * cos(theta), y - w * sin(theta)];\n        if (!_i) first2 = _point;\n        add_point(_point, scale);\n      }\n\n      add_point(first2, scale);\n      add_point(first, scale);\n    }\n\n    option.type = read_fillrule(option['fill-rule']);\n    return option.type ? \"polygon(\".concat(option.type, \", \").concat(points.join(','), \")\") : \"polygon(\".concat(points.join(','), \")\");\n  }\n\n  function read_fillrule(value) {\n    return value === 'nonzero' || value == 'evenodd' ? value : '';\n  }\n\n  function rotate(x, y, deg) {\n    var rad = DEG * deg;\n    return [x * cos(rad) - y * sin(rad), y * cos(rad) + x * sin(rad)];\n  }\n\n  function translate(x, y, offset) {\n    var _String$split$map = String(offset).split(/[,\\s]/).map(Number),\n        _String$split$map2 = _slicedToArray(_String$split$map, 2),\n        dx = _String$split$map2[0],\n        _String$split$map2$ = _String$split$map2[1],\n        dy = _String$split$map2$ === void 0 ? dx : _String$split$map2$;\n\n    return [x + (dx || 0), y + (dy || 0)];\n  }\n\n  var shapes = {\n    circle: function circle() {\n      return 'circle(49%)';\n    },\n    triangle: function triangle() {\n      return polygon({\n        split: 3,\n        start: -90\n      }, function (t) {\n        return [cos(t) * 1.1, sin(t) * 1.1 + .2];\n      });\n    },\n    rhombus: function rhombus() {\n      return polygon({\n        split: 4\n      });\n    },\n    pentagon: function pentagon() {\n      return polygon({\n        split: 5,\n        start: 54\n      });\n    },\n    hexgon: function hexgon() {\n      return polygon({\n        split: 6,\n        start: 30\n      });\n    },\n    hexagon: function hexagon() {\n      return polygon({\n        split: 6,\n        start: 30\n      });\n    },\n    heptagon: function heptagon() {\n      return polygon({\n        split: 7,\n        start: -90\n      });\n    },\n    octagon: function octagon() {\n      return polygon({\n        split: 8,\n        start: 22.5\n      });\n    },\n    star: function star() {\n      return polygon({\n        split: 5,\n        start: 54,\n        deg: 144\n      });\n    },\n    diamond: function diamond() {\n      return 'polygon(50% 5%, 80% 50%, 50% 95%, 20% 50%)';\n    },\n    cross: function cross() {\n      return \"polygon(\\n      5% 35%,  35% 35%, 35% 5%,  65% 5%,\\n      65% 35%, 95% 35%, 95% 65%, 65% 65%,\\n      65% 95%, 35% 95%, 35% 65%, 5% 65%\\n    )\";\n    },\n    clover: function clover() {\n      var k = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n      k = clamp(k, 3, 5);\n      if (k == 4) k = 2;\n      return polygon({\n        split: 240\n      }, function (t) {\n        var x = cos(k * t) * cos(t);\n        var y = cos(k * t) * sin(t);\n        if (k == 3) x -= .2;\n\n        if (k == 2) {\n          x /= 1.1;\n          y /= 1.1;\n        }\n\n        return [x, y];\n      });\n    },\n    hypocycloid: function hypocycloid() {\n      var k = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n      k = clamp(k, 3, 6);\n      var m = 1 - k;\n      return polygon({\n        scale: 1 / k\n      }, function (t) {\n        var x = m * cos(t) + cos(m * (t - PI));\n        var y = m * sin(t) + sin(m * (t - PI));\n\n        if (k == 3) {\n          x = x * 1.1 - .6;\n          y = y * 1.1;\n        }\n\n        return [x, y];\n      });\n    },\n    astroid: function astroid() {\n      return shapes.hypocycloid(4);\n    },\n    infinity: function infinity() {\n      return polygon(function (t) {\n        var a = .7 * sqrt(2) * cos(t);\n        var b = pow(sin(t), 2) + 1;\n        return [a / b, a * sin(t) / b];\n      });\n    },\n    heart: function heart() {\n      return polygon(function (t) {\n        var x = .75 * pow(sin(t), 3);\n        var y = cos(1 * t) * (13 / 18) - cos(2 * t) * (5 / 18) - cos(3 * t) / 18 - cos(4 * t) / 18;\n        return rotate(x * 1.2, (y + .2) * 1.1, 180);\n      });\n    },\n    bean: function bean() {\n      return polygon(function (t) {\n        var _ref10 = [pow(sin(t), 3), pow(cos(t), 3)],\n            a = _ref10[0],\n            b = _ref10[1];\n        return rotate((a + b) * cos(t) * 1.3 - .45, (a + b) * sin(t) * 1.3 - .45, -90);\n      });\n    },\n    bicorn: function bicorn() {\n      return polygon(function (t) {\n        return rotate(cos(t), pow(sin(t), 2) / (2 + sin(t)) - .5, 180);\n      });\n    },\n    drop: function drop() {\n      return polygon(function (t) {\n        return rotate(sin(t), (1 + sin(t)) * cos(t) / 1.4, 90);\n      });\n    },\n    pear: function pear() {\n      return polygon(function (t) {\n        return [sin(t), (1 + sin(t)) * cos(t) / 1.4];\n      });\n    },\n    fish: function fish() {\n      return polygon(function (t) {\n        return [cos(t) - pow(sin(t), 2) / sqrt(2), sin(2 * t) / 2];\n      });\n    },\n    whale: function whale() {\n      return polygon({\n        split: 240\n      }, function (t) {\n        var r = 3.4 * (pow(sin(t), 2) - .5) * cos(t);\n        return rotate(cos(t) * r + .75, sin(t) * r * 1.2, 180);\n      });\n    },\n    bud: function bud() {\n      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n      n = clamp(n, 3, 10);\n      return polygon({\n        split: 240\n      }, function (t) {\n        return [(1 + .2 * cos(n * t)) * cos(t) * .8, (1 + .2 * cos(n * t)) * sin(t) * .8];\n      });\n    },\n    alien: function alien() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      var _args$map = args.map(function (n) {\n        return clamp(n, 1, 9);\n      }),\n          _args$map2 = _slicedToArray(_args$map, 5),\n          _args$map2$ = _args$map2[0],\n          a = _args$map2$ === void 0 ? 1 : _args$map2$,\n          _args$map2$2 = _args$map2[1],\n          b = _args$map2$2 === void 0 ? 1 : _args$map2$2,\n          _args$map2$3 = _args$map2[2],\n          c = _args$map2$3 === void 0 ? 1 : _args$map2$3,\n          _args$map2$4 = _args$map2[3],\n          d = _args$map2$4 === void 0 ? 1 : _args$map2$4,\n          _args$map2$5 = _args$map2[4],\n          e = _args$map2$5 === void 0 ? 1 : _args$map2$5;\n\n      return polygon({\n        split: 480,\n        type: 'evenodd'\n      }, function (t) {\n        return [(cos(t * a) + cos(t * c) + cos(t * e)) * .31, (sin(t * b) + sin(t * d) + sin(t)) * .31];\n      });\n    }\n  };\n\n  function is_empty(value) {\n    return is_nil(value) || value === '';\n  }\n\n  function custom_shape(props) {\n    var option = Object.assign({}, props, {\n      split: clamp(parseInt(props.split) || 0, 3, 3600),\n      start: 0\n    });\n\n    if (props.degree) {\n      props.rotate = props.degree;\n    }\n\n    var px = is_empty(props.x) ? 'cos(t)' : props.x;\n    var py = is_empty(props.y) ? 'sin(t)' : props.y;\n    var pr = is_empty(props.r) ? '' : props.r;\n    return polygon(option, function (t, i) {\n      var context = Object.assign({}, props, {\n        't': t,\n        'θ': t,\n        'seq': function seq() {\n          var _ref11;\n\n          if (!arguments.length) return '';\n          return _ref11 = i % arguments.length, _ref11 < 0 || arguments.length <= _ref11 ? undefined : arguments[_ref11];\n        }\n      });\n\n      var x = _calc(px, context);\n\n      var y = _calc(py, context);\n\n      if (pr) {\n        var r = _calc(pr, context);\n\n        x = r * Math.cos(t);\n        y = r * Math.sin(t);\n      }\n\n      if (props.rotate) {\n        var _rotate = rotate(x, y, Number(props.rotate) || 0);\n\n        var _rotate2 = _slicedToArray(_rotate, 2);\n\n        x = _rotate2[0];\n        y = _rotate2[1];\n      }\n\n      if (props.origin) {\n        var _translate = translate(x, y, props.origin);\n\n        var _translate2 = _slicedToArray(_translate, 2);\n\n        x = _translate2[0];\n        y = _translate2[1];\n      }\n\n      return [x, y];\n    });\n  }\n\n  function is_seperator(c, no_space) {\n    if (no_space) return /[,，]/.test(c);else return /[,，\\s]/.test(c);\n  }\n\n  function skip_seperator(it, no_space) {\n    while (!it.end()) {\n      if (!is_seperator(it.curr(1), no_space)) break;else it.next();\n    }\n  }\n\n  function parse$3(input) {\n    var no_space = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (is_nil(input)) input = '';\n    var it = iterator(String(input));\n    var result = [],\n        stack = [];\n    var group = '';\n\n    while (!it.end()) {\n      var c = it.curr();\n      if (c === undefined) break;\n\n      if (c == '(') {\n        group += c;\n        stack.push(c);\n      } else if (c == ')') {\n        group += c;\n\n        if (stack.length) {\n          stack.pop();\n        }\n      } else if (stack.length) {\n        group += c;\n      } else if (is_seperator(c, no_space)) {\n        result.push(group);\n        group = '';\n        skip_seperator(it, no_space);\n      } else {\n        group += c;\n      }\n\n      it.next();\n    }\n\n    if (!is_nil(group)) {\n      result.push(group);\n    }\n\n    return result;\n  }\n\n  function parse$4(input) {\n    var it = iterator(input);\n    var temp = '';\n    var result = {};\n    var key = '';\n    var value = '';\n\n    while (!it.end()) {\n      var c = it.curr();\n\n      if (c == '/' && it.curr(1) == '*') {\n        read_comments$1(it);\n      } else if (c == ':') {\n        key = temp;\n        temp = '';\n      } else if (c == ';') {\n        value = temp;\n        key = key.trim();\n        value = value.trim();\n\n        if (key.length && value.length) {\n          result[key] = value;\n        }\n\n        key = value = temp = '';\n      } else {\n        temp += c;\n      }\n\n      it.next();\n    }\n\n    key = key.trim();\n    temp = temp.trim();\n\n    if (key.length && temp.length) {\n      result[key] = temp;\n    }\n\n    return result;\n  }\n\n  function read_comments$1(it) {\n    var flag = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    it.next();\n\n    while (!it.end()) {\n      var c = it.curr();\n\n      if ((c = it.curr()) == '*' && it.curr(1) == '/') {\n        it.next();\n        it.next();\n        break;\n      }\n\n      it.next();\n    }\n  }\n\n  var uniform_time = {\n    'name': 'cssd-uniform-time',\n    'animation-name': 'cssd-uniform-time-animation',\n    'animation-duration': '31536000000',\n\n    /* one year in ms */\n    'animation-iteration-count': 'infinite',\n    'animation-delay': '0s',\n    'animation-direction': 'normal',\n    'animation-fill-mode': 'none',\n    'animation-play-state': 'running',\n    'animation-timing-function': 'linear'\n  };\n  uniform_time['animation'] = \"\\n  \".concat(uniform_time['animation-duration'], \"ms\\n  \").concat(uniform_time['animation-timing-function'], \"\\n  \").concat(uniform_time['animation-delay'], \"\\n  \").concat(uniform_time['animation-iteration-count'], \"\\n  \").concat(uniform_time['animation-name'], \"\\n\");\n\n  function get_exposed(random) {\n    var _Expose;\n\n    var _List4 = List(random),\n        shuffle = _List4.shuffle;\n\n    var _random_func = random_func(random),\n        _pick = _random_func.pick,\n        _rand = _random_func.rand,\n        _nrand = _random_func.nrand,\n        unique_id = _random_func.unique_id;\n\n    var Expose = (_Expose = {\n      index: function index(_ref12) {\n        var count = _ref12.count;\n        return function (_) {\n          return count;\n        };\n      },\n      row: function row(_ref13) {\n        var y = _ref13.y;\n        return function (_) {\n          return y;\n        };\n      },\n      col: function col(_ref14) {\n        var x = _ref14.x;\n        return function (_) {\n          return x;\n        };\n      },\n      depth: function depth(_ref15) {\n        var z = _ref15.z;\n        return function (_) {\n          return z;\n        };\n      },\n      size: function size(_ref16) {\n        var grid = _ref16.grid;\n        return function (_) {\n          return grid.count;\n        };\n      }\n    }, _defineProperty(_Expose, 'size-row', function sizeRow(_ref17) {\n      var grid = _ref17.grid;\n      return function (_) {\n        return grid.y;\n      };\n    }), _defineProperty(_Expose, 'size-col', function sizeCol(_ref18) {\n      var grid = _ref18.grid;\n      return function (_) {\n        return grid.x;\n      };\n    }), _defineProperty(_Expose, 'size-depth', function sizeDepth(_ref19) {\n      var grid = _ref19.grid;\n      return function (_) {\n        return grid.z;\n      };\n    }), _defineProperty(_Expose, \"id\", function id(_ref20) {\n      var x = _ref20.x,\n          y = _ref20.y,\n          z = _ref20.z;\n      return function (_) {\n        return cell_id(x, y, z);\n      };\n    }), _defineProperty(_Expose, \"n\", function n(_ref21) {\n      var extra = _ref21.extra;\n      return function (_) {\n        return extra ? extra[0] : '@n';\n      };\n    }), _defineProperty(_Expose, \"nx\", function nx(_ref22) {\n      var extra = _ref22.extra;\n      return function (_) {\n        return extra ? extra[1] : '@nx';\n      };\n    }), _defineProperty(_Expose, \"ny\", function ny(_ref23) {\n      var extra = _ref23.extra;\n      return function (_) {\n        return extra ? extra[2] : '@ny';\n      };\n    }), _defineProperty(_Expose, \"N\", function N(_ref24) {\n      var extra = _ref24.extra;\n      return function (_) {\n        return extra ? extra[3] : '@N';\n      };\n    }), _defineProperty(_Expose, \"repeat\", make_sequence('')), _defineProperty(_Expose, \"multiple\", make_sequence(',')), _defineProperty(_Expose, 'multiple-with-space', make_sequence(' ')), _defineProperty(_Expose, \"pick\", function pick(_ref25) {\n      var context = _ref25.context;\n      return expand$1(function () {\n        for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n          args[_key8] = arguments[_key8];\n        }\n\n        return push_stack(context, 'last_pick', _pick(args));\n      });\n    }), _defineProperty(_Expose, 'pick-n', function pickN(_ref26) {\n      var context = _ref26.context,\n          extra = _ref26.extra,\n          position = _ref26.position;\n      var counter = 'pn-counter' + position;\n      return expand$1(function () {\n        if (!context[counter]) context[counter] = 0;\n        context[counter] += 1;\n        var max = arguments.length;\n\n        var _ref27 = extra || [],\n            _ref28 = _slicedToArray(_ref27, 1),\n            idx = _ref28[0];\n\n        var pos = ((idx === undefined ? context[counter] : idx) - 1) % max;\n        var value = pos < 0 || arguments.length <= pos ? undefined : arguments[pos];\n        return push_stack(context, 'last_pick', value);\n      });\n    }), _defineProperty(_Expose, 'pick-d', function pickD(_ref29) {\n      var context = _ref29.context,\n          extra = _ref29.extra,\n          position = _ref29.position;\n      var counter = 'pd-counter' + position;\n      var values = 'pd-values' + position;\n      return expand$1(function () {\n        if (!context[counter]) context[counter] = 0;\n        context[counter] += 1;\n\n        for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n          args[_key9] = arguments[_key9];\n        }\n\n        if (!context[values]) {\n          context[values] = shuffle(args);\n        }\n\n        var max = args.length;\n\n        var _ref30 = extra || [],\n            _ref31 = _slicedToArray(_ref30, 1),\n            idx = _ref31[0];\n\n        var pos = ((idx === undefined ? context[counter] : idx) - 1) % max;\n        var value = context[values][pos];\n        return push_stack(context, 'last_pick', value);\n      });\n    }), _defineProperty(_Expose, 'last-pick', function lastPick(_ref32) {\n      var context = _ref32.context;\n      return function () {\n        var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        var stack = context.last_pick;\n        return stack ? stack.last(n) : '';\n      };\n    }), _defineProperty(_Expose, \"rand\", function rand(_ref33) {\n      var context = _ref33.context;\n      return function () {\n        for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n          args[_key10] = arguments[_key10];\n        }\n\n        var transform_type = args.every(is_letter) ? by_charcode : by_unit;\n        var value = transform_type(_rand).apply(null, args);\n        return push_stack(context, 'last_rand', value);\n      };\n    }), _defineProperty(_Expose, \"nrand\", function nrand(_ref34) {\n      var context = _ref34.context;\n      return function () {\n        for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n          args[_key11] = arguments[_key11];\n        }\n\n        var transform_type = args.every(is_letter) ? by_charcode : by_unit;\n        var value = transform_type(_nrand).apply(null, args);\n        return push_stack(context, 'last_rand', value);\n      };\n    }), _defineProperty(_Expose, 'rand-int', function randInt(_ref35) {\n      var context = _ref35.context;\n      return function () {\n        for (var _len12 = arguments.length, args = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n          args[_key12] = arguments[_key12];\n        }\n\n        var transform_type = args.every(is_letter) ? by_charcode : by_unit;\n\n        var rand_int = function rand_int() {\n          return Math.round(_rand.apply(void 0, arguments));\n        };\n\n        var value = transform_type(rand_int).apply(null, args);\n        return push_stack(context, 'last_rand', value);\n      };\n    }), _defineProperty(_Expose, 'nrand-int', function nrandInt(_ref36) {\n      var context = _ref36.context;\n      return function () {\n        for (var _len13 = arguments.length, args = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n          args[_key13] = arguments[_key13];\n        }\n\n        var transform_type = args.every(is_letter) ? by_charcode : by_unit;\n\n        var nrand_int = function nrand_int() {\n          return Math.round(_nrand.apply(void 0, arguments));\n        };\n\n        var value = transform_type(nrand_int).apply(null, args);\n        return push_stack(context, 'last_rand', value);\n      };\n    }), _defineProperty(_Expose, 'last-rand', function lastRand(_ref37) {\n      var context = _ref37.context;\n      return function () {\n        var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        var stack = context.last_rand;\n        return stack ? stack.last(n) : '';\n      };\n    }), _defineProperty(_Expose, \"stripe\", function stripe() {\n      return function () {\n        for (var _len14 = arguments.length, input = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n          input[_key14] = arguments[_key14];\n        }\n\n        var colors = input.map(get_value);\n        var max = colors.length;\n        var default_count = 0;\n        var custom_sizes = [];\n        var prev;\n\n        if (!max) {\n          return '';\n        }\n\n        colors.forEach(function (step) {\n          var _parse$ = parse$3(step),\n              _parse$2 = _slicedToArray(_parse$, 2),\n              _ = _parse$2[0],\n              size = _parse$2[1];\n\n          if (size !== undefined) custom_sizes.push(size);else default_count += 1;\n        });\n        var default_size = custom_sizes.length ? \"(100% - \".concat(custom_sizes.join(' - '), \") / \").concat(default_count) : \"100% / \".concat(max);\n        return colors.map(function (step, i) {\n          if (custom_sizes.length) {\n            var _parse$3 = parse$3(step),\n                _parse$4 = _slicedToArray(_parse$3, 2),\n                color = _parse$4[0],\n                size = _parse$4[1];\n\n            var prefix = prev ? prev + ' + ' : '';\n            prev = prefix + (size !== undefined ? size : default_size);\n            return \"\".concat(color, \" 0 calc(\").concat(prev, \")\");\n          }\n\n          return \"\".concat(step, \" 0 \").concat(100 / max * (i + 1), \"%\");\n        }).join(',');\n      };\n    }), _defineProperty(_Expose, \"calc\", function calc() {\n      return function (value) {\n        return _calc(get_value(value));\n      };\n    }), _defineProperty(_Expose, \"hex\", function hex() {\n      return function (value) {\n        return parseInt(get_value(value)).toString(16);\n      };\n    }), _defineProperty(_Expose, \"svg\", lazy(function (input) {\n      if (input === undefined) return '';\n      var svg = normalize_svg(get_value(input()).trim());\n      return create_svg_url(svg);\n    })), _defineProperty(_Expose, 'svg-filter', lazy(function (input) {\n      if (input === undefined) return '';\n      var id = unique_id('filter-');\n      var svg = normalize_svg(get_value(input()).trim()).replace(/<filter([\\s>])/, \"<filter id=\\\"\".concat(id, \"\\\"$1\"));\n      return create_svg_url(svg, id);\n    })), _defineProperty(_Expose, \"var\", function _var() {\n      return function (value) {\n        return \"var(\".concat(get_value(value), \")\");\n      };\n    }), _defineProperty(_Expose, \"t\", function t() {\n      return function (value) {\n        return \"var(--\".concat(uniform_time.name, \")\");\n      };\n    }), _defineProperty(_Expose, \"shape\", function shape() {\n      return memo('shape-function', function () {\n        var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        type = String(type).trim();\n        if (!type.length) return 'polygon()';\n\n        for (var _len15 = arguments.length, args = new Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {\n          args[_key15 - 1] = arguments[_key15];\n        }\n\n        if (typeof shapes[type] === 'function') {\n          return shapes[type](args);\n        } else {\n          var commands = type;\n          var rest = args.join(',');\n\n          if (rest.length) {\n            commands = type + ',' + rest;\n          }\n\n          var config = parse$4(commands);\n          return custom_shape(config);\n        }\n      });\n    }), _defineProperty(_Expose, \"doodle\", function doodle() {\n      return function (value) {\n        return value;\n      };\n    }), _defineProperty(_Expose, \"shaders\", function shaders() {\n      return function (value) {\n        return value;\n      };\n    }), _defineProperty(_Expose, \"path\", function path() {\n      return function (value) {\n        return value;\n      };\n    }), _Expose);\n\n    function make_sequence(c) {\n      return lazy(function (n, action) {\n        if (!action || !n) return '';\n        var count = get_value(n());\n        return sequence(count, function (i, x, y, max) {\n          return get_value(action(i, x, y, max));\n        }).join(c);\n      });\n    }\n\n    function push_stack(context, name, value) {\n      if (!context[name]) context[name] = new Stack();\n      context[name].push(value);\n      return value;\n    }\n\n    return alias_for(Expose, {\n      'm': 'multiple',\n      'M': 'multiple-with-space',\n      'r': 'rand',\n      'rn': 'nrand',\n      'ri': 'rand-int',\n      'rni': 'nrand-int',\n      'lr': 'last-rand',\n      'p': 'pick',\n      'pn': 'pick-n',\n      'pd': 'pick-d',\n      'lp': 'last-pick',\n      'rep': 'repeat',\n      'i': 'index',\n      'x': 'col',\n      'y': 'row',\n      'z': 'depth',\n      'I': 'size',\n      'X': 'size-col',\n      'Y': 'size-row',\n      'Z': 'size-depth',\n      // legacy names\n      'nr': 'rn',\n      'nri': 'nri',\n      'ms': 'multiple-with-space',\n      's': 'size',\n      'sx': 'size-col',\n      'sy': 'size-row',\n      'sz': 'size-depth',\n      'size-x': 'size-col',\n      'size-y': 'size-row',\n      'size-z': 'size-depth',\n      'multi': 'multiple',\n      'pick-by-turn': 'pick-n',\n      'max-row': 'size-row',\n      'max-col': 'size-col',\n      // error prone\n      'stripes': 'stripe',\n      'strip': 'stripe'\n    });\n  }\n\n  var all = [];\n\n  function get_props(arg) {\n    if (!all.length) {\n      var props = new Set();\n\n      for (var n in document.head.style) {\n        if (!n.startsWith('-')) {\n          props.add(n.replace(/[A-Z]/g, '-$&').toLowerCase());\n        }\n      }\n\n      if (!props.has('grid-gap')) {\n        props.add('grid-gap');\n      }\n\n      all = Array.from(props);\n    }\n\n    return arg && arg.test ? all.filter(function (n) {\n      return arg.test(n);\n    }) : all;\n  }\n\n  function build_mapping(prefix) {\n    var reg = new RegExp(\"\\\\-?\".concat(prefix, \"\\\\-?\"));\n    return get_props(reg).map(function (n) {\n      return n.replace(reg, '');\n    }).reduce(function (obj, n) {\n      return obj[n] = n, obj;\n    }, {});\n  }\n\n  var props_webkit_mapping = build_mapping('webkit');\n  var props_moz_mapping = build_mapping('moz');\n\n  function prefixer(prop, rule) {\n    if (props_webkit_mapping[prop]) {\n      return \"-webkit-\".concat(rule, \" \").concat(rule);\n    } else if (props_moz_mapping[prop]) {\n      return \"-moz-\".concat(rule, \" \").concat(rule);\n    }\n\n    return rule;\n  }\n\n  var presets = {\n    '4a0': [1682, 2378],\n    '2a0': [1189, 1682],\n    a0: [841, 1189],\n    a1: [594, 841],\n    a2: [420, 594],\n    a3: [297, 420],\n    a4: [210, 297],\n    a5: [148, 210],\n    a6: [105, 148],\n    a7: [74, 105],\n    a8: [52, 74],\n    a9: [37, 52],\n    a10: [26, 37],\n    b0: [1000, 1414],\n    b1: [707, 1000],\n    b2: [500, 707],\n    b3: [353, 500],\n    b4: [250, 353],\n    b5: [176, 250],\n    b6: [125, 176],\n    b7: [88, 125],\n    b8: [62, 88],\n    b9: [44, 62],\n    b10: [31, 44],\n    b11: [22, 32],\n    b12: [16, 22],\n    c0: [917, 1297],\n    c1: [648, 917],\n    c2: [458, 648],\n    c3: [324, 458],\n    c4: [229, 324],\n    c5: [162, 229],\n    c6: [114, 162],\n    c7: [81, 114],\n    c8: [57, 81],\n    c9: [40, 57],\n    c10: [28, 40],\n    c11: [22, 32],\n    c12: [16, 22],\n    d0: [764, 1064],\n    d1: [532, 760],\n    d2: [380, 528],\n    d3: [264, 376],\n    d4: [188, 260],\n    d5: [130, 184],\n    d6: [92, 126],\n    letter: [216, 279],\n    legal: [216, 356],\n    'junior-legal': [203, 127],\n    ledger: [279, 432],\n    tabloid: [279, 432],\n    executive: [190, 254],\n    postcard: [100, 148],\n    'business-card': [54, 90],\n    poster: [390, 540]\n  };\n  var modes = {\n    portrait: 'p',\n    pt: 'p',\n    p: 'p',\n    landscape: 'l',\n    ls: 'l',\n    l: 'l'\n  };\n  var unit = 'mm';\n\n  function get_preset(name, mode) {\n    name = String(name).toLowerCase(); // Default to landscape mode\n\n    var _ref38 = presets[name] || [],\n        _ref39 = _slicedToArray(_ref38, 2),\n        h = _ref39[0],\n        w = _ref39[1];\n\n    if (modes[mode] == 'p') {\n      var _ref40 = [h, w];\n      w = _ref40[0];\n      h = _ref40[1];\n    }\n\n    return [w, h].map(function (n) {\n      return n + unit;\n    });\n  }\n\n  function is_preset(name) {\n    return !!presets[name];\n  }\n\n  var Property = (_Property = {}, _defineProperty(_Property, '@size', function size(value, _ref41) {\n    var is_special_selector = _ref41.is_special_selector;\n\n    var _parse$5 = parse$3(value),\n        _parse$6 = _slicedToArray(_parse$5, 2),\n        w = _parse$6[0],\n        _parse$6$ = _parse$6[1],\n        h = _parse$6$ === void 0 ? w : _parse$6$;\n\n    if (is_preset(w)) {\n      var _get_preset = get_preset(w, h);\n\n      var _get_preset2 = _slicedToArray(_get_preset, 2);\n\n      w = _get_preset2[0];\n      h = _get_preset2[1];\n    }\n\n    return \"\\n      width: \".concat(w, \";\\n      height: \").concat(h, \";\\n      \").concat(is_special_selector ? '' : \"\\n        --internal-cell-width: \".concat(w, \";\\n        --internal-cell-height: \").concat(h, \";\\n      \"), \"\\n    \");\n  }), _defineProperty(_Property, '@min-size', function minSize(value) {\n    var _parse$7 = parse$3(value),\n        _parse$8 = _slicedToArray(_parse$7, 2),\n        w = _parse$8[0],\n        _parse$8$ = _parse$8[1],\n        h = _parse$8$ === void 0 ? w : _parse$8$;\n\n    return \"min-width: \".concat(w, \"; min-height: \").concat(h, \";\");\n  }), _defineProperty(_Property, '@max-size', function maxSize(value) {\n    var _parse$9 = parse$3(value),\n        _parse$10 = _slicedToArray(_parse$9, 2),\n        w = _parse$10[0],\n        _parse$10$ = _parse$10[1],\n        h = _parse$10$ === void 0 ? w : _parse$10$;\n\n    return \"max-width: \".concat(w, \"; max-height: \").concat(h, \";\");\n  }), _defineProperty(_Property, '@place-cell', function () {\n    var map_left_right = {\n      'center': '50%',\n      '0': '0%',\n      'left': '0%',\n      'right': '100%',\n      'top': '50%',\n      'bottom': '50%'\n    };\n    var map_top_bottom = {\n      'center': '50%',\n      '0': '0%',\n      'top': '0%',\n      'bottom': '100%',\n      'left': '50%',\n      'right': '50%'\n    };\n    return function (value) {\n      var _parse$11 = parse$3(value),\n          _parse$12 = _slicedToArray(_parse$11, 2),\n          left = _parse$12[0],\n          _parse$12$ = _parse$12[1],\n          top = _parse$12$ === void 0 ? '50%' : _parse$12$;\n\n      left = map_left_right[left] || left;\n      top = map_top_bottom[top] || top;\n      var cw = 'var(--internal-cell-width, 25%)';\n      var ch = 'var(--internal-cell-height, 25%)';\n      return \"\\n        position: absolute;\\n        left: \".concat(left, \";\\n        top: \").concat(top, \";\\n        width: \").concat(cw, \";\\n        height: \").concat(ch, \";\\n        margin-left: calc(\").concat(cw, \" / -2) !important;\\n        margin-top: calc(\").concat(ch, \" / -2) !important;\\n        grid-area: unset !important;\\n      \");\n    };\n  }()), _defineProperty(_Property, '@grid', function grid(value, options) {\n    var _value$split$map = value.split('/').map(function (s) {\n      return s.trim();\n    }),\n        _value$split$map2 = _toArray(_value$split$map),\n        grid = _value$split$map2[0],\n        size = _value$split$map2.slice(1);\n\n    size = size.join(' / ');\n    return {\n      grid: parse_grid(grid),\n      size: size ? this['@size'](size, options) : ''\n    };\n  }), _defineProperty(_Property, '@shape', memo('shape-property', function (value) {\n    var _parse$13 = parse$3(value),\n        _parse$14 = _toArray(_parse$13),\n        type = _parse$14[0],\n        args = _parse$14.slice(1);\n\n    var prop = 'clip-path';\n    if (typeof shapes[type] !== 'function') return '';\n    var rules = \"\".concat(prop, \": \").concat(shapes[type].apply(shapes, _toConsumableArray(args)), \";\");\n    return prefixer(prop, rules) + 'overflow: hidden;';\n  })), _defineProperty(_Property, '@use', function use(rules) {\n    if (rules.length > 2) {\n      return rules;\n    }\n  }), _Property);\n\n  function build_expr(expr) {\n    return function (n) {\n      return String(expr).replace(/(\\d+)(n)/g, '$1*' + n).replace(/n/g, n);\n    };\n  }\n\n  function _nth(input, curr, max) {\n    var expr = build_expr(input);\n\n    for (var i = 0; i <= max; ++i) {\n      if (_calc(expr(i)) == curr) return true;\n    }\n  }\n\n  var is$1 = {\n    even: function even(n) {\n      return !(n % 2);\n    },\n    odd: function odd(n) {\n      return !!(n % 2);\n    }\n  };\n\n  function even_or_odd(expr) {\n    return /^(even|odd)$/.test(expr);\n  }\n\n  function Selector(_random) {\n    return {\n      at: function at(_ref42) {\n        var x = _ref42.x,\n            y = _ref42.y;\n        return function (x1, y1) {\n          return x == x1 && y == y1;\n        };\n      },\n      nth: function nth(_ref43) {\n        var count = _ref43.count,\n            grid = _ref43.grid;\n        return function () {\n          for (var _len16 = arguments.length, exprs = new Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n            exprs[_key16] = arguments[_key16];\n          }\n\n          return exprs.some(function (expr) {\n            return even_or_odd(expr) ? is$1[expr](count) : _nth(expr, count, grid.count);\n          });\n        };\n      },\n      row: function row(_ref44) {\n        var y = _ref44.y,\n            grid = _ref44.grid;\n        return function () {\n          for (var _len17 = arguments.length, exprs = new Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n            exprs[_key17] = arguments[_key17];\n          }\n\n          return exprs.some(function (expr) {\n            return even_or_odd(expr) ? is$1[expr](y) : _nth(expr, y, grid.y);\n          });\n        };\n      },\n      col: function col(_ref45) {\n        var x = _ref45.x,\n            grid = _ref45.grid;\n        return function () {\n          for (var _len18 = arguments.length, exprs = new Array(_len18), _key18 = 0; _key18 < _len18; _key18++) {\n            exprs[_key18] = arguments[_key18];\n          }\n\n          return exprs.some(function (expr) {\n            return even_or_odd(expr) ? is$1[expr](x) : _nth(expr, x, grid.x);\n          });\n        };\n      },\n      even: function even(_ref46) {\n        var count = _ref46.count,\n            grid = _ref46.grid,\n            y = _ref46.y;\n        return function (arg) {\n          if (arg === 'cross' && is$1.even(grid.x)) {\n            var m = is$1.even(y) ? 'odd' : 'even';\n            return is$1[m](count);\n          } else {\n            return is$1.even(count);\n          }\n        };\n      },\n      odd: function odd(_ref47) {\n        var count = _ref47.count,\n            grid = _ref47.grid,\n            y = _ref47.y;\n        return function (arg) {\n          if (arg === 'cross' && is$1.even(grid.x)) {\n            var m = is$1.even(y) ? 'even' : 'odd';\n            return is$1[m](count);\n          } else {\n            return is$1.odd(count);\n          }\n        };\n      },\n      random: function random() {\n        return function () {\n          var ratio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : .5;\n          if (ratio >= 1 && ratio <= 0) ratio = .5;\n          return _random() < ratio;\n        };\n      }\n    };\n  } // Expose all Math functions and constants.\n\n\n  var methods = Object.getOwnPropertyNames(Math);\n  var MathFunc = methods.reduce(function (expose, n) {\n    expose[n] = function () {\n      return function () {\n        for (var _len19 = arguments.length, args = new Array(_len19), _key19 = 0; _key19 < _len19; _key19++) {\n          args[_key19] = arguments[_key19];\n        }\n\n        args = args.map(get_value);\n        if (typeof Math[n] === 'number') return Math[n];\n        return Math[n].apply(null, args.map(_calc));\n      };\n    };\n\n    return expose;\n  }, {});\n  var initial = {\n    length: '0px',\n    number: 0,\n    color: 'black',\n    url: 'url()',\n    image: 'url()',\n    integer: 0,\n    angle: '0deg',\n    time: '0ms',\n    resolution: '0dpi',\n    percentage: '0%',\n    'length-percentage': '0%',\n    'transform-function': 'translate(0)',\n    'transform-list': 'translate(0)',\n    'custom-ident': '_'\n  };\n\n  function get_definition(name) {\n    var type = String(name).substr(2).split('-')[0];\n\n    if (initial[type] !== undefined) {\n      return {\n        name: name,\n        syntax: \"<\".concat(type, \"> | <\").concat(type, \">+ | <\").concat(type, \">#\"),\n        initialValue: initial[type],\n        inherits: false\n      };\n    }\n  }\n\n  var _List5 = List(),\n      join = _List5.join,\n      make_array = _List5.make_array,\n      remove_empty_values = _List5.remove_empty_values;\n\n  function is_host_selector(s) {\n    return /^\\:(host|doodle)/.test(s);\n  }\n\n  function is_parent_selector(s) {\n    return /^\\:(container|parent)/.test(s);\n  }\n\n  function is_special_selector(s) {\n    return is_host_selector(s) || is_parent_selector(s);\n  }\n\n  var Rules = /*#__PURE__*/function () {\n    function Rules(tokens, random) {\n      _classCallCheck(this, Rules);\n\n      this.tokens = tokens;\n      this.rules = {};\n      this.props = {};\n      this.keyframes = {};\n      this.grid = null;\n      this.is_grid_defined = false;\n      this.coords = [];\n      this.doodles = {};\n      this.shaders = {};\n      this.paths = {};\n      this.reset();\n      this.Func = get_exposed(random);\n      this.Selector = Selector(random);\n      this.custom_properties = {};\n      this.uniforms = {};\n      this.unique_id = random_func(random).unique_id;\n    }\n\n    _createClass(Rules, [{\n      key: \"reset\",\n      value: function reset() {\n        this.styles = {\n          host: '',\n          container: '',\n          cells: '',\n          keyframes: ''\n        };\n        this.coords = [];\n        this.doodles = {};\n\n        for (var key in this.rules) {\n          if (key.startsWith('#c')) {\n            delete this.rules[key];\n          }\n        }\n      }\n    }, {\n      key: \"add_rule\",\n      value: function add_rule(selector, rule) {\n        var rules = this.rules[selector];\n\n        if (!rules) {\n          rules = this.rules[selector] = [];\n        }\n\n        rules.push.apply(rules, make_array(rule));\n      }\n    }, {\n      key: \"pick_func\",\n      value: function pick_func(name) {\n        return this.Func[name] || MathFunc[name];\n      }\n    }, {\n      key: \"apply_func\",\n      value: function apply_func(fn, coords, args) {\n        var _fn = fn.apply(void 0, _toConsumableArray(make_array(coords)));\n\n        var input = [];\n        args.forEach(function (arg) {\n          var type = typeof arg.value;\n          var is_string_or_number = type === 'number' || type === 'string';\n\n          if (!arg.cluster && is_string_or_number) {\n            var _input;\n\n            (_input = input).push.apply(_input, _toConsumableArray(parse$3(arg.value, true)));\n          } else {\n            if (typeof arg === 'function') {\n              input.push(arg);\n            } else if (!is_nil(arg.value)) {\n              var value = get_value(arg.value);\n              input.push(value);\n            }\n          }\n        });\n        input = remove_empty_values(input);\n\n        var result = _fn.apply(void 0, _toConsumableArray(make_array(input)));\n\n        return result;\n      }\n    }, {\n      key: \"compose_aname\",\n      value: function compose_aname() {\n        for (var _len20 = arguments.length, args = new Array(_len20), _key20 = 0; _key20 < _len20; _key20++) {\n          args[_key20] = arguments[_key20];\n        }\n\n        return args.join('-');\n      }\n    }, {\n      key: \"compose_selector\",\n      value: function compose_selector(_ref48) {\n        var x = _ref48.x,\n            y = _ref48.y,\n            z = _ref48.z;\n        var pseudo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        return \"#\".concat(cell_id(x, y, z)).concat(pseudo);\n      }\n    }, {\n      key: \"is_composable\",\n      value: function is_composable(name) {\n        return ['doodle', 'shaders'].includes(name);\n      }\n    }, {\n      key: \"compose_argument\",\n      value: function compose_argument(argument, coords) {\n        var _this = this;\n\n        var extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var result = argument.map(function (arg) {\n          if (arg.type === 'text') {\n            return arg.value;\n          } else if (arg.type === 'func') {\n            var fname = arg.name.substr(1);\n\n            var fn = _this.pick_func(fname);\n\n            if (typeof fn === 'function') {\n              if (fname === 't') {\n                _this.uniforms.time = true;\n              }\n\n              if (_this.is_composable(fname)) {\n                var _value2 = get_value((arg.arguments[0] || [])[0]);\n\n                if (!is_nil(_value2)) {\n                  switch (fname) {\n                    case 'doodle':\n                      return _this.compose_doodle(_value2);\n\n                    case 'shaders':\n                      return _this.compose_shaders(_value2, coords);\n                  }\n                }\n              }\n\n              coords.extra = extra;\n              coords.position = arg.position;\n              var args = arg.arguments.map(function (n) {\n                return fn.lazy ? function () {\n                  for (var _len21 = arguments.length, extra = new Array(_len21), _key21 = 0; _key21 < _len21; _key21++) {\n                    extra[_key21] = arguments[_key21];\n                  }\n\n                  return _this.compose_argument(n, coords, extra);\n                } : _this.compose_argument(n, coords, extra);\n              });\n\n              var value = _this.apply_func(fn, coords, args);\n\n              if (fname == 'path') {\n                return _this.compose_path(value);\n              }\n\n              return value;\n            }\n          }\n        });\n        return {\n          cluster: argument.cluster,\n          value: result.length >= 2 ? {\n            value: result.join('')\n          } : result[0]\n        };\n      }\n    }, {\n      key: \"compose_doodle\",\n      value: function compose_doodle(doodle) {\n        var id = this.unique_id('doodle');\n        this.doodles[id] = doodle;\n        return '${' + id + '}';\n      }\n    }, {\n      key: \"compose_shaders\",\n      value: function compose_shaders(shader, _ref49) {\n        var x = _ref49.x,\n            y = _ref49.y,\n            z = _ref49.z;\n        var id = this.unique_id('shader');\n        this.shaders[id] = {\n          shader: shader,\n          cell: cell_id(x, y, z)\n        };\n        return '${' + id + '}';\n      }\n    }, {\n      key: \"compose_path\",\n      value: function compose_path(commands) {\n        var id = this.unique_id('path');\n        this.paths[id] = {\n          id: id,\n          commands: commands\n        };\n        return '${' + id + '}';\n      }\n    }, {\n      key: \"compose_value\",\n      value: function compose_value(value, coords) {\n        var _this2 = this;\n\n        if (!Array.isArray(value)) {\n          return '';\n        }\n\n        return value.reduce(function (result, val) {\n          switch (val.type) {\n            case 'text':\n              {\n                result += val.value;\n                break;\n              }\n\n            case 'func':\n              {\n                var fname = val.name.substr(1);\n\n                var fn = _this2.pick_func(fname);\n\n                if (typeof fn === 'function') {\n                  if (fname === 't') {\n                    _this2.uniforms.time = true;\n                  }\n\n                  if (_this2.is_composable(fname)) {\n                    var _value3 = get_value((val.arguments[0] || [])[0]);\n\n                    if (!is_nil(_value3)) {\n                      switch (fname) {\n                        case 'doodle':\n                          result += _this2.compose_doodle(_value3);\n                          break;\n\n                        case 'shaders':\n                          result += _this2.compose_shaders(_value3, coords);\n                          break;\n                      }\n                    }\n                  } else {\n                    coords.position = val.position;\n                    var args = val.arguments.map(function (arg) {\n                      return fn.lazy ? function () {\n                        for (var _len22 = arguments.length, extra = new Array(_len22), _key22 = 0; _key22 < _len22; _key22++) {\n                          extra[_key22] = arguments[_key22];\n                        }\n\n                        return _this2.compose_argument(arg, coords, extra);\n                      } : _this2.compose_argument(arg, coords);\n                    });\n\n                    var output = _this2.apply_func(fn, coords, args);\n\n                    if (!is_nil(output)) {\n                      if (fname == 'path') {\n                        result += _this2.compose_path(output);\n                      } else {\n                        result += output;\n                      }\n                    }\n                  }\n                }\n              }\n          }\n\n          return result;\n        }, '');\n      }\n    }, {\n      key: \"compose_rule\",\n      value: function compose_rule(token, _coords, selector) {\n        var _this3 = this;\n\n        var coords = Object.assign({}, _coords);\n        var prop = token.property;\n        var value_group = token.value.reduce(function (ret, v) {\n          var composed = _this3.compose_value(v, coords);\n\n          if (composed) ret.push(composed);\n          return ret;\n        }, []);\n        var value = value_group.join(', ');\n\n        if (/^animation(\\-name)?$/.test(prop)) {\n          this.props.has_animation = true;\n\n          if (is_host_selector(selector)) {\n            var prefix = uniform_time[prop];\n\n            if (prefix && value) {\n              value = prefix + ',' + value;\n            }\n          }\n\n          if (coords.count > 1) {\n            var count = coords.count;\n\n            switch (prop) {\n              case 'animation-name':\n                {\n                  value = value_group.map(function (n) {\n                    return _this3.compose_aname(n, count);\n                  }).join(', ');\n                  break;\n                }\n\n              case 'animation':\n                {\n                  value = value_group.map(function (n) {\n                    var group = (n || '').split(/\\s+/);\n                    group[0] = _this3.compose_aname(group[0], count);\n                    return group.join(' ');\n                  }).join(', ');\n                }\n            }\n          }\n        }\n\n        if (prop === 'content') {\n          if (!/[\"']|^none$|^(var|counter|counters|attr)\\(/.test(value)) {\n            value = \"'\".concat(value, \"'\");\n          }\n        }\n\n        if (prop === 'transition') {\n          this.props.has_transition = true;\n        }\n\n        var rule = \"\".concat(prop, \": \").concat(value, \";\");\n        rule = prefixer(prop, rule);\n\n        if (prop === 'clip-path') {\n          // fix clip bug\n          rule += ';overflow: hidden;';\n        }\n\n        if (prop === 'width' || prop === 'height') {\n          if (!is_special_selector(selector)) {\n            rule += \"--internal-cell-\".concat(prop, \": \").concat(value, \";\");\n          }\n        }\n\n        if (prop === 'background' && value.includes('shader')) {\n          rule += 'background-size: 100% 100%;';\n        }\n\n        if (/^\\-\\-/.test(prop)) {\n          this.custom_properties[prop] = value;\n        }\n\n        if (Property[prop]) {\n          var transformed = Property[prop](value, {\n            is_special_selector: is_special_selector(selector)\n          });\n\n          switch (prop) {\n            case '@grid':\n              {\n                if (is_host_selector(selector)) {\n                  rule = transformed.size || '';\n                } else {\n                  rule = '';\n\n                  if (!this.is_grid_defined) {\n                    transformed = Property[prop](value, {\n                      is_special_selector: true\n                    });\n                    this.add_rule(':host', transformed.size || '');\n                  }\n                }\n\n                this.grid = coords.grid;\n                this.is_grid_defined = true;\n                break;\n              }\n\n            case '@place-cell':\n              {\n                if (!is_host_selector(selector)) {\n                  rule = transformed;\n                }\n\n                break;\n              }\n\n            case '@use':\n              {\n                if (token.value.length) {\n                  this.compose(coords, token.value);\n                }\n\n                rule = '';\n                break;\n              }\n\n            default:\n              {\n                rule = transformed;\n              }\n          }\n        }\n\n        return rule;\n      }\n    }, {\n      key: \"pre_compose_rule\",\n      value: function pre_compose_rule(token, _coords) {\n        var _this4 = this;\n\n        var coords = Object.assign({}, _coords);\n        var prop = token.property;\n\n        switch (prop) {\n          case '@grid':\n            {\n              var value_group = token.value.reduce(function (ret, v) {\n                var composed = _this4.compose_value(v, coords);\n\n                if (composed) ret.push(composed);\n                return ret;\n              }, []);\n              var value = value_group.join(', ');\n              var transformed = Property[prop](value, {});\n              this.grid = transformed.grid;\n              break;\n            }\n\n          case '@use':\n            {\n              if (token.value.length) {\n                this.pre_compose(coords, token.value);\n              }\n\n              break;\n            }\n        }\n      }\n    }, {\n      key: \"pre_compose\",\n      value: function pre_compose(coords, tokens) {\n        var _this5 = this;\n\n        (tokens || this.tokens).forEach(function (token) {\n          switch (token.type) {\n            case 'rule':\n              {\n                _this5.pre_compose_rule(token, coords);\n\n                break;\n              }\n\n            case 'pseudo':\n              {\n                if (is_host_selector(token.selector)) {\n                  (token.styles || []).forEach(function (token) {\n                    _this5.pre_compose_rule(token, coords);\n                  });\n                }\n\n                break;\n              }\n          }\n        });\n      }\n    }, {\n      key: \"compose\",\n      value: function compose(coords, tokens, initial) {\n        var _this6 = this;\n\n        this.coords.push(coords);\n        (tokens || this.tokens).forEach(function (token, i) {\n          if (token.skip) return false;\n          if (initial && _this6.grid) return false;\n\n          switch (token.type) {\n            case 'rule':\n              {\n                _this6.add_rule(_this6.compose_selector(coords), _this6.compose_rule(token, coords));\n\n                break;\n              }\n\n            case 'pseudo':\n              {\n                if (token.selector.startsWith(':doodle')) {\n                  token.selector = token.selector.replace(/^\\:+doodle/, ':host');\n                }\n\n                var special = is_special_selector(token.selector);\n\n                if (special) {\n                  token.skip = true;\n                }\n\n                token.selector.split(',').forEach(function (selector) {\n                  var pseudo = token.styles.map(function (s) {\n                    return _this6.compose_rule(s, coords, selector);\n                  });\n                  var composed = special ? selector : _this6.compose_selector(coords, selector);\n\n                  _this6.add_rule(composed, pseudo);\n                });\n                break;\n              }\n\n            case 'cond':\n              {\n                var fn = _this6.Selector[token.name.substr(1)];\n\n                if (fn) {\n                  var args = token.arguments.map(function (arg) {\n                    return _this6.compose_argument(arg, coords);\n                  });\n\n                  var result = _this6.apply_func(fn, coords, args);\n\n                  if (result) {\n                    _this6.compose(coords, token.styles);\n                  }\n                }\n\n                break;\n              }\n\n            case 'keyframes':\n              {\n                if (!_this6.keyframes[token.name]) {\n                  _this6.keyframes[token.name] = function (coords) {\n                    return \"\\n              \".concat(join(token.steps.map(function (step) {\n                      return \"\\n                \".concat(step.name, \" {\\n                  \").concat(join(step.styles.map(function (s) {\n                        return _this6.compose_rule(s, coords);\n                      })), \"\\n                }\\n              \");\n                    })), \"\\n            \");\n                  };\n                }\n              }\n          }\n        });\n      }\n    }, {\n      key: \"output\",\n      value: function output() {\n        var _this7 = this;\n\n        Object.keys(this.rules).forEach(function (selector, i) {\n          if (is_parent_selector(selector)) {\n            _this7.styles.container += \"\\n          .container {\\n            \".concat(join(_this7.rules[selector]), \"\\n          }\\n        \");\n          } else {\n            var target = is_host_selector(selector) ? 'host' : 'cells';\n            var value = join(_this7.rules[selector]).trim();\n            var name = target === 'host' ? \"\".concat(selector, \", .host\") : selector;\n            _this7.styles[target] += \"\".concat(name, \" { \").concat(value, \" }\");\n          }\n        });\n        var keyframes = Object.keys(this.keyframes);\n\n        if (this.uniforms.time) {\n          this.styles.container += \"\\n        :host, .host {\\n          animation: \".concat(uniform_time.animation, \";\\n        }\\n      \");\n          this.styles.keyframes += \"\\n       @keyframes \".concat(uniform_time['animation-name'], \" {\\n         from { --\").concat(uniform_time.name, \": 0 }\\n         to { --\").concat(uniform_time.name, \": \").concat(uniform_time['animation-duration'], \" }\\n       }\\n      \");\n        }\n\n        this.coords.forEach(function (coords, i) {\n          keyframes.forEach(function (name) {\n            var aname = _this7.compose_aname(name, coords.count);\n\n            _this7.styles.keyframes += \"\\n          \".concat(maybe(i === 0, \"@keyframes \".concat(name, \" {\\n              \").concat(_this7.keyframes[name](coords), \"\\n            }\")), \"\\n          @keyframes \").concat(aname, \" {\\n            \").concat(_this7.keyframes[name](coords), \"\\n          }\\n        \");\n          });\n        });\n        var definitions = [];\n        Object.keys(this.custom_properties).forEach(function (name) {\n          var def = get_definition(name);\n\n          if (def) {\n            definitions.push(def);\n          }\n        });\n        return {\n          props: this.props,\n          styles: this.styles,\n          grid: this.grid,\n          doodles: this.doodles,\n          shaders: this.shaders,\n          paths: this.paths,\n          definitions: definitions,\n          uniforms: this.uniforms\n        };\n      }\n    }]);\n\n    return Rules;\n  }();\n\n  function generator(tokens, grid_size, random) {\n    var rules = new Rules(tokens, random);\n    var context = {};\n    rules.pre_compose({\n      x: 1,\n      y: 1,\n      z: 1,\n      count: 1,\n      context: {},\n      grid: {\n        x: 1,\n        y: 1,\n        z: 1,\n        count: 1\n      }\n    });\n\n    var _rules$output = rules.output(),\n        grid = _rules$output.grid;\n\n    if (grid) grid_size = grid;\n    rules.reset();\n\n    if (grid_size.z == 1) {\n      for (var y = 1, count = 0; y <= grid_size.y; ++y) {\n        for (var x = 1; x <= grid_size.x; ++x) {\n          rules.compose({\n            x: x,\n            y: y,\n            z: 1,\n            count: ++count,\n            grid: grid_size,\n            context: context\n          });\n        }\n      }\n    } else {\n      for (var z = 1, _count = 0; z <= grid_size.z; ++z) {\n        rules.compose({\n          x: 1,\n          y: 1,\n          z: z,\n          count: ++_count,\n          grid: grid_size,\n          context: context\n        });\n      }\n    }\n\n    return rules.output();\n  }\n  /*\n  Copyright 2019 David Bau.\n  Permission is hereby granted, free of charge, to any person obtaining\n  a copy of this software and associated documentation files (the\n  \"Software\"), to deal in the Software without restriction, including\n  without limitation the rights to use, copy, modify, merge, publish,\n  distribute, sublicense, and/or sell copies of the Software, and to\n  permit persons to whom the Software is furnished to do so, subject to\n  the following conditions:\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  */\n\n\n  var global = window;\n  var math = Math;\n  var pool = []; //\n  // The following constants are related to IEEE 754 limits.\n  //\n\n  var width = 256,\n      // each RC4 output is 0 <= x < 256\n  chunks = 6,\n      // at least six RC4 outputs for each double\n  digits = 52,\n      // there are 52 significant digits in a double\n  rngname = 'random',\n      // rngname: name for Math.random and Math.seedrandom\n  startdenom = math.pow(width, chunks),\n      significance = math.pow(2, digits),\n      overflow = significance * 2,\n      mask = width - 1,\n      nodecrypto; // node.js crypto module, initialized at the bottom.\n  //\n  // seedrandom()\n  // This is the seedrandom function described above.\n  //\n\n  function seedrandom(seed, options, callback) {\n    var key = [];\n    options = options == true ? {\n      entropy: true\n    } : options || {}; // Flatten the seed string or build one from local entropy if needed.\n\n    var shortseed = mixkey(flatten(options.entropy ? [seed, tostring(pool)] : seed == null ? autoseed() : seed, 3), key); // Use the seed to initialize an ARC4 generator.\n\n    var arc4 = new ARC4(key); // This function returns a random double in [0, 1) that contains\n    // randomness in every bit of the mantissa of the IEEE 754 value.\n\n    var prng = function prng() {\n      var n = arc4.g(chunks),\n          // Start with a numerator n < 2 ^ 48\n      d = startdenom,\n          //   and denominator d = 2 ^ 48.\n      x = 0; //   and no 'extra last byte'.\n\n      while (n < significance) {\n        // Fill up all significant digits by\n        n = (n + x) * width; //   shifting numerator and\n\n        d *= width; //   denominator and generating a\n\n        x = arc4.g(1); //   new least-significant-byte.\n      }\n\n      while (n >= overflow) {\n        // To avoid rounding up, before adding\n        n /= 2; //   last byte, shift everything\n\n        d /= 2; //   right using integer math until\n\n        x >>>= 1; //   we have exactly the desired bits.\n      }\n\n      return (n + x) / d; // Form the number within [0, 1).\n    };\n\n    prng.int32 = function () {\n      return arc4.g(4) | 0;\n    };\n\n    prng.quick = function () {\n      return arc4.g(4) / 0x100000000;\n    };\n\n    prng.double = prng; // Mix the randomness into accumulated entropy.\n\n    mixkey(tostring(arc4.S), pool); // Calling convention: what to return as a function of prng, seed, is_math.\n\n    return (options.pass || callback || function (prng, seed, is_math_call, state) {\n      if (state) {\n        // Load the arc4 state from the given state if it has an S array.\n        if (state.S) {\n          copy(state, arc4);\n        } // Only provide the .state method if requested via options.state.\n\n\n        prng.state = function () {\n          return copy(arc4, {});\n        };\n      } // If called as a method of Math (Math.seedrandom()), mutate\n      // Math.random because that is how seedrandom.js has worked since v1.0.\n\n\n      if (is_math_call) {\n        math[rngname] = prng;\n        return seed;\n      } // Otherwise, it is a newer calling convention, so return the\n      // prng directly.\n      else return prng;\n    })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n  } //\n  // ARC4\n  //\n  // An ARC4 implementation.  The constructor takes a key in the form of\n  // an array of at most (width) integers that should be 0 <= x < (width).\n  //\n  // The g(count) method returns a pseudorandom integer that concatenates\n  // the next (count) outputs from ARC4.  Its return value is a number x\n  // that is in the range 0 <= x < (width ^ count).\n  //\n\n\n  function ARC4(key) {\n    var t,\n        keylen = key.length,\n        me = this,\n        i = 0,\n        j = me.i = me.j = 0,\n        s = me.S = []; // The empty key [] is treated as [0].\n\n    if (!keylen) {\n      key = [keylen++];\n    } // Set up S using the standard key scheduling algorithm.\n\n\n    while (i < width) {\n      s[i] = i++;\n    }\n\n    for (i = 0; i < width; i++) {\n      s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n      s[j] = t;\n    } // The \"g\" method returns the next (count) outputs as one number.\n\n\n    (me.g = function (count) {\n      // Using instance members instead of closure state nearly doubles speed.\n      var t,\n          r = 0,\n          i = me.i,\n          j = me.j,\n          s = me.S;\n\n      while (count--) {\n        t = s[i = mask & i + 1];\n        r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n      }\n\n      me.i = i;\n      me.j = j;\n      return r; // For robust unpredictability, the function call below automatically\n      // discards an initial batch of values.  This is called RC4-drop[256].\n      // See http://google.com/search?q=rsa+fluhrer+response&btnI\n    })(width);\n  } //\n  // copy()\n  // Copies internal state of ARC4 to or from a plain object.\n  //\n\n\n  function copy(f, t) {\n    t.i = f.i;\n    t.j = f.j;\n    t.S = f.S.slice();\n    return t;\n  } //\n  // flatten()\n  // Converts an object tree to nested arrays of strings.\n  //\n\n\n  function flatten(obj, depth) {\n    var result = [],\n        typ = typeof obj,\n        prop;\n\n    if (depth && typ == 'object') {\n      for (prop in obj) {\n        try {\n          result.push(flatten(obj[prop], depth - 1));\n        } catch (e) {}\n      }\n    }\n\n    return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n  } //\n  // mixkey()\n  // Mixes a string seed into a key that is an array of integers, and\n  // returns a shortened string seed that is equivalent to the result key.\n  //\n\n\n  function mixkey(seed, key) {\n    var stringseed = seed + '',\n        smear,\n        j = 0;\n\n    while (j < stringseed.length) {\n      key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n    }\n\n    return tostring(key);\n  } //\n  // autoseed()\n  // Returns an object for autoseeding, using window.crypto and Node crypto\n  // module if available.\n  //\n\n\n  function autoseed() {\n    try {\n      var out;\n      if (nodecrypto && (out = nodecrypto.randomBytes)) ;else {\n        out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n      }\n      return tostring(out);\n    } catch (e) {\n      var browser = global.navigator,\n          plugins = browser && browser.plugins;\n      return [+new Date(), global, plugins, global.screen, tostring(pool)];\n    }\n  } //\n  // tostring()\n  // Converts an array of charcodes to a string\n  //\n\n\n  function tostring(a) {\n    return String.fromCharCode.apply(0, a);\n  } //\n  // When seedrandom.js is loaded, we immediately mix a few bits\n  // from the built-in RNG into the entropy pool.  Because we do\n  // not want to interfere with deterministic PRNG state later,\n  // seedrandom will not call math.random on its own again after\n  // initialization.\n  //\n\n\n  mixkey(math.random(), pool);\n\n  function create_shader(gl, type, source) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  function create_program(gl, vss, fss) {\n    var vs = create_shader(gl, gl.VERTEX_SHADER, vss);\n    var fs = create_shader(gl, gl.FRAGMENT_SHADER, fss);\n    var prog = gl.createProgram();\n    gl.attachShader(prog, vs);\n    gl.attachShader(prog, fs);\n    gl.linkProgram(prog);\n\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n      console.warn('Link failed: ' + gl.getProgramInfoLog(prog));\n      console.warn('vs info-log: ' + gl.getShaderInfoLog(vs));\n      console.warn('fs info-log: ' + gl.getShaderInfoLog(fs));\n    }\n\n    return prog;\n  }\n\n  function add_uniform(fragment, uniform) {\n    if (!fragment.includes(uniform)) {\n      return uniform + '\\n' + fragment;\n    }\n\n    return fragment;\n  }\n\n  var fragment_head = \"\\n  precision highp float;\\n\";\n  var default_vertex_shader = \"\\n  attribute vec4 position;\\n  void main() {\\n    gl_Position = position;\\n  }\\n\";\n  /* https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL */\n\n  function load_texture(gl, image, i) {\n    var texture = gl.createTexture();\n    gl.activeTexture(gl['TEXTURE' + i]);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  }\n\n  function draw_shader(shaders, width, height) {\n    var canvas = document.createElement('canvas');\n    var ratio = window.devicePixelRatio || 1;\n    width *= ratio;\n    height *= ratio;\n    canvas.width = width;\n    canvas.height = height;\n    var gl = canvas.getContext('webgl') || canvas.getContext('exprimental-webgl');\n    if (!gl) return ''; // resolution uniform\n\n    var fragment = add_uniform(shaders.fragment || '', 'uniform vec2 u_resolution;'); // texture uniform\n\n    shaders.textures.forEach(function (n) {\n      var uniform = \"uniform sampler2D \".concat(n.name, \";\");\n      fragment = add_uniform(fragment, uniform);\n    });\n    var program = create_program(gl, shaders.vertex || default_vertex_shader, fragment_head + fragment);\n    /* position in vertex shader */\n\n    var positionAttributeLocation = gl.getAttribLocation(program, 'position');\n    var positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    var vertices = [-1, -1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1];\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(positionAttributeLocation);\n    gl.vertexAttribPointer(positionAttributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.useProgram(program);\n    /* resolve uniforms */\n\n    gl.uniform2fv(gl.getUniformLocation(program, \"u_resolution\"), [width, height]);\n    shaders.textures.forEach(function (n, i) {\n      load_texture(gl, n.value, i);\n      gl.uniform1i(gl.getUniformLocation(program, n.name), i);\n    }); // two triangles to form a rectangle\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6); // resolve image data in 72dpi :(\n\n    return Promise.resolve(canvas.toDataURL());\n  }\n\n  function get_all_variables(element) {\n    var ret = {};\n\n    if (element.computedStyleMap) {\n      var _iterator = _createForOfIteratorHelper(element.computedStyleMap()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              prop = _step$value[0],\n              value = _step$value[1];\n\n          if (prop.startsWith('--')) {\n            ret[prop] = value[0][0];\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else {\n      var styles = getComputedStyle(element);\n\n      var _iterator2 = _createForOfIteratorHelper(styles),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _prop = _step2.value;\n\n          if (_prop.startsWith('--')) {\n            ret[_prop] = styles.getPropertyValue(_prop);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return inline(ret);\n  }\n\n  function _get_variable(element, name) {\n    return getComputedStyle(element).getPropertyValue(name).trim().replace(/^\\(|\\)$/g, '');\n  }\n\n  function inline(map) {\n    var result = [];\n\n    for (var prop in map) {\n      result.push(prop + ':' + map[prop]);\n    }\n\n    return result.join(';');\n  }\n\n  var Doodle = /*#__PURE__*/function (_HTMLElement) {\n    _inherits(Doodle, _HTMLElement);\n\n    var _super = _createSuper(Doodle);\n\n    function Doodle() {\n      var _this8;\n\n      _classCallCheck(this, Doodle);\n\n      _this8 = _super.call(this);\n      _this8.doodle = _this8.attachShadow({\n        mode: 'open'\n      });\n      _this8.extra = {\n        get_variable: function get_variable(name) {\n          return _get_variable(_assertThisInitialized(_this8), name);\n        }\n      };\n      return _this8;\n    }\n\n    _createClass(Doodle, [{\n      key: \"connectedCallback\",\n      value: function connectedCallback(again) {\n        var _this9 = this;\n\n        if (/^(complete|interactive|loaded)$/.test(document.readyState)) {\n          this.load(again);\n        } else {\n          setTimeout(function () {\n            return _this9.load(again);\n          });\n        }\n      }\n    }, {\n      key: \"update\",\n      value: function update(styles) {\n        var _this10 = this;\n\n        var use = this.get_use();\n        if (!styles) styles = this.innerHTML;\n        this.innerHTML = styles;\n\n        if (!this.grid_size) {\n          this.grid_size = this.get_grid();\n        }\n\n        var _this$grid_size = this.grid_size,\n            gx = _this$grid_size.x,\n            gy = _this$grid_size.y,\n            gz = _this$grid_size.z;\n        var compiled = this.generate(parse$1(use + styles, this.extra));\n\n        if (!this.shadowRoot.innerHTML) {\n          Object.assign(this.grid_size, compiled.grid);\n          return this.build_grid(compiled, compiled.grid);\n        }\n\n        if (compiled.grid) {\n          var _compiled$grid = compiled.grid,\n              x = _compiled$grid.x,\n              y = _compiled$grid.y,\n              z = _compiled$grid.z;\n\n          if (gx !== x || gy !== y || gz !== z) {\n            Object.assign(this.grid_size, compiled.grid);\n            return this.build_grid(compiled, compiled.grid);\n          }\n\n          Object.assign(this.grid_size, compiled.grid);\n        } else {\n          var grid = this.get_grid();\n          var _x = grid.x,\n              _y = grid.y,\n              _z = grid.z;\n\n          if (gx !== _x || gy !== _y || gz !== _z) {\n            Object.assign(this.grid_size, grid);\n            return this.build_grid(this.generate(parse$1(use + styles, this.extra)), grid);\n          }\n        }\n\n        var svg_paths = this.build_svg_paths(compiled.paths);\n\n        if (svg_paths) {\n          var defs = this.shadowRoot.querySelector('.svg-defs');\n\n          if (defs) {\n            defs.innerHTML = svg_paths;\n          }\n        }\n\n        if (compiled.uniforms.time) {\n          this.register_uniform_time();\n        }\n\n        var replace = this.replace(compiled);\n        this.set_content('.style-keyframes', replace(compiled.styles.keyframes));\n\n        if (compiled.props.has_animation) {\n          this.set_content('.style-cells', '');\n          this.set_content('.style-container', '');\n        }\n\n        setTimeout(function () {\n          _this10.set_content('.style-container', replace(get_grid_styles(_this10.grid_size) + compiled.styles.host + compiled.styles.container));\n\n          _this10.set_content('.style-cells', replace(compiled.styles.cells));\n        });\n      }\n    }, {\n      key: \"grid\",\n      get: function get() {\n        return Object.assign({}, this.grid_size);\n      },\n      set: function set(grid) {\n        this.attr('grid', grid);\n        this.connectedCallback(true);\n      }\n    }, {\n      key: \"seed\",\n      get: function get() {\n        return this._seed_value;\n      },\n      set: function set(seed) {\n        this.attr('seed', seed);\n        this.connectedCallback(true);\n      }\n    }, {\n      key: \"use\",\n      get: function get() {\n        return this.attr('use');\n      },\n      set: function set(use) {\n        this.attr('use', use);\n        this.connectedCallback(true);\n      }\n    }, {\n      key: \"attributeChangedCallback\",\n      value: function attributeChangedCallback(name, old_val, new_val) {\n        if (old_val == new_val) {\n          return false;\n        }\n\n        var observed = ['grid', 'use', 'seed'].includes(name);\n\n        if (observed && !is_nil(old_val)) {\n          this[name] = new_val;\n        }\n      }\n    }, {\n      key: \"get_grid\",\n      value: function get_grid() {\n        return parse_grid(this.attr('grid'));\n      }\n    }, {\n      key: \"get_use\",\n      value: function get_use() {\n        var use = this.attr('use') || '';\n        if (use) use = \"@use:\".concat(use, \";\");\n        return use;\n      }\n    }, {\n      key: \"attr\",\n      value: function attr(name, value) {\n        if (arguments.length === 1) {\n          return this.getAttribute(name);\n        }\n\n        if (arguments.length === 2) {\n          this.setAttribute(name, value);\n          return value;\n        }\n      }\n    }, {\n      key: \"generate\",\n      value: function generate(parsed) {\n        var grid = this.get_grid();\n        var seed = this.attr('seed') || this.attr('data-seed');\n\n        if (is_nil(seed)) {\n          seed = Date.now();\n        }\n\n        seed = String(seed);\n        this._seed_value = seed;\n        var random = this.random = seedrandom(seed);\n        var compiled = this.compiled = generator(parsed, grid, random);\n        return compiled;\n      }\n    }, {\n      key: \"doodle_to_image\",\n      value: function doodle_to_image(code, options, fn) {\n        if (typeof options === 'function') {\n          fn = options;\n          options = null;\n        }\n\n        var parsed = parse$1(code, this.extra);\n\n        var _grid = parse_grid({});\n\n        var compiled = generator(parsed, _grid, this.random);\n        var grid = compiled.grid ? compiled.grid : _grid;\n        var _compiled$styles = compiled.styles,\n            keyframes = _compiled$styles.keyframes,\n            host = _compiled$styles.host,\n            container = _compiled$styles.container,\n            cells = _compiled$styles.cells;\n        var svg_defs = this.build_svg_paths(compiled.paths);\n        var replace = this.replace(compiled);\n        var grid_container = create_grid(grid);\n        var size = options && options.width && options.height ? \"width=\\\"\".concat(options.width, \"\\\" height=\\\"\").concat(options.height, \"\\\"\") : '';\n        replace(\"\\n      <svg \".concat(size, \" xmlns=\\\"http://www.w3.org/2000/svg\\\" preserveAspectRatio=\\\"none\\\">\\n        <foreignObject width=\\\"100%\\\" height=\\\"100%\\\">\\n          <div class=\\\"host\\\" xmlns=\\\"http://www.w3.org/1999/xhtml\\\">\\n            <style>\\n              \").concat(get_basic_styles(), \"\\n              \").concat(get_grid_styles(grid), \"\\n              \").concat(host, \"\\n              \").concat(container, \"\\n              \").concat(cells, \"\\n              \").concat(keyframes, \"\\n            </style>\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"0\\\" height=\\\"0\\\">\\n              <defs class=\\\"svg-defs\\\">\").concat(svg_defs, \"</defs>\\n            </svg>\\n            \").concat(grid_container, \"\\n          </div>\\n        </foreignObject>\\n      </svg>\\n    \")).then(function (result) {\n          var source = \"data:image/svg+xml;base64,\".concat(window.btoa(unescape(encodeURIComponent(result))));\n\n          if (is_safari()) {\n            cache_image(source);\n          }\n\n          fn(source);\n        });\n      }\n    }, {\n      key: \"shader_to_image\",\n      value: function shader_to_image(_ref50, fn) {\n        var _this11 = this;\n\n        var shader = _ref50.shader,\n            cell = _ref50.cell;\n        var parsed = parse$2(shader);\n        var element = this.doodle.getElementById(cell);\n\n        var _element$getBoundingC = element.getBoundingClientRect(),\n            width = _element$getBoundingC.width,\n            height = _element$getBoundingC.height;\n\n        var ratio = window.devicePixelRatio || 1;\n\n        if (!parsed.textures.length) {\n          draw_shader(parsed, width, height).then(fn);\n        } // Need to bind textures first\n        else {\n            var transforms = parsed.textures.map(function (texture) {\n              return new Promise(function (resolve) {\n                _this11.doodle_to_image(texture.value, {\n                  width: width,\n                  height: height\n                }, function (src) {\n                  var img = new Image();\n                  img.width = width * ratio;\n                  img.height = height * ratio;\n\n                  img.onload = function () {\n                    return resolve({\n                      name: texture.name,\n                      value: img\n                    });\n                  };\n\n                  img.src = src;\n                });\n              });\n            });\n            Promise.all(transforms).then(function (textures) {\n              parsed.textures = textures;\n              draw_shader(parsed, width, height).then(fn);\n            });\n          }\n      }\n    }, {\n      key: \"load\",\n      value: function load(again) {\n        var _this12 = this;\n\n        if (!again) {\n          if (this.hasAttribute('click-to-update')) {\n            this.addEventListener('click', function (e) {\n              return _this12.update();\n            });\n          }\n        }\n\n        var use = this.get_use();\n\n        if (!this.innerHTML.trim() && !use) {\n          return false;\n        }\n\n        var parsed = parse$1(use + un_entity(this.innerHTML), this.extra);\n        var compiled = this.generate(parsed);\n        this.grid_size = compiled.grid ? compiled.grid : this.get_grid();\n        this.build_grid(compiled, this.grid_size);\n      }\n    }, {\n      key: \"replace\",\n      value: function replace(_ref51) {\n        var _this13 = this;\n\n        var doodles = _ref51.doodles,\n            shaders = _ref51.shaders,\n            paths = _ref51.paths;\n        var doodle_ids = Object.keys(doodles);\n        var shader_ids = Object.keys(shaders);\n        var path_ids = Object.keys(paths);\n        return function (input) {\n          if (!doodle_ids.length && !shader_ids.length && !path_ids.length) {\n            return Promise.resolve(input);\n          }\n\n          var mappings = [].concat(doodle_ids.map(function (id) {\n            if (input.includes(id)) {\n              return new Promise(function (resolve) {\n                _this13.doodle_to_image(doodles[id], function (value) {\n                  return resolve({\n                    id: id,\n                    value: value\n                  });\n                });\n              });\n            } else {\n              return Promise.resolve('');\n            }\n          }), shader_ids.map(function (id) {\n            if (input.includes(id)) {\n              return new Promise(function (resolve) {\n                _this13.shader_to_image(shaders[id], function (value) {\n                  return resolve({\n                    id: id,\n                    value: value\n                  });\n                });\n              });\n            } else {\n              return Promise.resolve('');\n            }\n          }), path_ids.map(function (id) {\n            if (input.includes(id)) {\n              return Promise.resolve({\n                id: id,\n                value: '#' + id\n              });\n            } else {\n              return Promise.resolve('');\n            }\n          }));\n          return Promise.all(mappings).then(function (mapping) {\n            if (input.replaceAll) {\n              mapping.forEach(function (_ref52) {\n                var id = _ref52.id,\n                    value = _ref52.value;\n                input = input.replaceAll('${' + id + '}', \"url(\".concat(value, \")\"));\n              });\n            } else {\n              mapping.forEach(function (_ref53) {\n                var id = _ref53.id,\n                    value = _ref53.value;\n                input = input.replace('${' + id + '}', \"url(\".concat(value, \")\"));\n              });\n            }\n\n            return input;\n          });\n        };\n      }\n    }, {\n      key: \"build_grid\",\n      value: function build_grid(compiled, grid) {\n        var _this14 = this;\n\n        var _compiled$props = compiled.props,\n            has_transition = _compiled$props.has_transition,\n            has_animation = _compiled$props.has_animation;\n        var has_delay = has_transition || has_animation;\n        var _compiled$styles2 = compiled.styles,\n            keyframes = _compiled$styles2.keyframes,\n            host = _compiled$styles2.host,\n            container = _compiled$styles2.container,\n            cells = _compiled$styles2.cells;\n        var style_container = get_grid_styles(grid) + host + container;\n        var style_cells = has_delay ? '' : cells;\n        var svg_defs = this.build_svg_paths(compiled.paths);\n        var uniforms = compiled.uniforms;\n        var replace = this.replace(compiled);\n        this.doodle.innerHTML = \"\\n      <style>\".concat(get_basic_styles(uniforms), \"</style>\\n      <style class=\\\"style-keyframes\\\">\").concat(keyframes, \"</style>\\n      <style class=\\\"style-container\\\">\").concat(style_container, \"</style>\\n      <style class=\\\"style-cells\\\">\").concat(style_cells, \"</style>\\n      <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"0\\\" height=\\\"0\\\">\\n        <defs class=\\\"svg-defs\\\">\").concat(svg_defs, \"</defs>\\n      </svg>\\n      \").concat(create_grid(grid), \"\\n    \");\n        this.set_content('.style-container', replace(style_container));\n\n        if (has_delay) {\n          setTimeout(function () {\n            _this14.set_content('.style-cells', replace(cells));\n          }, 50);\n        } else {\n          this.set_content('.style-cells', replace(cells));\n        } // might be removed in the future\n\n\n        var definitions = compiled.definitions;\n\n        if (window.CSS && window.CSS.registerProperty) {\n          try {\n            if (uniforms.time) {\n              this.register_uniform_time();\n            }\n\n            definitions.forEach(CSS.registerProperty);\n          } catch (e) {}\n        }\n      }\n    }, {\n      key: \"build_svg_paths\",\n      value: function build_svg_paths(paths) {\n        var names = Object.keys(paths || {});\n        return names.map(function (name) {\n          return \"\\n      <clipPath id=\\\"\".concat(paths[name].id, \"\\\" clipPathUnits=\\\"objectBoundingBox\\\">\\n        <path d=\\\"\").concat(paths[name].commands, \"\\\" />\\n      </clipPath>\\n    \");\n        }).join('');\n      }\n    }, {\n      key: \"register_uniform_time\",\n      value: function register_uniform_time() {\n        if (!this.is_uniform_time_registered) {\n          try {\n            CSS.registerProperty({\n              name: '--' + uniform_time.name,\n              syntax: '<number>',\n              initialValue: 0,\n              inherits: true\n            });\n          } catch (e) {}\n\n          this.is_uniform_time_registered = true;\n        }\n      }\n    }, {\n      key: \"export\",\n      value: function _export() {\n        var _this15 = this;\n\n        var _ref54 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            scale = _ref54.scale,\n            name = _ref54.name,\n            download = _ref54.download,\n            detail = _ref54.detail;\n\n        return new Promise(function (resolve, reject) {\n          var variables = get_all_variables(_this15);\n          var html = _this15.doodle.innerHTML;\n\n          var _this15$getBoundingCl = _this15.getBoundingClientRect(),\n              width = _this15$getBoundingCl.width,\n              height = _this15$getBoundingCl.height;\n\n          scale = parseInt(scale) || 1;\n          var w = width * scale;\n          var h = height * scale;\n          var svg = minify(\"\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n          preserveAspectRatio=\\\"none\\\"\\n          viewBox=\\\"0 0 \".concat(width, \" \").concat(height, \"\\\"\\n          \").concat(is_safari() ? '' : \"width=\\\"\".concat(w, \"px\\\" height=\\\"\").concat(h, \"px\\\"\"), \"\\n        >\\n          <foreignObject width=\\\"100%\\\" height=\\\"100%\\\">\\n            <div\\n              class=\\\"host\\\"\\n              xmlns=\\\"http://www.w3.org/1999/xhtml\\\"\\n              style=\\\"width: \").concat(width, \"px; height: \").concat(height, \"px; \\\"\\n            >\\n              <style>.host { \").concat(variables, \" }</style>\\n              \").concat(html, \"\\n            </div>\\n          </foreignObject>\\n        </svg>\\n      \"));\n\n          if (download || detail) {\n            svg_to_png(svg, w, h, scale).then(function (_ref55) {\n              var source = _ref55.source,\n                  url = _ref55.url,\n                  blob = _ref55.blob;\n              resolve({\n                width: w,\n                height: h,\n                svg: svg,\n                blob: blob,\n                source: source\n              });\n\n              if (download) {\n                var a = document.createElement('a');\n                a.download = normalize_png_name(name);\n                a.href = url;\n                a.click();\n              }\n            }).catch(function (error) {\n              reject(error);\n            });\n          } else {\n            resolve({\n              width: w,\n              height: h,\n              svg: svg\n            });\n          }\n        });\n      }\n    }, {\n      key: \"set_content\",\n      value: function set_content(selector, styles) {\n        var _this16 = this;\n\n        if (styles instanceof Promise) {\n          styles.then(function (value) {\n            _this16.set_content(selector, value);\n          });\n        } else {\n          var el = this.shadowRoot.querySelector(selector);\n          el && (el.styleSheet ? el.styleSheet.cssText = styles : el.innerHTML = styles);\n        }\n      }\n    }], [{\n      key: \"observedAttributes\",\n      get: function get() {\n        return ['grid', 'use', 'seed'];\n      }\n    }]);\n\n    return Doodle;\n  }( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\n  if (!customElements.get('css-doodle')) {\n    customElements.define('css-doodle', Doodle);\n  }\n\n  function get_basic_styles() {\n    var uniforms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var inherited_grid_props = get_props(/grid/).map(function (n) {\n      return \"\".concat(n, \": inherit;\");\n    }).join('');\n    return \"\\n    * {\\n      box-sizing: border-box\\n    }\\n    *::after, *::before {\\n      box-sizing: inherit\\n    }\\n    :host, .host {\\n      display: block;\\n      visibility: visible;\\n      width: auto;\\n      height: auto;\\n      --\".concat(uniform_time.name, \": 0\\n    }\\n    :host([hidden]), .host[hidden] {\\n      display: none\\n    }\\n    .container {\\n      position: relative;\\n      width: 100%;\\n      height: 100%;\\n      display: grid;\\n      \").concat(inherited_grid_props, \"\\n    }\\n    cell:empty {\\n      position: relative;\\n      line-height: 1;\\n      display: grid;\\n      place-items: center\\n    }\\n    svg {\\n      position: absolute;\\n    }\\n  \");\n  }\n\n  function get_grid_styles(_ref56) {\n    var x = _ref56.x,\n        y = _ref56.y;\n    return \"\\n    :host, .host {\\n      grid-template-rows: repeat(\".concat(y, \", 1fr);\\n      grid-template-columns: repeat(\").concat(x, \", 1fr);\\n    }\\n  \");\n  }\n\n  function minify(input) {\n    return input.replace(/\\n\\s+|^\\s+|\\n+/g, ' ').trim();\n  }\n\n  function create_cell(x, y, z) {\n    var cell = document.createElement('cell');\n    cell.id = cell_id(x, y, z);\n    return cell;\n  }\n\n  function create_grid(_ref57) {\n    var x = _ref57.x,\n        y = _ref57.y,\n        z = _ref57.z;\n    var grid = document.createElement('grid');\n    var root = document.createDocumentFragment();\n\n    if (z == 1) {\n      for (var j = 1; j <= y; ++j) {\n        for (var i = 1; i <= x; ++i) {\n          root.appendChild(create_cell(i, j, 1));\n        }\n      }\n    } else {\n      var temp = null;\n\n      for (var _i2 = 1; _i2 <= z; ++_i2) {\n        var cell = create_cell(1, 1, _i2);\n        (temp || root).appendChild(cell);\n        temp = cell;\n      }\n\n      temp = null;\n    }\n\n    grid.className = 'container';\n    grid.appendChild(root);\n    return grid.outerHTML;\n  }\n\n  function CSSDoodle(input) {\n    for (var _len23 = arguments.length, vars = new Array(_len23 > 1 ? _len23 - 1 : 0), _key23 = 1; _key23 < _len23; _key23++) {\n      vars[_key23 - 1] = arguments[_key23];\n    }\n\n    var get_value = function get_value(v) {\n      return is_nil(v) ? '' : v;\n    };\n\n    var rules = input.reduce(function (s, c, i) {\n      return s + c + get_value(vars[i]);\n    }, '');\n    var doodle = document.createElement('css-doodle');\n\n    if (doodle.update) {\n      doodle.update(rules);\n    }\n\n    return doodle;\n  }\n\n  return CSSDoodle;\n});","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOS/Calculator/node_modules/css-doodle/css-doodle.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","CSSDoodle","iterator","input","index","col","line","curr","n","end","length","info","undefined","next","parse","it","word","marks","groups","result","c","push","test","name","alternative","pop","Error","parse_var","trim","e","console","warn","message","List","random","make_array","arr","Array","isArray","join","spliter","last","first","clone","JSON","stringify","shuffle","ret","from","slice","m","i","t","flat_map","fn","prototype","flatMap","reduce","acc","x","concat","remove_empty_values","filter","v","String","Tokens","func","type","arguments","argument","value","text","pseudo","selector","styles","cond","rule","property","keyframes","steps","step","is","white_space","line_break","number","isNaN","pair","includes","pair_of","symbols","Math","PI","throw_error","msg","get_text_value","read_until","reset","read_word","check","read_keyframe_name","read_line","read_step","extra","read_selector","read_rule","read_steps","read_keyframes","read_comments","flag","inline","read_tag","read_property","prop","read_arguments","composition","doodle","args","group","stack","arg","trimLeft","read_func","startsWith","raw","substr","cloned","normalize_argument","map","replace","ft","ed","cf","ce","cluster","seperate_func_name","fname","prev","substring","has_argument","unshift","position","read_value","idx","skip","read_cond_selector","read_pseudo","read_var","read_cond","Object","assign","read_variable","get_variable","evaluate_value","values","forEach","vars","p","other","parsed","every","parse$1","apply","token","clamp","num","min","max","maybe","range","start","stop","count","old","initial","alias_for","obj","names","keys","is_letter","is_nil","s","lazy","wrap","sequence","split","y","parseInt","j","cell_id","z","get_value","normalize_png_name","prefix","Date","now","cache_image","src","delay","img","Image","crossOrigin","onload","setTimeout","is_safari","navigator","userAgent","un_entity","code","textarea","document","createElement","innerHTML","total","parse_grid","size","max_xy","max_z","is_quote","last$1","array","parse$2","temp","textures","w","words","key","need_break","fragment","create_svg_url","svg","id","encoded","encodeURIComponent","normalize_svg","xmlns","svg_to_png","width","height","scale","Promise","resolve","reject","source","action","canvas","ctx","getContext","dpr","window","devicePixelRatio","drawImage","toBlob","blob","url","URL","createObjectURL","random_func","lerp","rand","nrand","mean","u1","u2","R","sqrt","log","u0","cos","pick","items","unique_id","toString","by_unit","unit","get_unit","restore","str","Number","some","matched","match","by_charcode","codes","charCodeAt","fromCharCode","last$2","default_context","calc","context","expr","infix_to_postfix","calc$1","operator","repeat","shift","expand","is_cycle","output","fns","right","left","compute","get_tokens","tokens","op_stack","func_body","op","a","b","pow","_","variable","store","memo","last$3","expand$1","build_range","Type","get_tokens$1","endsWith","to","reverse","Node","data","Stack","limit","_limit","_size","root","node","tail","sin","atan2","DEG","polygon","option","deg","points","add_point","first2","point","frame","theta","read_fillrule","rotate","rad","translate","offset","dx","dy","shapes","circle","triangle","rhombus","pentagon","hexgon","hexagon","heptagon","octagon","star","diamond","cross","clover","k","hypocycloid","astroid","infinity","heart","bean","bicorn","drop","pear","fish","whale","r","bud","alien","d","is_empty","custom_shape","props","degree","px","py","pr","origin","is_seperator","no_space","skip_seperator","parse$3","parse$4","read_comments$1","uniform_time","get_exposed","Expose","row","depth","grid","make_sequence","push_stack","counter","pos","last_pick","transform_type","rand_int","round","nrand_int","last_rand","colors","default_count","custom_sizes","default_size","color","commands","rest","config","all","get_props","Set","head","style","add","toLowerCase","has","build_mapping","reg","RegExp","props_webkit_mapping","props_moz_mapping","prefixer","presets","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","c10","c11","c12","d0","d1","d2","d3","d4","d5","d6","letter","legal","ledger","tabloid","executive","postcard","poster","modes","portrait","pt","landscape","ls","l","get_preset","mode","h","is_preset","Property","is_special_selector","map_left_right","map_top_bottom","top","cw","ch","options","rules","build_expr","nth","is$1","even","odd","even_or_odd","Selector","at","x1","y1","exprs","ratio","methods","getOwnPropertyNames","MathFunc","expose","image","integer","angle","time","resolution","percentage","get_definition","syntax","initialValue","inherits","is_host_selector","is_parent_selector","Rules","is_grid_defined","coords","doodles","shaders","paths","Func","custom_properties","uniforms","host","container","cells","_fn","is_string_or_number","pick_func","is_composable","compose_doodle","compose_shaders","compose_argument","apply_func","compose_path","shader","cell","val","_coords","value_group","composed","compose_value","has_animation","compose_aname","has_transition","transformed","add_rule","compose","pre_compose","pre_compose_rule","compose_selector","compose_rule","special","target","animation","aname","definitions","def","generator","grid_size","math","pool","chunks","digits","rngname","startdenom","significance","overflow","mask","nodecrypto","seedrandom","seed","callback","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","g","int32","quick","double","S","pass","is_math_call","state","copy","keylen","me","f","typ","stringseed","smear","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","screen","create_shader","gl","createShader","shaderSource","compileShader","create_program","vss","fss","vs","VERTEX_SHADER","fs","FRAGMENT_SHADER","prog","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","getShaderInfoLog","add_uniform","uniform","fragment_head","default_vertex_shader","load_texture","texture","createTexture","activeTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","draw_shader","program","vertex","positionAttributeLocation","getAttribLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertices","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","viewport","drawingBufferWidth","drawingBufferHeight","clearColor","clear","COLOR_BUFFER_BIT","useProgram","uniform2fv","getUniformLocation","uniform1i","drawArrays","TRIANGLES","toDataURL","get_all_variables","element","computedStyleMap","getComputedStyle","getPropertyValue","Doodle","attachShadow","again","readyState","load","use","get_use","get_grid","gx","gy","gz","compiled","generate","shadowRoot","build_grid","svg_paths","build_svg_paths","defs","querySelector","register_uniform_time","set_content","get_grid_styles","attr","connectedCallback","_seed_value","old_val","new_val","observed","getAttribute","setAttribute","_grid","svg_defs","grid_container","create_grid","get_basic_styles","then","btoa","unescape","getElementById","getBoundingClientRect","transforms","doodle_to_image","hasAttribute","addEventListener","update","doodle_ids","shader_ids","path_ids","mappings","shader_to_image","mapping","replaceAll","has_delay","style_container","style_cells","CSS","registerProperty","is_uniform_time_registered","download","detail","variables","html","minify","href","click","catch","error","el","styleSheet","cssText","HTMLElement","customElements","get","inherited_grid_props","create_cell","createDocumentFragment","appendChild","className","outerHTML"],"mappings":"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","sourcesContent":["/*! css-doodle@0.15.3 */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.CSSDoodle = factory());\n}(this, (function () { 'use strict';\n\n  function iterator(input) {\n    let index = 0, col = 1, line = 1;\n    return {\n      curr(n = 0) {\n        return input[index + n];\n      },\n      end() {\n        return input.length <= index;\n      },\n      info() {\n        return { index, col, line };\n      },\n      index(n) {\n        return (n === undefined ? index : index = n);\n      },\n      next() {\n        let next = input[index++];\n        if (next == '\\n') line++, col = 0;\n        else col++;\n        return next;\n      }\n    };\n  }\n\n  // I'll make it work first\n  function parse(it) {\n    let word = '', marks = [];\n    let groups = [], result = {};\n\n    while(!it.end()) {\n      let c = it.curr();\n      if (c == '(') {\n        marks.push(c);\n        word = '';\n      }\n      else if (c == ')' || c == ',') {\n        if (/^\\-\\-.+/.test(word)) {\n          if (!result.name) {\n            result.name = word;\n          } else {\n            if (!result.alternative) {\n              result.alternative = [];\n            }\n            result.alternative.push({\n              name: word\n            });\n          }\n        }\n\n        if (c == ')') {\n          if (marks[marks.length - 1] == '(') {\n            marks.pop();\n          } else {\n            throw new Error('bad match');\n          }\n        }\n\n        if (c == ',') {\n          if (!marks.length) {\n            groups.push(result);\n            result = {};\n          }\n        }\n\n        word = '';\n      }\n      else if (!/\\s/.test(c)) {\n        word += c;\n      }\n      it.next();\n    }\n\n    if (marks.length) {\n      return [];\n    }\n\n    if (result.name) {\n      groups.push(result);\n    }\n    return groups;\n  }\n\n  function parse_var(input) {\n    input = input.trim();\n    let result = [];\n    if (!/^var\\(/.test(input)) {\n      return result;\n    }\n    let it = iterator(input);\n    try {\n      result = parse(it);\n    } catch (e) {\n      console.warn(e && e.message || 'Bad variables.');\n    }\n    return result;\n  }\n\n  function List(random) {\n\n    function make_array(arr) {\n      return Array.isArray(arr) ? arr : [arr];\n    }\n\n    function join(arr, spliter = '\\n') {\n      return (arr || []).join(spliter);\n    }\n\n    function last(arr, n = 1) {\n      return arr[arr.length - n];\n    }\n\n    function first(arr) {\n      return arr[0];\n    }\n\n    function clone(arr) {\n      return JSON.parse(JSON.stringify(arr));\n    }\n\n    function shuffle(arr) {\n      let ret = Array.from ? Array.from(arr) : arr.slice();\n      let m = arr.length;\n      while (m) {\n        let i = ~~(random() * m--);\n        let t = ret[m];\n        ret[m] = ret[i];\n        ret[i] = t;\n      }\n      return ret;\n    }\n\n    function flat_map(arr, fn) {\n      if (Array.prototype.flatMap) return arr.flatMap(fn);\n      return arr.reduce((acc, x) => acc.concat(fn(x)), []);\n    }\n\n    function remove_empty_values(arr) {\n      return arr.filter(v => (\n        v !== undefined &&\n        v !== null &&\n        String(v).trim().length\n      ));\n    }\n\n    return {\n      make_array,\n      join,\n      last,\n      first,\n      clone,\n      shuffle,\n      flat_map,\n      remove_empty_values\n    }\n  }\n\n  let { first, last, clone } = List();\n\n  const Tokens = {\n    func(name = '') {\n      return {\n        type: 'func',\n        name,\n        arguments: []\n      };\n    },\n    argument() {\n      return {\n        type: 'argument',\n        value: []\n      };\n    },\n    text(value = '') {\n      return {\n        type: 'text',\n        value\n      };\n    },\n    pseudo(selector = '') {\n      return {\n        type: 'pseudo',\n        selector,\n        styles: []\n      };\n    },\n    cond(name = '') {\n      return {\n        type: 'cond',\n        name,\n        styles: [],\n        arguments: []\n      };\n    },\n    rule(property = '') {\n      return {\n        type: 'rule',\n        property,\n        value: []\n      };\n    },\n    keyframes(name = '') {\n      return {\n        type: 'keyframes',\n        name,\n        steps: []\n      }\n    },\n\n    step(name = '') {\n      return {\n        type: 'step',\n        name,\n        styles: []\n      }\n    }\n  };\n\n  const is = {\n    white_space(c) {\n      return /[\\s\\n\\t]/.test(c);\n    },\n    line_break(c) {\n      return /\\n/.test(c);\n    },\n    number(n) {\n      return !isNaN(n);\n    },\n    pair(n) {\n      return ['\"', '(', ')', \"'\"].includes(n);\n    },\n    pair_of(c, n) {\n      return ({ '\"': '\"', \"'\": \"'\", '(': ')' })[c] == n;\n    }\n  };\n\n  // This should not be in the parser\n  // but I'll leave it here until the rewriting\n  const symbols = {\n    'π': Math.PI,\n    '∏': Math.PI\n  };\n\n  function throw_error(msg, { col, line }) {\n    console.warn(\n      `(at line ${ line }, column ${ col }) ${ msg }`\n    );\n  }\n\n  function get_text_value(input) {\n    if (input.trim().length) {\n      return is.number(+input) ? +input : input.trim()\n    } else {\n      return input;\n    }\n  }\n\n  function read_until(fn) {\n    return function(it, reset) {\n      let index = it.index();\n      let word = '';\n      while (!it.end()) {\n        let c = it.next();\n        if (fn(c)) break;\n        else word += c;\n      }\n      if (reset) {\n        it.index(index);\n      }\n      return word;\n    }\n  }\n\n  function read_word(it, reset) {\n    let check = c => /[^\\w@]/.test(c);\n    return read_until(check)(it, reset);\n  }\n\n  function read_keyframe_name(it) {\n    return read_until(c => /[\\s\\{]/.test(c))(it);\n  }\n\n  function read_line(it, reset) {\n    let check = c => is.line_break(c) || c == '{';\n    return read_until(check)(it, reset);\n  }\n\n  function read_step(it, extra) {\n    let c, step = Tokens.step();\n    while (!it.end()) {\n      if ((c = it.curr()) == '}') break;\n      if (is.white_space(c)) {\n        it.next();\n        continue;\n      }\n      else if (!step.name.length) {\n        step.name = read_selector(it);\n      }\n      else {\n        step.styles.push(read_rule(it, extra));\n        if (it.curr() == '}') break;\n      }\n      it.next();\n    }\n    return step;\n  }\n\n  function read_steps(it, extra) {\n    const steps = [];\n    let c;\n    while (!it.end()) {\n      if ((c = it.curr()) == '}') break;\n      else if (is.white_space(c)) {\n        it.next();\n        continue;\n      }\n      else {\n        steps.push(read_step(it, extra));\n      }\n      it.next();\n    }\n    return steps;\n  }\n\n  function read_keyframes(it, extra) {\n    let keyframes = Tokens.keyframes(), c;\n    while (!it.end()) {\n      if ((c = it.curr()) == '}') break;\n      else if (!keyframes.name.length) {\n        read_word(it);\n        keyframes.name = read_keyframe_name(it);\n        if (!keyframes.name.length) {\n          throw_error('missing keyframes name', it.info());\n          break;\n        }\n        continue;\n      }\n      else if (c == '{') {\n        it.next();\n        keyframes.steps = read_steps(it, extra);\n        break;\n      }\n      it.next();\n    }\n    return keyframes;\n  }\n\n  function read_comments(it, flag = {}) {\n    it.next();\n    while (!it.end()) {\n      let c = it.curr();\n      if (flag.inline) {\n        if (c == '\\n') break;\n      }\n      else {\n        if ((c = it.curr()) == '*' && it.curr(1) == '/') break;\n      }\n      it.next();\n    }\n    if (!flag.inline) {\n      it.next(); it.next();\n    }\n  }\n\n  function read_tag(it) {\n    it.next();\n    while(!it.end()) {\n      let c = it.curr();\n      if (c == '>') break;\n      it.next();\n    }\n  }\n\n  function read_property(it) {\n    let prop = '', c;\n    while (!it.end()) {\n      if ((c = it.curr()) == ':') break;\n      else if (!is.white_space(c)) prop += c;\n      it.next();\n    }\n    return prop;\n  }\n\n  function read_arguments(it, composition, doodle) {\n    let args = [], group = [], stack = [], arg = '', c;\n    while (!it.end()) {\n      c = it.curr();\n      if ((/[\\('\"`]/.test(c) && it.curr(-1) !== '\\\\')) {\n        if (stack.length) {\n          if (c != '(' && c === last(stack)) {\n            stack.pop();\n          } else {\n            stack.push(c);\n          }\n        } else {\n          stack.push(c);\n        }\n        arg += c;\n      }\n      else if (c == '@' && !doodle) {\n        if (!group.length) {\n          arg = arg.trimLeft();\n        }\n        if (arg.length) {\n          group.push(Tokens.text(arg));\n          arg = '';\n        }\n        group.push(read_func(it));\n      }\n      else if (doodle && /[)]/.test(c) || (!doodle && /[,)]/.test(c))) {\n        if (stack.length) {\n          if (c == ')') {\n            stack.pop();\n          }\n          arg += c;\n        }\n\n        else {\n          if (arg.length) {\n            if (!group.length) {\n              group.push(Tokens.text(get_text_value(arg)));\n            } else {\n              group.push(Tokens.text(arg));\n            }\n\n            if (arg.startsWith('±') && !doodle) {\n              let raw = arg.substr(1);\n              let cloned = clone(group);\n              last(cloned).value = '-' + raw;\n              args.push(normalize_argument(cloned));\n              last(group).value = raw;\n            }\n          }\n\n          args.push(normalize_argument(group));\n\n          [group, arg] = [[], ''];\n\n          if (c == ')') break;\n        }\n      }\n      else {\n        if (symbols[c] && !/[0-9]/.test(it.curr(-1))) {\n          c = symbols[c];\n        }\n        arg += c;\n      }\n\n      if (composition && it.curr() == ')' && !stack.length) {\n        if (group.length) {\n          args.push(normalize_argument(group));\n        }\n        break;\n      }\n      else {\n        it.next();\n      }\n    }\n    return args;\n  }\n\n  function normalize_argument(group) {\n    let result = group.map(arg => {\n      if (arg.type == 'text' && typeof arg.value == 'string') {\n        let value = String(arg.value);\n        if (value.includes('`')) {\n          arg.value = value = value.replace(/`/g, '\"');\n        }\n        arg.value = value.replace(/\\n+|\\s+/g, ' ');\n      }\n      return arg;\n    });\n\n    let ft = first(result) || {};\n    let ed = last(result) || {};\n    if (ft.type == 'text' && ed.type == 'text') {\n      let cf = first(ft.value);\n      let ce  = last(ed.value);\n      if (typeof ft.value == 'string' && typeof ed.value == 'string') {\n        if (is.pair_of(cf, ce)) {\n          ft.value = ft.value.slice(1);\n          ed.value = ed.value.slice(0, ed.value.length - 1);\n          result.cluster = true;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function seperate_func_name(name) {\n    let fname = '', extra = '';\n    if ((/\\D$/.test(name) && !/\\d+x\\d+/.test(name)) || Math[name.substr(1)]) {\n      return { fname: name, extra }\n    }\n    for (let i = name.length - 1; i >= 0; i--) {\n      let c = name[i];\n      let prev = name[i - 1];\n      let next = name[i + 1];\n      if (/[\\d.]/.test(c) || ((c == 'x') && /\\d/.test(prev) && /\\d/.test(next))) {\n        extra = c + extra;\n      } else {\n        fname = name.substring(0, i + 1);\n        break;\n      }\n    }\n    return { fname, extra };\n  }\n\n  function read_func(it) {\n    let func = Tokens.func();\n    let name = '@', c;\n    let has_argument = false;\n    it.next();\n\n    while (!it.end()) {\n      c = it.curr();\n      let composition = (c == '.' && it.curr(1) == '@');\n      let next = it.curr(1);\n      if (c == '(' || composition) {\n        has_argument = true;\n        it.next();\n        func.arguments = read_arguments(it, composition, name === '@doodle' || name == '@shaders');\n        break;\n      } else if (!has_argument && next !== '(' && !/[0-9a-zA-Z_\\-.]/.test(next)) {\n        name += c;\n        break;\n      }\n      else {\n        name += c;\n      }\n      it.next();\n    }\n\n    let { fname, extra } = seperate_func_name(name);\n    func.name = fname;\n\n    if (extra.length) {\n      func.arguments.unshift([{\n        type: 'text',\n        value: extra\n      }]);\n    }\n\n    func.position = it.info().index;\n    return func;\n  }\n\n  function read_value(it) {\n    let text = Tokens.text(), idx = 0, skip = true, c;\n    const value = [], stack = [];\n    value[idx] = [];\n\n    while (!it.end()) {\n      c = it.curr();\n\n      if (skip && is.white_space(c)) {\n        it.next();\n        continue;\n      } else {\n        skip = false;\n      }\n\n      if (c == '\\n' && !is.white_space(it.curr(-1))) {\n        text.value += ' ';\n      }\n      else if (c == ',' && !stack.length) {\n        if (text.value.length) {\n          value[idx].push(text);\n          text = Tokens.text();\n        }\n        value[++idx] = [];\n        skip = true;\n      }\n      else if (/[;}]/.test(c)) {\n        if (text.value.length) {\n          value[idx].push(text);\n          text = Tokens.text();\n        }\n        break;\n      }\n      else if (c == '@') {\n        if (text.value.length) {\n          value[idx].push(text);\n          text = Tokens.text();\n        }\n        value[idx].push(read_func(it));\n      }\n      else if (!is.white_space(c) || !is.white_space(it.curr(-1))) {\n        if (c == '(') stack.push(c);\n        if (c == ')') stack.pop();\n\n        if (symbols[c] && !/[0-9]/.test(it.curr(-1))) {\n          c = symbols[c];\n        }\n\n        text.value += c;\n      }\n      it.next();\n    }\n    if (text.value.length) {\n      value[idx].push(text);\n    }\n    return value;\n  }\n\n  function read_selector(it) {\n    let selector = '', c;\n    while (!it.end()) {\n      if ((c = it.curr()) == '{') break;\n      else if (!is.white_space(c)) {\n        selector += c;\n      }\n      it.next();\n    }\n    return selector;\n  }\n\n  function read_cond_selector(it) {\n    let selector = { name: '', arguments: [] }, c;\n    while (!it.end()) {\n      if ((c = it.curr()) == '(') {\n        it.next();\n        selector.arguments = read_arguments(it);\n      }\n      else if (/[){]/.test(c)) break;\n      else if (!is.white_space(c)) selector.name += c;\n      it.next();\n    }\n    return selector;\n  }\n\n  function read_pseudo(it, extra) {\n    let pseudo = Tokens.pseudo(), c;\n    while (!it.end()) {\n      if ((c = it.curr()) == '}') break;\n      if (is.white_space(c)) {\n        it.next();\n        continue;\n      }\n      else if (!pseudo.selector) {\n        pseudo.selector = read_selector(it);\n      }\n      else {\n        let rule = read_rule(it, extra);\n        if (rule.property == '@use') {\n          pseudo.styles = pseudo.styles.concat(\n            rule.value\n          );\n        } else {\n          pseudo.styles.push(rule);\n        }\n        if (it.curr() == '}') break;\n      }\n      it.next();\n    }\n    return pseudo;\n  }\n\n  function read_rule(it, extra) {\n    let rule = Tokens.rule(), c;\n    while (!it.end()) {\n      if ((c = it.curr()) == ';') break;\n      else if (!rule.property.length) {\n        rule.property = read_property(it);\n        if (rule.property == '@use') {\n          rule.value = read_var(it, extra);\n          break;\n        }\n      }\n      else {\n        rule.value = read_value(it);\n        break;\n      }\n      it.next();\n    }\n    return rule;\n  }\n\n  function read_cond(it, extra) {\n    let cond = Tokens.cond(), c;\n    while (!it.end()) {\n      if ((c = it.curr()) == '}') break;\n      else if (!cond.name.length) {\n        Object.assign(cond, read_cond_selector(it));\n      }\n      else if (c == ':') {\n        let pseudo = read_pseudo(it);\n        if (pseudo.selector) cond.styles.push(pseudo);\n      }\n      else if (c == '@' && !read_line(it, true).includes(':')) {\n        cond.styles.push(read_cond(it));\n      }\n      else if (!is.white_space(c)) {\n        let rule = read_rule(it, extra);\n        if (rule.property) cond.styles.push(rule);\n        if (it.curr() == '}') break;\n      }\n      it.next();\n    }\n    return cond;\n  }\n\n  function read_variable(extra, name) {\n    let rule = '';\n    if (extra && extra.get_variable) {\n      rule = extra.get_variable(name);\n    }\n    return rule;\n  }\n\n  function evaluate_value(values, extra) {\n    values.forEach && values.forEach(v => {\n      if (v.type == 'text' && v.value) {\n        let vars = parse_var(v.value);\n        v.value = vars.reduce((ret, p) => {\n          let rule = '', other = '', parsed;\n          rule = read_variable(extra, p.name);\n          if (!rule && p.alternative) {\n            p.alternative.every(n => {\n              other = read_variable(extra, n.name);\n              if (other) {\n                rule = other;\n                return false;\n              }\n            });\n          }\n          try {\n            parsed = parse$1(rule, extra);\n          } catch (e) { }\n          if (parsed) {\n            ret.push.apply(ret, parsed);\n          }\n          return ret;\n        }, []);\n      }\n      if (v.type == 'func' && v.arguments) {\n        v.arguments.forEach(arg => {\n          evaluate_value(arg, extra);\n        });\n      }\n    });\n  }\n\n  function read_var(it, extra) {\n    it.next();\n    let groups = read_value(it) || [];\n    return groups.reduce((ret, group) => {\n      evaluate_value(group, extra);\n      let [token] = group;\n      if (token.value && token.value.length) {\n        ret.push(...token.value);\n      }\n      return ret;\n    }, []);\n  }\n\n  function parse$1(input, extra) {\n    const it = iterator(input);\n    const Tokens = [];\n    while (!it.end()) {\n      let c = it.curr();\n      if (is.white_space(c)) {\n        it.next();\n        continue;\n      }\n      else if (c == '/' && it.curr(1) == '*') {\n        read_comments(it);\n      }\n      else if (c == '/' && it.curr(1) == '/') {\n        read_comments(it, { inline: true });\n      }\n      else if (c == ':') {\n        let pseudo = read_pseudo(it, extra);\n        if (pseudo.selector) Tokens.push(pseudo);\n      }\n      else if (c == '@' && read_word(it, true) === '@keyframes') {\n        let keyframes = read_keyframes(it, extra);\n        Tokens.push(keyframes);\n      }\n      else if (c == '@' && !read_line(it, true).includes(':')) {\n        let cond = read_cond(it, extra);\n        if (cond.name.length) Tokens.push(cond);\n      }\n      else if (c == '<') {\n        read_tag(it);\n      }\n      else if (!is.white_space(c)) {\n        let rule = read_rule(it, extra);\n        if (rule.property) Tokens.push(rule);\n      }\n      it.next();\n    }\n    return Tokens;\n  }\n\n  function clamp(num, min, max) {\n    return Math.max(min, Math.min(max, num));\n  }\n\n  function maybe(cond, value) {\n    if (!cond) return '';\n    return (typeof value === 'function') ? value() : value;\n  }\n\n  function range(start, stop, step) {\n    let count = 0, old = start;\n    let initial = n => (n > 0 && n < 1) ? .1 : 1;\n    let length = arguments.length;\n    if (length == 1) [start, stop] = [initial(start), start];\n    if (length < 3) step = initial(start);\n    let range = [];\n    while ((step >= 0 && start <= stop)\n      || (step < 0 && start > stop)) {\n      range.push(start);\n      start += step;\n      if (count++ >= 1000) break;\n    }\n    if (!range.length) range.push(old);\n    return range;\n  }\n\n  function alias_for(obj, names) {\n    Object.keys(names).forEach(n => {\n      obj[n] = obj[names[n]];\n    });\n    return obj;\n  }\n\n  function is_letter(c) {\n    return /^[a-zA-Z]$/.test(c);\n  }\n\n  function is_nil(s) {\n    return s === undefined || s === null;\n  }\n\n  function lazy(fn) {\n    let wrap = () => fn;\n    wrap.lazy = true;\n    return wrap;\n  }\n\n  function sequence(count, fn) {\n    let [x, y = 1] = String(count).split('x');\n    x = clamp(parseInt(x) || 1, 1, 65536);\n    y = clamp(parseInt(y) || 1, 1, 65536);\n    let max = x * y;\n    let ret = [];\n    let index = 1;\n    for (let i = 1; i <= y; ++i) {\n      for (let j = 1; j <= x; ++j) {\n        ret.push(fn(index++, j, i, max));\n      }\n    }\n    return ret;\n  }\n\n  function cell_id(x, y, z) {\n    return 'c-' + x + '-' + y + '-' + z;\n  }\n\n  function get_value(input) {\n    while (input && input.value) {\n      return get_value(input.value);\n    }\n    return is_nil(input) ? '' : input;\n  }\n\n  function normalize_png_name(name) {\n    let prefix = is_nil(name)\n      ? Date.now()\n      : String(name).replace(/\\/.png$/g, '');\n    return prefix + '.png';\n  }\n\n  function cache_image(src, fn, delay = 0) {\n    let img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.src = src;\n    img.onload = function() {\n      setTimeout(fn, delay);\n    };\n  }\n\n  function is_safari() {\n    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  }\n\n  function un_entity(code) {\n    let textarea = document.createElement('textarea');\n    textarea.innerHTML = code;\n    return textarea.value;\n  }\n\n  const [ min, max, total ] = [ 1, 32, 32 * 32 ];\n\n  function parse_grid(size) {\n    let [x, y, z] = (size + '')\n      .replace(/\\s+/g, '')\n      .replace(/[,，xX]+/g, 'x')\n      .split('x')\n      .map(n => parseInt(n));\n\n    const max_xy = (x == 1 || y == 1) ? total : max;\n    const max_z = (x == 1 && y == 1) ? total : min;\n\n    const ret = {\n      x: clamp(x || min, 1, max_xy),\n      y: clamp(y || x || min, 1, max_xy),\n      z: clamp(z || min, 1, max_z)\n    };\n\n    return Object.assign({}, ret,\n      { count: ret.x * ret.y * ret.z }\n    );\n  }\n\n  function is_quote(c) {\n    return c == '\"' || c == \"'\";\n  }\n\n  function last$1(array) {\n    return array[array.length - 1];\n  }\n\n  function parse$2(input) {\n    let c = '';\n    let temp = '';\n    let name = '';\n    let stack = [];\n    let result = {\n      textures: []\n    };\n    let w = '';\n    let words = [];\n    let i = 0;\n    while ((c = input[i++]) !== undefined) {\n      if (c == '\"' || c == \"'\") {\n        if (last$1(stack) == c) {\n          stack.pop();\n        } else {\n          stack.push(c);\n        }\n      }\n      if (c == '{' && !is_quote(last$1(stack)))  {\n        if (!stack.length) {\n          name = temp;\n          temp = '';\n        } else {\n          temp += c;\n        }\n        stack.push(c);\n      }\n      else if (c == '}' && !is_quote(last$1(stack)))  {\n        stack.pop();\n        if (!stack.length) {\n          let key = name.trim();\n          let value = temp.trim().replace(/^\\(+|\\)+$/g, '');\n          if (key.length) {\n            if (key.startsWith('texture')) {\n              result.textures.push({\n                name: key,\n                value: value\n              });\n            } else {\n              result[key] = value;\n            }\n          }\n          name = temp = '';\n        } else {\n          temp += c;\n        }\n      }\n      else {\n        if (/\\s/.test(c) && w.length) {\n          words.push(w);\n          w = '';\n          let need_break =\n            (words[words.length - 3] == '#define') ||\n            (words[words.length - 2] == '#ifdef') ||\n            (words[words.length - 1] == '#else') ||\n            (words[words.length - 1] == '#endif');\n\n          if (need_break) {\n            temp = temp + '\\n';\n          }\n        } else {\n          w += c;\n        }\n        temp += c;\n      }\n    }\n\n    if (result.fragment === undefined) {\n      return {\n        fragment: input,\n        textures: []\n      }\n    }\n\n    return result;\n  }\n\n  function create_svg_url(svg, id) {\n    let encoded = encodeURIComponent(svg) + (id ? `#${ id }` : '');\n    return `url(\"data:image/svg+xml;utf8,${ encoded }\")`;\n  }\n\n  function normalize_svg(input) {\n    const xmlns = 'xmlns=\"http://www.w3.org/2000/svg\"';\n    if (!input.includes('<svg')) {\n      input = `<svg ${ xmlns }>${ input }</svg>`;\n    }\n    if (!input.includes('xmlns')) {\n      input = input.replace(/<svg([\\s>])/, `<svg ${ xmlns }$1`);\n    }\n    return input;\n  }\n\n\n  function svg_to_png(svg, width, height, scale) {\n    return new Promise((resolve, reject) => {\n      let source = `data:image/svg+xml;utf8,${ encodeURIComponent(svg) }`;\n\n      function action() {\n        let img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.src = source;\n\n        img.onload = () => {\n          let canvas = document.createElement('canvas');\n          let ctx = canvas.getContext('2d');\n\n          let dpr = window.devicePixelRatio || 1;\n          /* scale with devicePixelRatio only when the scale equals 1 */\n          if (scale != 1) {\n            dpr = 1;\n          }\n\n          canvas.width = width * dpr;\n          canvas.height = height * dpr;\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n          try {\n            canvas.toBlob(blob => {\n              resolve({\n                blob,\n                source,\n                url: URL.createObjectURL(blob)\n              });\n            });\n          } catch (e) {\n            reject(e);\n          }\n        };\n      }\n\n      if (is_safari) {\n        cache_image(source, action, 200);\n      } else {\n        action();\n      }\n    });\n  }\n\n  function random_func(random) {\n\n    function lerp(start, end, t) {\n      return start * (1 - t) + end * t;\n    }\n\n    function rand(start = 0, end = start) {\n      if (arguments.length == 1) {\n        if (start == 1) start = 0;\n        else if (start < 1) start /= 10;\n        else start = 1;\n      }\n      return lerp(start, end, random());\n    }\n\n    function nrand(mean = 0, scale = 1) {\n      let u1 = 0, u2 = 0;\n      //Convert [0,1) to (0,1)\n      while (u1 === 0) u1 = random();\n      while (u2 === 0) u2 = random();\n      const R = Math.sqrt(-2.0 * Math.log(u1));\n      const t = 2.0 * Math.PI * u2;\n      const u0 = R * Math.cos(t);\n      return mean + scale * u0;\n    }\n\n    function pick( ...items) {\n      let args = items.reduce((acc, n) => acc.concat(n), []);\n      return args[~~(random() * args.length)];\n    }\n\n    function unique_id(prefix = '') {\n      return prefix + Math.random().toString(32).substr(2);\n    }\n\n    return {\n      lerp,\n      rand,\n      nrand,\n      pick,\n      unique_id\n    };\n\n  }\n\n  function by_unit(fn) {\n    return (...args) => {\n      let unit = get_unit(args);\n      return restore(fn, unit).apply(null, args);\n    }\n  }\n\n  function restore(fn, unit) {\n    return (...args) => {\n      args = args.map(str => Number(\n        String(str).replace(/\\D+$/g, '')\n      ));\n      let result = fn.apply(null, args);\n      if (!unit.length) {\n        return result;\n      }\n      if (Array.isArray(result)) {\n        return result.map(n => n + unit);\n      }\n      return result + unit;\n    }\n  }\n\n  function get_unit(values) {\n    let unit = '';\n    values.some(str => {\n      let input = String(str).trim();\n      if (!input) return '';\n      let matched = input.match(/\\d(\\D+)$/);\n      return (unit = matched ? matched[1] : '');\n    });\n    return unit;\n  }\n\n  function by_charcode(fn) {\n    return (...args) => {\n      let codes = args.map(n => String(n).charCodeAt(0));\n      let result = fn.apply(null, codes);\n      return Array.isArray(result)\n        ? result.map(n => String.fromCharCode(n))\n        : String.fromCharCode(result);\n    }\n  }\n\n  /**\n   * Based on the Shunting-yard algorithm.\n   */\n  let { last: last$2 } = List();\n\n  const default_context = {\n    'π': Math.PI,\n    '∏': Math.PI\n  };\n\n  function calc(input, context) {\n    const expr = infix_to_postfix(input);\n    return calc$1(expr, Object.assign(default_context, context));\n  }\n\n  const operator = {\n    '^' : 4,\n    '*': 3, '/': 3, '%': 3,\n    '+': 2, '-': 2,\n    '(': 1, ')': 1\n  };\n\n  function calc$1(expr, context, repeat = []) {\n    let stack = [];\n    while (expr.length) {\n      let { name, value, type } = expr.shift();\n      if (type === 'variable') {\n        let result = context[value];\n        if (typeof result === 'undefined') {\n          result = Math[value];\n        }\n        if (typeof result === 'undefined') {\n          result = expand(value, context);\n        }\n        if (typeof result === 'undefined') {\n          result = 0;\n        }\n        if (typeof result !== 'number') {\n          repeat.push(result);\n          if (is_cycle(repeat)) {\n            result = 0;\n            repeat = [];\n          } else {\n            result = calc$1(infix_to_postfix(result), context, repeat);\n          }\n        }\n        stack.push(result);\n      }\n      else if (type === 'function') {\n        let output = value.map(v => calc$1(v, context));\n        let fns = name.split('.');\n        let fname;\n        while (fname = fns.pop()) {\n          if (!fname) continue;\n          let fn = context[fname] || Math[fname];\n          output = (typeof fn === 'function')\n            ? (Array.isArray(output) ? fn(...output) : fn(output))\n            : 0;\n        }\n        stack.push(output);\n      } else {\n        if (/\\d+/.test(value)) stack.push(value);\n        else {\n          let right = stack.pop();\n          let left = stack.pop();\n          stack.push(compute(\n            value, Number(left), Number(right)\n          ));\n        }\n      }\n    }\n    return stack[0];\n  }\n\n  function get_tokens(input) {\n    let expr = String(input);\n    let tokens = [], num = '';\n\n    for (let i = 0; i < expr.length; ++i) {\n      let c = expr[i];\n      if (operator[c]) {\n        if (c == '-' && expr[i - 1] == 'e') {\n          num += c;\n        }\n        else if (!tokens.length && !num.length && /[+-]/.test(c)) {\n          num += c;\n        } else {\n          let { type, value } = last$2(tokens) || {};\n          if (type == 'operator'\n              && !num.length\n              && /[^()]/.test(c)\n              && /[^()]/.test(value)) {\n            num += c;\n          } else {\n            if (num.length) {\n              tokens.push({ type: 'number', value: num });\n              num = '';\n            }\n            tokens.push({ type: 'operator', value: c });\n          }\n        }\n      }\n      else if (/\\S/.test(c)) {\n        if (c == ',') {\n          tokens.push({ type: 'number', value: num });\n          num = '';\n          tokens.push({ type: 'comma', value: c });\n        } else {\n          num += c;\n        }\n      }\n    }\n\n    if (num.length) {\n      tokens.push({ type: 'number', value: num });\n    }\n    return tokens;\n  }\n\n  function infix_to_postfix(input) {\n    let tokens = get_tokens(input);\n    const op_stack = [], expr = [];\n\n    for (let i = 0; i < tokens.length; ++i) {\n      let { type, value } = tokens[i];\n      let next = tokens[i + 1] || {};\n      if (type == 'number') {\n        if (next.value == '(' && /[^\\d.]/.test(value)) {\n          let func_body = '';\n          let stack = [];\n          let values = [];\n\n          i += 1;\n          while (tokens[i++] !== undefined) {\n            let token = tokens[i];\n            if (token === undefined) break;\n            let c = token.value;\n            if (c == ')') {\n              if (!stack.length) break;\n              stack.pop();\n              func_body += c;\n            }\n            else {\n              if (c == '(') stack.push(c);\n              if (c == ',' && !stack.length) {\n                let arg = infix_to_postfix(func_body);\n                if (arg.length) values.push(arg);\n                func_body = '';\n              } else {\n                func_body += c;\n              }\n            }\n          }\n\n          if (func_body.length) {\n            values.push(infix_to_postfix(func_body));\n          }\n\n          expr.push({\n            type: 'function',\n            name: value,\n            value: values\n          });\n        }\n        else if (/[^\\d.]/.test(value)) {\n          expr.push({ type: 'variable', value });\n        }\n        else {\n          expr.push({ type: 'number', value });\n        }\n      }\n\n      else if (type == 'operator') {\n        if (value == '(') {\n          op_stack.push(value);\n        }\n\n        else if (value == ')') {\n          while (op_stack.length && last$2(op_stack) != '(') {\n            expr.push({ type: 'operator', value: op_stack.pop() });\n          }\n          op_stack.pop();\n        }\n\n        else {\n          while (op_stack.length && operator[last$2(op_stack)] >= operator[value]) {\n            let op = op_stack.pop();\n            if (!/[()]/.test(op)) expr.push({ type: 'operator', value: op });\n          }\n          op_stack.push(value);\n        }\n      }\n    }\n\n    while (op_stack.length) {\n      expr.push({ type: 'operator', value: op_stack.pop() });\n    }\n\n    return expr;\n  }\n\n  function compute(op, a, b) {\n    switch (op) {\n      case '+': return a + b;\n      case '-': return a - b;\n      case '*': return a * b;\n      case '/': return a / b;\n      case '%': return a % b;\n      case '^': return Math.pow(a, b);\n    }\n  }\n\n  function expand(value, context) {\n    let [_, num, variable] = value.match(/([\\d.]+)(.*)/) || [];\n    let v = context[variable];\n    if (v === undefined) {\n      return v;\n    }\n    if (typeof v === 'number') {\n      return Number(num) * v;\n    } else {\n      return num * calc$1(infix_to_postfix(v), context);\n    }\n  }\n\n  function is_cycle(array) {\n    return (array[0] == array[2] && array[1] == array[3]);\n  }\n\n  const store = {};\n\n  function memo(prefix, fn) {\n    return (...args) => {\n      let key = prefix + args.join('-');\n      if (store[key]) return store[key];\n      return (store[key] = fn.apply(null, args));\n    }\n  }\n\n  const { last: last$3, flat_map } = List();\n\n  function expand$1(fn) {\n    return (...args) => fn.apply(null, flat_map(args, n =>\n      String(n).startsWith('[') ? build_range(n) : n\n    ));\n  }\n\n  function Type(type, value) {\n    return { type, value };\n  }\n\n  function get_tokens$1(input) {\n    let expr = String(input);\n    let tokens = [], stack = [];\n    if (!expr.startsWith('[') || !expr.endsWith(']')) {\n      return tokens;\n    }\n\n    for (let i = 1; i < expr.length - 1; ++i) {\n      let c = expr[i];\n      if (c == '-' && expr[i - 1] == '-') {\n        continue;\n      }\n      if (c == '-') {\n        stack.push(c);\n        continue;\n      }\n      if (last$3(stack) == '-') {\n        stack.pop();\n        let from = stack.pop();\n        tokens.push(from\n          ? Type('range', [ from, c ])\n          : Type('char', c)\n        );\n        continue;\n      }\n      if (stack.length) {\n        tokens.push(Type('char', stack.pop()));\n      }\n      stack.push(c);\n    }\n    if (stack.length) {\n      tokens.push(Type('char', stack.pop()));\n    }\n    return tokens;\n  }\n\n  const build_range = memo('build_range', (input) => {\n    let tokens = get_tokens$1(input);\n    return flat_map(tokens, ({ type, value }) => {\n      if (type == 'char') return value;\n      let [ from, to ] = value;\n      let reverse = false;\n      if (from > to) {\n        [from, to] = [ to, from ];\n        reverse = true;\n      }\n      let result = by_charcode(range)(from, to);\n      if (reverse) result.reverse();\n      return result;\n    });\n  });\n\n  class Node {\n    constructor(data) {\n      this.prev = this.next = null;\n      this.data = data;\n    }\n  }\n\n  class Stack {\n    constructor(limit = 20) {\n      this._limit = limit;\n      this._size = 0;\n    }\n\n    push(data) {\n      if (this._size >= this._limit) {\n        this.root = this.root.next;\n        this.root.prev = null;\n      }\n\n      let node = new Node(data);\n\n      if (!this.root) {\n        this.root = this.tail = node;\n      } else {\n        node.prev = this.tail;\n        this.tail.next = node;\n        this.tail = node;\n      }\n\n      this._size++;\n    }\n\n    last(n = 1) {\n      let node = this.tail;\n      while (--n) {\n        if (!node.prev) break;\n        node = node.prev;\n      }\n      return node.data;\n    }\n  }\n\n  const { cos, sin, sqrt, atan2, pow, PI } = Math;\n  const DEG = PI / 180;\n\n  function polygon(option, fn) {\n    if (typeof arguments[0] == 'function') {\n      fn = option;\n      option = {};\n    }\n\n    if (!fn) {\n      fn = t => [ cos(t), sin(t) ];\n    }\n\n    let split = option.split || 120;\n    let scale = option.scale || 1;\n    let start = DEG * (option.start || 0);\n    let deg = option.deg ? (option.deg * DEG) : (PI / (split / 2));\n\n    let points = [];\n    let add_point = ([x, y], scale) => {\n      points.push(\n        ((x * 50 * scale) + 50 + '% ') +\n        ((y * 50 * scale) + 50 + '%')\n      );\n    };\n\n    let first, first2;\n\n    for (let i = 0; i < split; ++i) {\n      let t = start - deg * i;\n      let point = fn(t, i);\n      if (!i) first = point;\n      add_point(point, scale);\n    }\n\n    if (option.frame !== undefined) {\n      add_point(first, scale);\n      let w = (option.frame || 1) / 100;\n      if (w <= 0) w = 2 / 1000;\n      for (let i = 0; i < split; ++i) {\n        let t = start + deg * i;\n        let [x, y] = fn(t, i);\n        let theta = atan2(y, x);\n        let point = [\n          x - w * cos(theta),\n          y - w * sin(theta)\n        ];\n        if (!i) first2 = point;\n        add_point(point, scale);\n      }\n      add_point(first2, scale);\n      add_point(first, scale);\n    }\n\n    option.type = read_fillrule(option['fill-rule']);\n\n    return option.type\n      ? `polygon(${ option.type }, ${ points.join(',') })`\n      : `polygon(${ points.join(',') })`;\n  }\n\n  function read_fillrule(value) {\n    return (value === 'nonzero' || value == 'evenodd')\n      ? value\n      : '';\n  }\n\n  function rotate(x, y, deg) {\n    let rad = DEG * deg;\n    return [\n      x * cos(rad) - y * sin(rad),\n      y * cos(rad) + x * sin(rad)\n    ];\n  }\n\n  function translate(x, y, offset) {\n    let [dx, dy = dx] = String(offset).split(/[,\\s]/).map(Number);\n    return [\n      x + (dx || 0),\n      y + (dy || 0)\n    ];\n  }\n\n  const shapes =  {\n\n    circle() {\n      return 'circle(49%)';\n    },\n\n    triangle() {\n      return polygon({ split: 3, start: -90 }, t => [\n        cos(t) * 1.1,\n        sin(t) * 1.1 + .2\n      ]);\n    },\n\n    rhombus() {\n      return polygon({ split: 4 });\n    },\n\n    pentagon() {\n      return polygon({ split: 5, start: 54 });\n    },\n\n    hexgon() {\n      return polygon({ split: 6, start: 30 });\n    },\n\n    hexagon() {\n      return polygon({ split: 6, start: 30 });\n    },\n\n    heptagon() {\n      return polygon({ split: 7, start: -90 });\n    },\n\n    octagon() {\n      return polygon({ split: 8, start: 22.5 });\n    },\n\n    star() {\n      return polygon({ split: 5, start: 54, deg: 144 });\n    },\n\n    diamond() {\n      return 'polygon(50% 5%, 80% 50%, 50% 95%, 20% 50%)';\n    },\n\n    cross() {\n      return `polygon(\n      5% 35%,  35% 35%, 35% 5%,  65% 5%,\n      65% 35%, 95% 35%, 95% 65%, 65% 65%,\n      65% 95%, 35% 95%, 35% 65%, 5% 65%\n    )`;\n    },\n\n    clover(k = 3) {\n      k = clamp(k, 3, 5);\n      if (k == 4) k = 2;\n      return polygon({ split: 240 }, t => {\n        let x = cos(k * t) * cos(t);\n        let y = cos(k * t) * sin(t);\n        if (k == 3) x -= .2;\n        if (k == 2) {\n          x /= 1.1;\n          y /= 1.1;\n        }\n        return [x, y];\n      });\n    },\n\n    hypocycloid(k = 3) {\n      k = clamp(k, 3, 6);\n      let m = 1 - k;\n      return polygon({ scale: 1 / k  }, t => {\n        let x = m * cos(t) + cos(m * (t - PI));\n        let y = m * sin(t) + sin(m * (t - PI));\n        if (k == 3) {\n          x = x * 1.1 - .6;\n          y = y * 1.1;\n        }\n        return [x, y];\n      });\n    },\n\n    astroid() {\n      return shapes.hypocycloid(4);\n    },\n\n    infinity() {\n      return polygon(t => {\n        let a = .7 * sqrt(2) * cos(t);\n        let b = (pow(sin(t), 2) + 1);\n        return [\n          a / b,\n          a * sin(t) / b\n        ]\n      });\n    },\n\n    heart() {\n      return polygon(t => {\n        let x = .75 * pow(sin(t), 3);\n        let y =\n            cos(1 * t) * (13 / 18)\n          - cos(2 * t) * (5 / 18)\n          - cos(3 * t) / 18\n          - cos(4 * t) / 18;\n        return rotate(\n          x * 1.2,\n          (y + .2) * 1.1,\n          180\n        );\n      });\n    },\n\n    bean() {\n      return polygon(t => {\n        let [a, b] = [pow(sin(t), 3), pow(cos(t), 3)];\n        return rotate(\n          (a + b) * cos(t) * 1.3 - .45,\n          (a + b) * sin(t) * 1.3 - .45,\n          -90\n        );\n      });\n    },\n\n    bicorn() {\n      return polygon(t => rotate(\n        cos(t),\n        pow(sin(t), 2) / (2 + sin(t)) - .5,\n        180\n      ));\n    },\n\n    drop() {\n      return polygon(t => rotate(\n        sin(t),\n        (1 + sin(t)) * cos(t) / 1.4,\n        90\n      ));\n    },\n\n    pear() {\n      return polygon(t => [\n        sin(t),\n        (1 + sin(t)) * cos(t) / 1.4\n      ]);\n    },\n\n    fish() {\n      return polygon(t => [\n        cos(t) - pow(sin(t), 2) / sqrt(2),\n        sin(2 * t) / 2\n      ]);\n    },\n\n    whale() {\n      return polygon({ split: 240 }, t => {\n        let r = 3.4 * (pow(sin(t), 2) - .5) * cos(t);\n        return rotate(\n          cos(t) * r + .75,\n          sin(t) * r * 1.2,\n          180\n        );\n      });\n    },\n\n    bud(n = 3) {\n      n = clamp(n, 3, 10);\n      return polygon({ split: 240 }, t => [\n        ((1 + .2 * cos(n * t)) * cos(t)) * .8,\n        ((1 + .2 * cos(n * t)) * sin(t)) * .8\n      ]);\n    },\n\n    alien(...args) {\n      let [a = 1, b = 1, c = 1, d = 1, e = 1]\n        = args.map(n => clamp(n, 1, 9));\n      return polygon({ split: 480, type: 'evenodd' }, t => [\n        (cos(t * a) + cos(t * c) + cos(t * e)) * .31,\n        (sin(t * b) + sin(t * d) + sin(t)) * .31\n      ]);\n    }\n  };\n\n  function is_empty(value) {\n    return is_nil(value) || value === '';\n  }\n\n  function custom_shape(props) {\n    let option = Object.assign({}, props, {\n      split: clamp(parseInt(props.split) || 0, 3, 3600),\n      start: 0\n    });\n\n    if (props.degree) {\n      props.rotate= props.degree;\n    }\n\n    let px = is_empty(props.x) ? 'cos(t)' : props.x;\n    let py = is_empty(props.y) ? 'sin(t)' : props.y;\n    let pr = is_empty(props.r) ? ''       : props.r;\n\n    return polygon(option, (t, i) => {\n      let context = Object.assign({}, props, {\n        't': t,\n        'θ': t,\n        'seq': (...list) => {\n          if (!list.length) return '';\n          return list[i % list.length];\n        }\n      });\n\n      let x = calc(px, context);\n      let y = calc(py, context);\n\n      if (pr) {\n        let r = calc(pr, context);\n        x = r * Math.cos(t);\n        y = r * Math.sin(t);\n      }\n      if (props.rotate) {\n        [x, y] = rotate(x, y, Number(props.rotate) || 0);\n      }\n      if (props.origin) {\n        [x, y] = translate(x, y, props.origin);\n      }\n      return [x, y];\n    });\n  }\n\n  function is_seperator(c, no_space) {\n    if (no_space) return /[,，]/.test(c);\n    else return /[,，\\s]/.test(c);\n  }\n\n  function skip_seperator(it, no_space) {\n    while (!it.end()) {\n      if (!is_seperator(it.curr(1), no_space)) break;\n      else it.next();\n    }\n  }\n\n  function parse$3(input, no_space = false) {\n    if (is_nil(input)) input = '';\n    const it = iterator(String(input));\n    const result = [], stack = [];\n    let group = '';\n\n    while (!it.end()) {\n      let c = it.curr();\n      if (c === undefined) break;\n      if (c == '(') {\n        group += c;\n        stack.push(c);\n      }\n\n      else if (c == ')') {\n        group += c;\n        if (stack.length) {\n          stack.pop();\n        }\n      }\n\n      else if (stack.length) {\n        group += c;\n      }\n\n      else if (is_seperator(c, no_space)) {\n        result.push(group);\n        group = '';\n        skip_seperator(it, no_space);\n      }\n\n      else {\n        group += c;\n      }\n\n      it.next();\n    }\n\n    if (!is_nil(group)) {\n      result.push(group);\n    }\n\n    return result;\n  }\n\n  function parse$4(input) {\n    const it = iterator(input);\n\n    let temp = '';\n    let result = {};\n    let key = '';\n    let value = '';\n\n    while (!it.end()) {\n      let c = it.curr();\n      if (c == '/' && it.curr(1) == '*') {\n        read_comments$1(it);\n      }\n      else if (c == ':') {\n        key = temp;\n        temp = '';\n      }\n      else if (c == ';') {\n        value = temp;\n        key = key.trim();\n        value = value.trim();\n        if (key.length && value.length) {\n          result[key] = value;\n        }\n        key = value = temp = '';\n      }\n      else {\n        temp += c;\n      }\n      it.next();\n    }\n\n    key = key.trim();\n    temp = temp.trim();\n    if (key.length && temp.length) {\n      result[key] = temp;\n    }\n\n    return result;\n  }\n\n  function read_comments$1(it, flag = {}) {\n    it.next();\n    while (!it.end()) {\n      let c = it.curr();\n      if ((c = it.curr()) == '*' && it.curr(1) == '/') {\n        it.next(); it.next();\n        break;\n      }\n      it.next();\n    }\n  }\n\n  const uniform_time = {\n    'name': 'cssd-uniform-time',\n    'animation-name': 'cssd-uniform-time-animation',\n    'animation-duration': '31536000000', /* one year in ms */\n    'animation-iteration-count': 'infinite',\n    'animation-delay': '0s',\n    'animation-direction': 'normal',\n    'animation-fill-mode': 'none',\n    'animation-play-state': 'running',\n    'animation-timing-function': 'linear',\n  };\n\n  uniform_time['animation'] = `\n  ${ uniform_time['animation-duration'] }ms\n  ${ uniform_time['animation-timing-function'] }\n  ${ uniform_time['animation-delay'] }\n  ${ uniform_time['animation-iteration-count'] }\n  ${ uniform_time['animation-name'] }\n`;\n\n  function get_exposed(random) {\n    const { shuffle } = List(random);\n    const { pick, rand, nrand, unique_id } = random_func(random);\n\n    const Expose = {\n\n      index({ count }) {\n        return _ => count;\n      },\n\n      row({ y }) {\n        return _ => y;\n      },\n\n      col({ x }) {\n        return _ => x;\n      },\n\n      depth({ z }) {\n        return _ => z;\n      },\n\n      size({ grid }) {\n        return _ => grid.count;\n      },\n\n      ['size-row']({ grid }) {\n        return _ => grid.y;\n      },\n\n      ['size-col']({ grid }) {\n        return _ => grid.x;\n      },\n\n      ['size-depth']({ grid }) {\n        return _ => grid.z;\n      },\n\n      id({ x, y, z }) {\n        return _ => cell_id(x, y, z);\n      },\n\n      n({ extra }) {\n        return _ => extra ? extra[0] : '@n';\n      },\n\n      nx({ extra }) {\n        return _ => extra ? extra[1] : '@nx';\n      },\n\n      ny({ extra }) {\n        return _ => extra ? extra[2] : '@ny';\n      },\n\n      N({ extra }) {\n        return _ => extra ? extra[3] : '@N';\n      },\n\n      repeat: (\n        make_sequence('')\n      ),\n\n      multiple: (\n        make_sequence(',')\n      ),\n\n      ['multiple-with-space']: (\n        make_sequence(' ')\n      ),\n\n      pick({ context }) {\n        return expand$1((...args) => {\n          return push_stack(context, 'last_pick', pick(args));\n        });\n      },\n\n      ['pick-n']({ context, extra, position }) {\n        let counter = 'pn-counter' + position;\n        return expand$1((...args) => {\n          if (!context[counter]) context[counter] = 0;\n          context[counter] += 1;\n          let max = args.length;\n          let [ idx ] = extra || [];\n          let pos = ((idx === undefined ? context[counter] : idx) - 1) % max;\n          let value = args[pos];\n          return push_stack(context, 'last_pick', value);\n        });\n      },\n\n      ['pick-d']({ context, extra, position }) {\n        let counter = 'pd-counter' + position;\n        let values = 'pd-values' + position;\n        return expand$1((...args) => {\n          if (!context[counter]) context[counter] = 0;\n          context[counter] += 1;\n          if (!context[values]) {\n            context[values] = shuffle(args);\n          }\n          let max = args.length;\n          let [ idx ] = extra || [];\n          let pos = ((idx === undefined ? context[counter] : idx) - 1) % max;\n          let value = context[values][pos];\n          return push_stack(context, 'last_pick', value);\n        });\n      },\n\n      ['last-pick']({ context }) {\n        return (n = 1) => {\n          let stack = context.last_pick;\n          return stack ? stack.last(n) : '';\n        };\n      },\n\n      rand({ context }) {\n        return (...args) => {\n          let transform_type = args.every(is_letter)\n            ? by_charcode\n            : by_unit;\n          let value = transform_type(rand).apply(null, args);\n          return push_stack(context, 'last_rand', value);\n        };\n      },\n\n      nrand({ context }) {\n        return (...args) => {\n          let transform_type = args.every(is_letter)\n            ? by_charcode\n            : by_unit;\n          let value = transform_type(nrand).apply(null, args);\n          return push_stack(context, 'last_rand', value);\n        };\n      },\n\n      ['rand-int']({ context }) {\n        return (...args) => {\n          let transform_type = args.every(is_letter)\n            ? by_charcode\n            : by_unit;\n          let rand_int = (...args) => Math.round(rand(...args));\n          let value = transform_type(rand_int).apply(null, args);\n          return push_stack(context, 'last_rand', value);\n        }\n      },\n\n      ['nrand-int']({ context }) {\n        return (...args) => {\n          let transform_type = args.every(is_letter)\n            ? by_charcode\n            : by_unit;\n          let nrand_int = (...args) => Math.round(nrand(...args));\n          let value = transform_type(nrand_int).apply(null, args);\n          return push_stack(context, 'last_rand', value);\n        }\n      },\n\n      ['last-rand']({ context }) {\n        return (n = 1) => {\n          let stack = context.last_rand;\n          return stack ? stack.last(n) : '';\n        };\n      },\n\n      stripe() {\n        return (...input) => {\n          let colors = input.map(get_value);\n          let max = colors.length;\n          let default_count = 0;\n          let custom_sizes = [];\n          let prev;\n          if (!max) {\n            return '';\n          }\n          colors.forEach(step => {\n            let [_, size] = parse$3(step);\n            if (size !== undefined) custom_sizes.push(size);\n            else default_count += 1;\n          });\n          let default_size = custom_sizes.length\n            ? `(100% - ${custom_sizes.join(' - ')}) / ${default_count}`\n            : `100% / ${max}`;\n          return colors\n            .map((step, i) => {\n              if (custom_sizes.length) {\n                let [color, size] = parse$3(step);\n                let prefix = prev ? (prev + ' + ') : '';\n                prev = prefix + (size !== undefined ? size : default_size);\n                return `${color} 0 calc(${ prev })`\n              }\n              return `${step} 0 ${100 / max * (i + 1)}%`\n            })\n            .join(',');\n        }\n      },\n\n      calc() {\n        return value => calc(get_value(value));\n      },\n\n      hex() {\n        return value => parseInt(get_value(value)).toString(16);\n      },\n\n      svg: lazy(input => {\n        if (input === undefined) return '';\n        let svg = normalize_svg(get_value(input()).trim());\n        return create_svg_url(svg);\n      }),\n\n      ['svg-filter']: lazy(input => {\n        if (input === undefined) return '';\n        let id = unique_id('filter-');\n        let svg = normalize_svg(get_value(input()).trim())\n          .replace(\n            /<filter([\\s>])/,\n            `<filter id=\"${ id }\"$1`\n          );\n        return create_svg_url(svg, id);\n      }),\n\n      var() {\n        return value => `var(${ get_value(value) })`;\n      },\n\n      t() {\n        return value => `var(--${ uniform_time.name })`;\n      },\n\n      shape() {\n        return memo('shape-function', (type = '', ...args) => {\n          type = String(type).trim();\n          if (!type.length) return 'polygon()';\n          if (typeof shapes[type] === 'function') {\n            return shapes[type](args);\n          } else {\n            let commands = type;\n            let rest = args.join(',');\n            if (rest.length) {\n              commands = type + ',' + rest;\n            }\n            let config = parse$4(commands);\n            return custom_shape(config);\n          }\n        });\n      },\n\n      doodle() {\n        return value => value;\n      },\n\n      shaders() {\n        return value => value;\n      },\n\n      path() {\n        return value => value;\n      },\n\n    };\n\n    function make_sequence(c) {\n      return lazy((n, action) => {\n        if (!action || !n) return '';\n        let count = get_value(n());\n        return sequence(count, (i, x, y, max) => get_value(action(i, x, y, max))).join(c);\n      });\n    }\n\n    function push_stack(context, name, value) {\n      if (!context[name]) context[name] = new Stack();\n      context[name].push(value);\n      return value;\n    }\n\n    return alias_for(Expose, {\n      'm': 'multiple',\n      'M': 'multiple-with-space',\n\n      'r':    'rand',\n      'rn':   'nrand',\n      'ri':   'rand-int',\n      'rni':  'nrand-int',\n      'lr':   'last-rand',\n\n      'p':  'pick',\n      'pn': 'pick-n',\n      'pd': 'pick-d',\n      'lp': 'last-pick',\n\n      'rep': 'repeat',\n\n      'i': 'index',\n      'x': 'col',\n      'y': 'row',\n      'z': 'depth',\n\n      'I': 'size',\n      'X': 'size-col',\n      'Y': 'size-row',\n      'Z': 'size-depth',\n\n      // legacy names\n      'nr': 'rn',\n      'nri': 'nri',\n      'ms': 'multiple-with-space',\n      's':  'size',\n      'sx': 'size-col',\n      'sy': 'size-row',\n      'sz': 'size-depth',\n      'size-x': 'size-col',\n      'size-y': 'size-row',\n      'size-z': 'size-depth',\n      'multi': 'multiple',\n      'pick-by-turn': 'pick-n',\n      'max-row': 'size-row',\n      'max-col': 'size-col',\n\n      // error prone\n      'stripes': 'stripe',\n      'strip':   'stripe',\n    });\n  }\n\n  let all = [];\n\n  function get_props(arg) {\n    if (!all.length) {\n      let props = new Set();\n      for (let n in document.head.style) {\n        if (!n.startsWith('-')) {\n          props.add(n.replace(/[A-Z]/g, '-$&').toLowerCase());\n        }\n      }\n      if (!props.has('grid-gap')) {\n        props.add('grid-gap');\n      }\n      all = Array.from(props);\n    }\n    return (arg && arg.test)\n      ? all.filter(n => arg.test(n))\n      : all;\n  }\n\n  function build_mapping(prefix) {\n    let reg = new RegExp(`\\\\-?${ prefix }\\\\-?`);\n    return get_props(reg)\n      .map(n => n.replace(reg, ''))\n      .reduce((obj, n) => { return obj[n] = n, obj }, {});\n  }\n\n  const props_webkit_mapping = build_mapping('webkit');\n  const props_moz_mapping = build_mapping('moz');\n\n  function prefixer(prop, rule) {\n    if (props_webkit_mapping[prop]) {\n      return `-webkit-${ rule } ${ rule }`;\n    }\n    else if (props_moz_mapping[prop]) {\n      return `-moz-${ rule } ${ rule }`;\n    }\n    return rule;\n  }\n\n  const presets = {\n\n   '4a0': [ 1682, 2378 ],\n   '2a0': [ 1189, 1682 ],\n    a0:   [ 841, 1189 ],\n    a1:   [ 594, 841 ],\n    a2:   [ 420, 594 ],\n    a3:   [ 297, 420 ],\n    a4:   [ 210, 297 ],\n    a5:   [ 148, 210 ],\n    a6:   [ 105, 148 ],\n    a7:   [ 74, 105 ],\n    a8:   [ 52, 74 ],\n    a9:   [ 37, 52 ],\n    a10:  [ 26, 37 ],\n\n    b0:  [ 1000, 1414 ],\n    b1:  [ 707, 1000 ],\n    b2:  [ 500, 707 ],\n    b3:  [ 353, 500 ],\n    b4:  [ 250, 353 ],\n    b5:  [ 176, 250 ],\n    b6:  [ 125, 176 ],\n    b7:  [ 88, 125 ],\n    b8:  [ 62, 88 ],\n    b9:  [ 44, 62 ],\n    b10: [ 31, 44 ],\n    b11: [ 22, 32 ],\n    b12: [ 16, 22 ],\n\n    c0:  [ 917, 1297 ],\n    c1:  [ 648, 917 ],\n    c2:  [ 458, 648 ],\n    c3:  [ 324, 458 ],\n    c4:  [ 229, 324 ],\n    c5:  [ 162, 229 ],\n    c6:  [ 114, 162 ],\n    c7:  [ 81, 114 ],\n    c8:  [ 57, 81 ],\n    c9:  [ 40, 57 ],\n    c10: [ 28, 40 ],\n    c11: [ 22, 32 ],\n    c12: [ 16, 22 ],\n\n    d0: [ 764, 1064 ],\n    d1: [ 532, 760 ],\n    d2: [ 380, 528 ],\n    d3: [ 264, 376 ],\n    d4: [ 188, 260 ],\n    d5: [ 130, 184 ],\n    d6: [ 92, 126 ],\n\n    letter:         [ 216, 279 ],\n    legal:          [ 216, 356 ],\n    'junior-legal': [ 203, 127 ],\n    ledger:         [ 279, 432 ],\n    tabloid:        [ 279, 432 ],\n    executive:      [ 190, 254 ],\n\n    postcard:        [ 100, 148 ],\n    'business-card': [ 54, 90 ],\n\n    poster: [ 390, 540 ],\n  };\n\n  const modes = {\n    portrait: 'p',\n    pt: 'p',\n    p: 'p',\n\n    landscape: 'l',\n    ls: 'l',\n    l: 'l',\n  };\n\n  const unit = 'mm';\n\n  function get_preset(name, mode) {\n    name = String(name).toLowerCase();\n\n    // Default to landscape mode\n    let [h, w] = presets[name] || [];\n\n    if (modes[mode] == 'p') {\n      [w, h] = [h, w];\n    }\n\n    return [w, h].map(n => n + unit);\n  }\n\n  function is_preset(name) {\n    return !!presets[name];\n  }\n\n  var Property = {\n\n    ['@size'](value, { is_special_selector }) {\n      let [w, h = w] = parse$3(value);\n      if (is_preset(w)) {\n        [w, h] = get_preset(w, h);\n      }\n      return `\n      width: ${ w };\n      height: ${ h };\n      ${ is_special_selector ? '' : `\n        --internal-cell-width: ${ w };\n        --internal-cell-height: ${ h };\n      `}\n    `;\n    },\n\n    ['@min-size'](value) {\n      let [w, h = w] = parse$3(value);\n      return `min-width: ${ w }; min-height: ${ h };`;\n    },\n\n    ['@max-size'](value) {\n      let [w, h = w] = parse$3(value);\n      return `max-width: ${ w }; max-height: ${ h };`;\n    },\n\n    ['@place-cell']: (() => {\n      let map_left_right = {\n        'center': '50%', '0': '0%',\n        'left': '0%', 'right': '100%',\n        'top': '50%', 'bottom': '50%'\n      };\n      let map_top_bottom = {\n        'center': '50%', '0': '0%',\n        'top': '0%', 'bottom': '100%',\n        'left': '50%', 'right': '50%',\n      };\n\n      return value => {\n        let [left, top = '50%'] = parse$3(value);\n        left = map_left_right[left] || left;\n        top = map_top_bottom[top] || top;\n        const cw = 'var(--internal-cell-width, 25%)';\n        const ch = 'var(--internal-cell-height, 25%)';\n        return `\n        position: absolute;\n        left: ${ left };\n        top: ${ top };\n        width: ${ cw };\n        height: ${ ch };\n        margin-left: calc(${ cw } / -2) !important;\n        margin-top: calc(${ ch } / -2) !important;\n        grid-area: unset !important;\n      `;\n      }\n    })(),\n\n    ['@grid'](value, options) {\n      let [grid, ...size] = value.split('/').map(s => s.trim());\n      size = size.join(' / ');\n      return {\n        grid: parse_grid(grid),\n        size: size ? this['@size'](size, options) : ''\n      };\n    },\n\n    ['@shape']: memo('shape-property', value => {\n      let [type, ...args] = parse$3(value);\n      let prop = 'clip-path';\n      if (typeof shapes[type] !== 'function') return '';\n      let rules = `${ prop }: ${ shapes[type](...args) };`;\n      return prefixer(prop, rules) + 'overflow: hidden;';\n    }),\n\n    ['@use'](rules) {\n      if (rules.length > 2) {\n        return rules;\n      }\n    }\n\n  };\n\n  function build_expr(expr) {\n    return n => String(expr)\n      .replace(/(\\d+)(n)/g, '$1*' + n)\n      .replace(/n/g, n);\n  }\n\n  function nth(input, curr, max) {\n    let expr = build_expr(input);\n    for (let i = 0; i <= max; ++i) {\n      if (calc(expr(i)) == curr) return true;\n    }\n  }\n\n  const is$1 = {\n    even: n => !(n % 2),\n    odd:  n => !!(n % 2)\n  };\n\n  function even_or_odd(expr) {\n    return /^(even|odd)$/.test(expr);\n  }\n\n  function Selector(random) {\n\n    return {\n\n      at({ x, y }) {\n        return (x1, y1) => (x == x1 && y == y1);\n      },\n\n      nth({ count, grid }) {\n        return (...exprs) => exprs.some(expr =>\n          even_or_odd(expr)\n            ? is$1[expr](count)\n            : nth(expr, count, grid.count)\n        );\n      },\n\n      row({ y, grid }) {\n        return (...exprs) => exprs.some(expr =>\n          even_or_odd(expr)\n            ? is$1[expr](y)\n            : nth(expr, y, grid.y)\n        );\n      },\n\n      col({ x, grid }) {\n        return (...exprs) => exprs.some(expr =>\n          even_or_odd(expr)\n            ? is$1[expr](x)\n            : nth(expr, x, grid.x)\n        );\n      },\n\n      even({ count, grid, y }) {\n        return arg => {\n          if (arg === 'cross' && is$1.even(grid.x)) {\n            let m = is$1.even(y) ? 'odd' : 'even';\n            return is$1[m](count);\n          } else {\n            return is$1.even(count);\n          }\n        }\n      },\n\n      odd({ count, grid, y}) {\n        return arg => {\n          if (arg === 'cross' && is$1.even(grid.x)) {\n            let m = is$1.even(y) ? 'even' : 'odd';\n            return is$1[m](count);\n          } else {\n            return is$1.odd(count);\n          }\n        }\n      },\n\n      random() {\n        return (ratio = .5) => {\n          if (ratio >= 1 && ratio <= 0) ratio = .5;\n          return random() < ratio;\n        }\n      }\n\n    }\n  }\n\n  // Expose all Math functions and constants.\n  const methods = Object.getOwnPropertyNames(Math);\n\n  var MathFunc = methods.reduce((expose, n) => {\n    expose[n] = () => (...args) => {\n      args = args.map(get_value);\n      if (typeof Math[n] === 'number') return Math[n];\n      return Math[n].apply(null, args.map(calc));\n    };\n    return expose;\n  }, {});\n\n  const initial = {\n    length: '0px',\n    number: 0,\n    color: 'black',\n    url: 'url()',\n    image: 'url()',\n    integer: 0,\n    angle: '0deg',\n    time: '0ms',\n    resolution: '0dpi',\n    percentage: '0%',\n    'length-percentage': '0%',\n    'transform-function': 'translate(0)',\n    'transform-list': 'translate(0)',\n    'custom-ident': '_'\n  };\n\n  function get_definition(name) {\n    let type = String(name).substr(2).split('-')[0];\n    if (initial[type] !== undefined) {\n      return {\n        name: name,\n        syntax: `<${type}> | <${type}>+ | <${type}>#`,\n        initialValue: initial[type],\n        inherits: false\n      }\n    }\n  }\n\n  let { join, make_array, remove_empty_values } = List();\n\n  function is_host_selector(s) {\n    return /^\\:(host|doodle)/.test(s);\n  }\n\n  function is_parent_selector(s) {\n    return /^\\:(container|parent)/.test(s);\n  }\n\n  function is_special_selector(s) {\n    return is_host_selector(s) || is_parent_selector(s);\n  }\n\n  class Rules {\n\n    constructor(tokens, random) {\n      this.tokens = tokens;\n      this.rules = {};\n      this.props = {};\n      this.keyframes = {};\n      this.grid = null;\n      this.is_grid_defined = false;\n      this.coords = [];\n      this.doodles = {};\n      this.shaders = {};\n      this.paths = {};\n      this.reset();\n      this.Func = get_exposed(random);\n      this.Selector = Selector(random);\n      this.custom_properties = {};\n      this.uniforms = {};\n      this.unique_id = random_func(random).unique_id;\n    }\n\n    reset() {\n      this.styles = {\n        host: '',\n        container: '',\n        cells: '',\n        keyframes: ''\n      };\n      this.coords = [];\n      this.doodles = {};\n      for (let key in this.rules) {\n        if (key.startsWith('#c')) {\n          delete this.rules[key];\n        }\n      }\n    }\n\n    add_rule(selector, rule) {\n      let rules = this.rules[selector];\n      if (!rules) {\n        rules = this.rules[selector] = [];\n      }\n      rules.push.apply(rules, make_array(rule));\n    }\n\n    pick_func(name) {\n      return this.Func[name] || MathFunc[name];\n    }\n\n    apply_func(fn, coords, args) {\n      let _fn = fn(...make_array(coords));\n      let input = [];\n      args.forEach(arg => {\n        let type = typeof arg.value;\n        let is_string_or_number = (type === 'number' || type === 'string');\n\n        if (!arg.cluster && (is_string_or_number)) {\n          input.push(...parse$3(arg.value, true));\n        }\n        else {\n          if (typeof arg === 'function') {\n            input.push(arg);\n          }\n          else if (!is_nil(arg.value)) {\n            let value = get_value(arg.value);\n            input.push(value);\n          }\n        }\n      });\n      input = remove_empty_values(input);\n      let result = _fn(...make_array(input));\n      return result;\n    }\n\n    compose_aname(...args) {\n      return args.join('-');\n    }\n\n    compose_selector({ x, y, z}, pseudo = '') {\n      return `#${ cell_id(x, y, z) }${ pseudo }`;\n    }\n\n    is_composable(name) {\n      return ['doodle', 'shaders'].includes(name);\n    }\n\n    compose_argument(argument, coords, extra = []) {\n      let result = argument.map(arg => {\n        if (arg.type === 'text') {\n          return arg.value;\n        }\n        else if (arg.type === 'func') {\n          let fname = arg.name.substr(1);\n          let fn = this.pick_func(fname);\n\n          if (typeof fn === 'function') {\n            if (fname === 't') {\n              this.uniforms.time = true;\n            }\n            if (this.is_composable(fname)) {\n              let value = get_value((arg.arguments[0] || [])[0]);\n              if (!is_nil(value)) {\n                switch (fname) {\n                  case 'doodle':\n                    return this.compose_doodle(value);\n                  case 'shaders':\n                    return this.compose_shaders(value, coords);\n                }\n              }\n            }\n            coords.extra = extra;\n            coords.position = arg.position;\n            let args = arg.arguments.map(n => {\n              return fn.lazy\n                ? (...extra) => this.compose_argument(n, coords, extra)\n                : this.compose_argument(n, coords, extra);\n            });\n            let value = this.apply_func(fn, coords, args);\n            if (fname == 'path') {\n              return this.compose_path(value);\n            }\n            return value;\n          }\n        }\n      });\n\n      return {\n        cluster: argument.cluster,\n        value: (result.length >= 2 ? ({ value: result.join('') }) : result[0])\n      }\n    }\n\n    compose_doodle(doodle) {\n      let id = this.unique_id('doodle');\n      this.doodles[id] = doodle;\n      return '${' + id + '}';\n    }\n\n    compose_shaders(shader, {x, y, z}) {\n      let id = this.unique_id('shader');\n      this.shaders[id] = {\n        shader,\n        cell: cell_id(x, y, z)\n      };\n      return '${' + id + '}';\n    }\n\n    compose_path(commands) {\n      let id = this.unique_id('path');\n      this.paths[id] = {\n        id,\n        commands\n      };\n      return '${' + id + '}';\n    }\n\n    compose_value(value, coords) {\n      if (!Array.isArray(value)) {\n        return '';\n      }\n      return value.reduce((result, val) => {\n        switch (val.type) {\n          case 'text': {\n            result += val.value;\n            break;\n          }\n          case 'func': {\n            let fname = val.name.substr(1);\n            let fn = this.pick_func(fname);\n            if (typeof fn === 'function') {\n              if (fname === 't') {\n                this.uniforms.time = true;\n              }\n              if (this.is_composable(fname)) {\n                let value = get_value((val.arguments[0] || [])[0]);\n                if (!is_nil(value)) {\n                  switch (fname) {\n                    case 'doodle':\n                      result += this.compose_doodle(value); break;\n                    case 'shaders':\n                      result += this.compose_shaders(value, coords); break;\n                  }\n                }\n              } else {\n                coords.position = val.position;\n                let args = val.arguments.map(arg => {\n                  return fn.lazy\n                    ? (...extra) => this.compose_argument(arg, coords, extra)\n                    : this.compose_argument(arg, coords);\n                });\n\n                let output = this.apply_func(fn, coords, args);\n                if (!is_nil(output)) {\n                  if (fname == 'path') {\n                    result += this.compose_path(output);\n                  } else {\n                    result += output;\n                  }\n                }\n              }\n            }\n          }\n        }\n        return result;\n      }, '');\n    }\n\n    compose_rule(token, _coords, selector) {\n      let coords = Object.assign({}, _coords);\n      let prop = token.property;\n      let value_group = token.value.reduce((ret, v) => {\n        let composed = this.compose_value(v, coords);\n        if (composed) ret.push(composed);\n        return ret;\n      }, []);\n\n      let value = value_group.join(', ');\n\n      if (/^animation(\\-name)?$/.test(prop)) {\n        this.props.has_animation = true;\n\n        if (is_host_selector(selector)) {\n          let prefix = uniform_time[prop];\n          if (prefix && value) {\n            value =  prefix + ',' + value;\n          }\n        }\n\n        if (coords.count > 1) {\n          let { count } = coords;\n          switch (prop) {\n            case 'animation-name': {\n              value = value_group\n                .map(n => this.compose_aname(n, count))\n                .join(', ');\n              break;\n            }\n            case 'animation': {\n              value = value_group\n                .map(n => {\n                  let group = (n || '').split(/\\s+/);\n                  group[0] = this.compose_aname(group[0], count);\n                  return group.join(' ');\n                })\n                .join(', ');\n            }\n          }\n        }\n      }\n\n      if (prop === 'content') {\n        if (!/[\"']|^none$|^(var|counter|counters|attr)\\(/.test(value)) {\n          value = `'${ value }'`;\n        }\n      }\n\n      if (prop === 'transition') {\n        this.props.has_transition = true;\n      }\n\n      let rule = `${ prop }: ${ value };`;\n      rule = prefixer(prop, rule);\n\n      if (prop === 'clip-path') {\n        // fix clip bug\n        rule += ';overflow: hidden;';\n      }\n\n      if (prop === 'width' || prop === 'height') {\n        if (!is_special_selector(selector)) {\n          rule += `--internal-cell-${ prop }: ${ value };`;\n        }\n      }\n\n      if (prop === 'background' && value.includes('shader')) {\n        rule += 'background-size: 100% 100%;';\n      }\n\n      if (/^\\-\\-/.test(prop)) {\n        this.custom_properties[prop] = value;\n      }\n\n      if (Property[prop]) {\n        let transformed = Property[prop](value, {\n          is_special_selector: is_special_selector(selector)\n        });\n        switch (prop) {\n          case '@grid': {\n            if (is_host_selector(selector)) {\n              rule = transformed.size || '';\n            } else {\n              rule = '';            if (!this.is_grid_defined) {\n                transformed = Property[prop](value, {\n                  is_special_selector: true\n                });\n                this.add_rule(':host', transformed.size || '');\n              }\n            }\n            this.grid = coords.grid;\n            this.is_grid_defined = true;\n            break;\n          }\n          case '@place-cell': {\n            if (!is_host_selector(selector)) {\n              rule = transformed;\n            }\n            break;\n          }\n          case '@use': {\n            if (token.value.length) {\n              this.compose(coords, token.value);\n            }\n            rule = '';\n            break;\n          }\n          default: {\n            rule = transformed;\n          }\n        }\n      }\n\n      return rule;\n    }\n\n    pre_compose_rule(token, _coords) {\n      let coords = Object.assign({}, _coords);\n      let prop = token.property;\n\n      switch (prop) {\n        case '@grid': {\n          let value_group = token.value.reduce((ret, v) => {\n            let composed = this.compose_value(v, coords);\n            if (composed) ret.push(composed);\n            return ret;\n          }, []);\n          let value = value_group.join(', ');\n          let transformed = Property[prop](value, {});\n          this.grid = transformed.grid;\n          break;\n        }\n        case '@use': {\n          if (token.value.length) {\n            this.pre_compose(coords, token.value);\n          }\n          break;\n        }\n      }\n    }\n\n    pre_compose(coords, tokens) {\n      (tokens || this.tokens).forEach(token => {\n        switch (token.type) {\n          case 'rule': {\n            this.pre_compose_rule(token, coords);\n            break;\n          }\n          case 'pseudo': {\n            if (is_host_selector(token.selector)) {\n              (token.styles || []).forEach(token => {\n                this.pre_compose_rule(token, coords);\n              });\n            }\n            break;\n          }\n        }\n      });\n    }\n\n    compose(coords, tokens, initial) {\n      this.coords.push(coords);\n      (tokens || this.tokens).forEach((token, i) => {\n        if (token.skip) return false;\n        if (initial && this.grid) return false;\n\n        switch (token.type) {\n          case 'rule': {\n            this.add_rule(\n              this.compose_selector(coords),\n              this.compose_rule(token, coords)\n            );\n            break;\n          }\n\n          case 'pseudo': {\n            if (token.selector.startsWith(':doodle')) {\n              token.selector = token.selector.replace(/^\\:+doodle/, ':host');\n            }\n            let special = is_special_selector(token.selector);\n            if (special) {\n              token.skip = true;\n            }\n            token.selector.split(',').forEach(selector => {\n              let pseudo = token.styles.map(s =>\n                this.compose_rule(s, coords, selector)\n              );\n              let composed = special\n                ? selector\n                : this.compose_selector(coords, selector);\n              this.add_rule(composed, pseudo);\n            });\n\n            break;\n          }\n\n          case 'cond': {\n            let fn = this.Selector[token.name.substr(1)];\n            if (fn) {\n              let args = token.arguments.map(arg => {\n                return this.compose_argument(arg, coords);\n              });\n              let result = this.apply_func(fn, coords, args);\n              if (result) {\n                this.compose(coords, token.styles);\n              }\n            }\n            break;\n          }\n\n          case 'keyframes': {\n            if (!this.keyframes[token.name]) {\n              this.keyframes[token.name] = coords => `\n              ${ join(token.steps.map(step => `\n                ${ step.name } {\n                  ${ join(\n                    step.styles.map(s => this.compose_rule(s, coords))\n                  )}\n                }\n              `)) }\n            `;\n            }\n          }\n        }\n      });\n    }\n\n    output() {\n      Object.keys(this.rules).forEach((selector, i) => {\n        if (is_parent_selector(selector)) {\n          this.styles.container += `\n          .container {\n            ${ join(this.rules[selector]) }\n          }\n        `;\n        } else {\n          let target = is_host_selector(selector) ? 'host' : 'cells';\n          let value = join(this.rules[selector]).trim();\n          let name = (target === 'host') ? `${ selector }, .host` : selector;\n          this.styles[target] += `${ name } { ${ value  } }`;\n        }\n      });\n\n      let keyframes = Object.keys(this.keyframes);\n\n      if (this.uniforms.time) {\n        this.styles.container += `\n        :host, .host {\n          animation: ${ uniform_time.animation };\n        }\n      `;\n        this.styles.keyframes += `\n       @keyframes ${ uniform_time['animation-name'] } {\n         from { --${ uniform_time.name }: 0 }\n         to { --${ uniform_time.name }: ${ uniform_time['animation-duration'] } }\n       }\n      `;\n      }\n\n      this.coords.forEach((coords, i) => {\n        keyframes.forEach(name => {\n          let aname = this.compose_aname(name, coords.count);\n          this.styles.keyframes += `\n          ${ maybe(i === 0,\n            `@keyframes ${ name } {\n              ${ this.keyframes[name](coords) }\n            }`\n          )}\n          @keyframes ${ aname } {\n            ${ this.keyframes[name](coords) }\n          }\n        `;\n        });\n      });\n\n      let definitions = [];\n      Object.keys(this.custom_properties).forEach(name => {\n        let def = get_definition(name);\n        if (def) {\n          definitions.push(def);\n        }\n      });\n\n      return {\n        props: this.props,\n        styles: this.styles,\n        grid: this.grid,\n        doodles: this.doodles,\n        shaders: this.shaders,\n        paths: this.paths,\n        definitions: definitions,\n        uniforms: this.uniforms\n      }\n    }\n\n  }\n\n  function generator(tokens, grid_size, random) {\n    let rules = new Rules(tokens, random);\n    let context = {};\n\n    rules.pre_compose({\n      x: 1, y: 1, z: 1, count: 1, context: {},\n      grid: { x: 1, y: 1, z: 1, count: 1 }\n    });\n\n    let { grid } = rules.output();\n    if (grid) grid_size = grid;\n    rules.reset();\n\n    if (grid_size.z == 1) {\n      for (let y = 1, count = 0; y <= grid_size.y; ++y) {\n        for (let x = 1; x <= grid_size.x; ++x) {\n          rules.compose({\n            x, y, z: 1,\n            count: ++count, grid: grid_size, context\n          });\n        }\n      }\n    }\n    else {\n      for (let z = 1, count = 0; z <= grid_size.z; ++z) {\n        rules.compose({\n          x: 1, y: 1, z,\n          count: ++count, grid: grid_size, context\n        });\n      }\n    }\n\n    return rules.output();\n  }\n\n  /*\n  Copyright 2019 David Bau.\n  Permission is hereby granted, free of charge, to any person obtaining\n  a copy of this software and associated documentation files (the\n  \"Software\"), to deal in the Software without restriction, including\n  without limitation the rights to use, copy, modify, merge, publish,\n  distribute, sublicense, and/or sell copies of the Software, and to\n  permit persons to whom the Software is furnished to do so, subject to\n  the following conditions:\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  */\n\n  var global = window;\n  var math = Math;\n  var pool = [];\n\n  //\n  // The following constants are related to IEEE 754 limits.\n  //\n\n  var width = 256,        // each RC4 output is 0 <= x < 256\n      chunks = 6,         // at least six RC4 outputs for each double\n      digits = 52,        // there are 52 significant digits in a double\n      rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n      startdenom = math.pow(width, chunks),\n      significance = math.pow(2, digits),\n      overflow = significance * 2,\n      mask = width - 1,\n      nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n  //\n  // seedrandom()\n  // This is the seedrandom function described above.\n  //\n  function seedrandom(seed, options, callback) {\n    var key = [];\n    options = (options == true) ? { entropy: true } : (options || {});\n\n    // Flatten the seed string or build one from local entropy if needed.\n    var shortseed = mixkey(flatten(\n      options.entropy ? [seed, tostring(pool)] :\n      (seed == null) ? autoseed() : seed, 3), key);\n\n    // Use the seed to initialize an ARC4 generator.\n    var arc4 = new ARC4(key);\n\n    // This function returns a random double in [0, 1) that contains\n    // randomness in every bit of the mantissa of the IEEE 754 value.\n    var prng = function() {\n      var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n          d = startdenom,                 //   and denominator d = 2 ^ 48.\n          x = 0;                          //   and no 'extra last byte'.\n      while (n < significance) {          // Fill up all significant digits by\n        n = (n + x) * width;              //   shifting numerator and\n        d *= width;                       //   denominator and generating a\n        x = arc4.g(1);                    //   new least-significant-byte.\n      }\n      while (n >= overflow) {             // To avoid rounding up, before adding\n        n /= 2;                           //   last byte, shift everything\n        d /= 2;                           //   right using integer math until\n        x >>>= 1;                         //   we have exactly the desired bits.\n      }\n      return (n + x) / d;                 // Form the number within [0, 1).\n    };\n\n    prng.int32 = function() { return arc4.g(4) | 0; };\n    prng.quick = function() { return arc4.g(4) / 0x100000000; };\n    prng.double = prng;\n\n    // Mix the randomness into accumulated entropy.\n    mixkey(tostring(arc4.S), pool);\n\n    // Calling convention: what to return as a function of prng, seed, is_math.\n    return (options.pass || callback ||\n        function(prng, seed, is_math_call, state) {\n          if (state) {\n            // Load the arc4 state from the given state if it has an S array.\n            if (state.S) { copy(state, arc4); }\n            // Only provide the .state method if requested via options.state.\n            prng.state = function() { return copy(arc4, {}); };\n          }\n\n          // If called as a method of Math (Math.seedrandom()), mutate\n          // Math.random because that is how seedrandom.js has worked since v1.0.\n          if (is_math_call) { math[rngname] = prng; return seed; }\n\n          // Otherwise, it is a newer calling convention, so return the\n          // prng directly.\n          else return prng;\n        })(\n    prng,\n    shortseed,\n    'global' in options ? options.global : (this == math),\n    options.state);\n  }\n\n  //\n  // ARC4\n  //\n  // An ARC4 implementation.  The constructor takes a key in the form of\n  // an array of at most (width) integers that should be 0 <= x < (width).\n  //\n  // The g(count) method returns a pseudorandom integer that concatenates\n  // the next (count) outputs from ARC4.  Its return value is a number x\n  // that is in the range 0 <= x < (width ^ count).\n  //\n  function ARC4(key) {\n    var t, keylen = key.length,\n        me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n    // The empty key [] is treated as [0].\n    if (!keylen) { key = [keylen++]; }\n\n    // Set up S using the standard key scheduling algorithm.\n    while (i < width) {\n      s[i] = i++;\n    }\n    for (i = 0; i < width; i++) {\n      s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n      s[j] = t;\n    }\n\n    // The \"g\" method returns the next (count) outputs as one number.\n    (me.g = function(count) {\n      // Using instance members instead of closure state nearly doubles speed.\n      var t, r = 0,\n          i = me.i, j = me.j, s = me.S;\n      while (count--) {\n        t = s[i = mask & (i + 1)];\n        r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n      }\n      me.i = i; me.j = j;\n      return r;\n      // For robust unpredictability, the function call below automatically\n      // discards an initial batch of values.  This is called RC4-drop[256].\n      // See http://google.com/search?q=rsa+fluhrer+response&btnI\n    })(width);\n  }\n\n  //\n  // copy()\n  // Copies internal state of ARC4 to or from a plain object.\n  //\n  function copy(f, t) {\n    t.i = f.i;\n    t.j = f.j;\n    t.S = f.S.slice();\n    return t;\n  }\n  //\n  // flatten()\n  // Converts an object tree to nested arrays of strings.\n  //\n  function flatten(obj, depth) {\n    var result = [], typ = (typeof obj), prop;\n    if (depth && typ == 'object') {\n      for (prop in obj) {\n        try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n      }\n    }\n    return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n  }\n\n  //\n  // mixkey()\n  // Mixes a string seed into a key that is an array of integers, and\n  // returns a shortened string seed that is equivalent to the result key.\n  //\n  function mixkey(seed, key) {\n    var stringseed = seed + '', smear, j = 0;\n    while (j < stringseed.length) {\n      key[mask & j] =\n        mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n    }\n    return tostring(key);\n  }\n\n  //\n  // autoseed()\n  // Returns an object for autoseeding, using window.crypto and Node crypto\n  // module if available.\n  //\n  function autoseed() {\n    try {\n      var out;\n      if (nodecrypto && (out = nodecrypto.randomBytes)) ; else {\n        out = new Uint8Array(width);\n        (global.crypto || global.msCrypto).getRandomValues(out);\n      }\n      return tostring(out);\n    } catch (e) {\n      var browser = global.navigator,\n          plugins = browser && browser.plugins;\n      return [+new Date, global, plugins, global.screen, tostring(pool)];\n    }\n  }\n\n  //\n  // tostring()\n  // Converts an array of charcodes to a string\n  //\n  function tostring(a) {\n    return String.fromCharCode.apply(0, a);\n  }\n\n  //\n  // When seedrandom.js is loaded, we immediately mix a few bits\n  // from the built-in RNG into the entropy pool.  Because we do\n  // not want to interfere with deterministic PRNG state later,\n  // seedrandom will not call math.random on its own again after\n  // initialization.\n  //\n  mixkey(math.random(), pool);\n\n  function create_shader(gl, type, source) {\n    let shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n  function create_program(gl, vss, fss) {\n    let vs = create_shader(gl, gl.VERTEX_SHADER, vss);\n    let fs = create_shader(gl, gl.FRAGMENT_SHADER, fss);\n    let prog = gl.createProgram();\n    gl.attachShader(prog, vs);\n    gl.attachShader(prog, fs);\n    gl.linkProgram(prog);\n    if (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n      console.warn('Link failed: ' + gl.getProgramInfoLog(prog));\n      console.warn('vs info-log: ' + gl.getShaderInfoLog(vs));\n      console.warn('fs info-log: ' + gl.getShaderInfoLog(fs));\n    }\n    return prog;\n  }\n\n  function add_uniform(fragment, uniform) {\n    if (!fragment.includes(uniform)) {\n      return uniform + '\\n' + fragment;\n    }\n    return fragment;\n  }\n\n  const fragment_head = `\n  precision highp float;\n`;\n\n  const default_vertex_shader = `\n  attribute vec4 position;\n  void main() {\n    gl_Position = position;\n  }\n`;\n\n  /* https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL */\n  function load_texture(gl, image, i) {\n    const texture = gl.createTexture();\n    gl.activeTexture(gl['TEXTURE' + i]);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA,gl.UNSIGNED_BYTE, image);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  }\n\n  function draw_shader(shaders, width, height) {\n    let canvas = document.createElement('canvas');\n    let ratio = window.devicePixelRatio || 1;\n    width *= ratio;\n    height *= ratio;\n    canvas.width = width;\n    canvas.height = height;\n\n    let gl = canvas.getContext('webgl')\n      || canvas.getContext('exprimental-webgl');\n    if (!gl) return '';\n\n    // resolution uniform\n    let fragment = add_uniform(shaders.fragment || '', 'uniform vec2 u_resolution;');\n    // texture uniform\n    shaders.textures.forEach(n => {\n      let uniform = `uniform sampler2D ${ n.name };`;\n      fragment =  add_uniform(fragment, uniform);\n    });\n\n    let program = create_program(\n      gl,\n      shaders.vertex || default_vertex_shader,\n      fragment_head + fragment\n    );\n\n    /* position in vertex shader */\n    let positionAttributeLocation = gl.getAttribLocation(program, 'position');\n    let positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    let vertices = [-1, -1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1];\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(positionAttributeLocation);\n    gl.vertexAttribPointer(positionAttributeLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.useProgram(program);\n\n    /* resolve uniforms */\n    gl.uniform2fv(gl.getUniformLocation(program, \"u_resolution\"), [width, height]);\n    shaders.textures.forEach((n, i) => {\n      load_texture(gl, n.value, i);\n      gl.uniform1i(gl.getUniformLocation(program, n.name), i);\n    });\n\n    // two triangles to form a rectangle\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    // resolve image data in 72dpi :(\n    return Promise.resolve(canvas.toDataURL());\n  }\n\n  function get_all_variables(element) {\n    let ret = {};\n    if (element.computedStyleMap) {\n      for (let [prop, value] of element.computedStyleMap()) {\n        if (prop.startsWith('--')) {\n          ret[prop] = value[0][0];\n        }\n      }\n    } else {\n      let styles = getComputedStyle(element);\n      for (let prop of styles) {\n        if (prop.startsWith('--')) {\n          ret[prop] = styles.getPropertyValue(prop);\n        }\n      }\n    }\n    return inline(ret);\n  }\n\n  function get_variable(element, name) {\n    return getComputedStyle(element).getPropertyValue(name)\n      .trim()\n      .replace(/^\\(|\\)$/g, '');\n\n  }\n\n  function inline(map) {\n    let result = [];\n    for (let prop in map) {\n      result.push(prop + ':' + map[prop]);\n    }\n    return result.join(';');\n  }\n\n  class Doodle extends HTMLElement {\n    constructor() {\n      super();\n      this.doodle = this.attachShadow({ mode: 'open' });\n      this.extra = {\n        get_variable: name => get_variable(this, name)\n      };\n    }\n\n    connectedCallback(again) {\n      if (/^(complete|interactive|loaded)$/.test(document.readyState)) {\n        this.load(again);\n      } else {\n        setTimeout(() => this.load(again));\n      }\n    }\n\n    update(styles) {\n      let use = this.get_use();\n      if (!styles) styles = this.innerHTML;\n      this.innerHTML = styles;\n\n      if (!this.grid_size) {\n        this.grid_size = this.get_grid();\n      }\n\n      let { x: gx, y: gy, z: gz } = this.grid_size;\n\n      const compiled = this.generate(\n        parse$1(use + styles, this.extra)\n      );\n\n      if (!this.shadowRoot.innerHTML) {\n        Object.assign(this.grid_size, compiled.grid);\n        return this.build_grid(compiled, compiled.grid);\n      }\n\n      if (compiled.grid) {\n        let { x, y, z } = compiled.grid;\n        if (gx !== x || gy !== y || gz !== z) {\n          Object.assign(this.grid_size, compiled.grid);\n          return this.build_grid(compiled, compiled.grid);\n        }\n        Object.assign(this.grid_size, compiled.grid);\n      }\n      else {\n        let grid = this.get_grid();\n        let { x, y, z } = grid;\n        if (gx !== x || gy !== y || gz !== z) {\n          Object.assign(this.grid_size, grid);\n          return this.build_grid(\n            this.generate(parse$1(use + styles, this.extra)),\n            grid\n          );\n        }\n      }\n\n      let svg_paths = this.build_svg_paths(compiled.paths);\n      if (svg_paths) {\n        let defs = this.shadowRoot.querySelector('.svg-defs');\n        if (defs) {\n          defs.innerHTML = svg_paths;\n        }\n      }\n\n      if (compiled.uniforms.time) {\n        this.register_uniform_time();\n      }\n\n      let replace = this.replace(compiled);\n\n      this.set_content('.style-keyframes', replace(compiled.styles.keyframes));\n\n      if (compiled.props.has_animation) {\n        this.set_content('.style-cells', '');\n        this.set_content('.style-container', '');\n      }\n\n      setTimeout(() => {\n        this.set_content('.style-container', replace(\n            get_grid_styles(this.grid_size)\n          + compiled.styles.host\n          + compiled.styles.container\n        ));\n        this.set_content('.style-cells', replace(compiled.styles.cells));\n      });\n    }\n\n    get grid() {\n      return Object.assign({}, this.grid_size);\n    }\n\n    set grid(grid) {\n      this.attr('grid', grid);\n      this.connectedCallback(true);\n    }\n\n    get seed() {\n      return this._seed_value;\n    }\n\n    set seed(seed) {\n      this.attr('seed', seed);\n      this.connectedCallback(true);\n    }\n\n    get use() {\n      return this.attr('use');\n    }\n\n    set use(use) {\n      this.attr('use', use);\n      this.connectedCallback(true);\n    }\n\n    static get observedAttributes() {\n      return ['grid', 'use', 'seed'];\n    }\n\n    attributeChangedCallback(name, old_val, new_val) {\n      if (old_val == new_val) {\n        return false;\n      }\n      let observed = ['grid', 'use', 'seed'].includes(name);\n      if (observed && !is_nil(old_val)) {\n        this[name] = new_val;\n      }\n    }\n\n    get_grid() {\n      return parse_grid(this.attr('grid'));\n    }\n\n    get_use() {\n      let use = this.attr('use') || '';\n      if (use) use = `@use:${ use };`;\n      return use;\n    }\n\n    attr(name, value) {\n      if (arguments.length === 1) {\n        return this.getAttribute(name);\n      }\n      if (arguments.length === 2) {\n        this.setAttribute(name, value);\n        return value;\n      }\n    }\n\n    generate(parsed) {\n      let grid = this.get_grid();\n      let seed = this.attr('seed') || this.attr('data-seed');\n\n      if (is_nil(seed)) {\n        seed = Date.now();\n      }\n\n      seed = String(seed);\n      this._seed_value = seed;\n\n      let random = this.random = seedrandom(seed);\n      let compiled = this.compiled = generator(parsed, grid, random);\n      return compiled;\n    }\n\n    doodle_to_image(code, options, fn) {\n      if (typeof options === 'function') {\n        fn = options;\n        options = null;\n      }\n      let parsed = parse$1(code, this.extra);\n      let _grid = parse_grid({});\n      let compiled = generator(parsed, _grid, this.random);\n      let grid = compiled.grid ? compiled.grid : _grid;\n      const { keyframes, host, container, cells } = compiled.styles;\n      let svg_defs = this.build_svg_paths(compiled.paths);\n\n      let replace = this.replace(compiled);\n      let grid_container = create_grid(grid);\n\n      let size = (options && options.width && options.height)\n        ? `width=\"${ options.width }\" height=\"${ options.height }\"`\n        : '';\n\n      replace(`\n      <svg ${ size } xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\">\n        <foreignObject width=\"100%\" height=\"100%\">\n          <div class=\"host\" xmlns=\"http://www.w3.org/1999/xhtml\">\n            <style>\n              ${ get_basic_styles() }\n              ${ get_grid_styles(grid) }\n              ${ host }\n              ${ container }\n              ${ cells }\n              ${ keyframes }\n            </style>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0\" height=\"0\">\n              <defs class=\"svg-defs\">${ svg_defs }</defs>\n            </svg>\n            ${ grid_container }\n          </div>\n        </foreignObject>\n      </svg>\n    `).then(result => {\n        let source =`data:image/svg+xml;base64,${ window.btoa(unescape(encodeURIComponent(result))) }`;\n        if (is_safari()) {\n          cache_image(source);\n        }\n        fn(source);\n      });\n    }\n\n    shader_to_image({ shader, cell }, fn) {\n      let parsed = parse$2(shader);\n      let element = this.doodle.getElementById(cell);\n      let { width, height } = element.getBoundingClientRect();\n      let ratio = window.devicePixelRatio || 1;\n\n      if (!parsed.textures.length) {\n        draw_shader(parsed, width, height).then(fn);\n      }\n      // Need to bind textures first\n      else {\n        let transforms = parsed.textures.map(texture => {\n          return new Promise(resolve => {\n            this.doodle_to_image(texture.value, { width, height }, src => {\n              let img = new Image();\n              img.width = width * ratio;\n              img.height = height * ratio;\n              img.onload = () => resolve({ name: texture.name, value: img });\n              img.src = src;\n            });\n          });\n        });\n        Promise.all(transforms).then(textures => {\n          parsed.textures = textures;\n          draw_shader(parsed, width, height).then(fn);\n        });\n      }\n    }\n\n    load(again) {\n      if (!again) {\n        if (this.hasAttribute('click-to-update')) {\n          this.addEventListener('click', e => this.update());\n        }\n      }\n      let use = this.get_use();\n      if (!this.innerHTML.trim() && !use) {\n        return false;\n      }\n      let parsed = parse$1(use + un_entity(this.innerHTML), this.extra);\n      let compiled = this.generate(parsed);\n\n      this.grid_size = compiled.grid\n        ? compiled.grid\n        : this.get_grid();\n\n      this.build_grid(compiled, this.grid_size);\n    }\n\n    replace({ doodles, shaders, paths }) {\n      let doodle_ids = Object.keys(doodles);\n      let shader_ids = Object.keys(shaders);\n      let path_ids = Object.keys(paths);\n      return input => {\n        if (!doodle_ids.length && !shader_ids.length && !path_ids.length) {\n          return Promise.resolve(input);\n        }\n\n        let mappings = [].concat(\n          doodle_ids.map(id => {\n            if (input.includes(id)) {\n              return new Promise(resolve => {\n                this.doodle_to_image(doodles[id], value => resolve({ id, value }));\n              });\n            } else {\n              return Promise.resolve('');\n            }\n          }),\n          shader_ids.map(id => {\n            if (input.includes(id)) {\n              return new Promise(resolve => {\n                this.shader_to_image(shaders[id], value => resolve({ id, value }));\n              });\n            } else {\n              return Promise.resolve('');\n            }\n          }),\n          path_ids.map(id => {\n            if (input.includes(id)) {\n              return Promise.resolve({ id, value: '#' + id });\n            } else {\n              return Promise.resolve('');\n            }\n          })\n        );\n\n        return Promise.all(mappings).then(mapping => {\n          if (input.replaceAll) {\n            mapping.forEach(({ id, value }) => {\n              input = input.replaceAll('${' + id + '}', `url(${value})`);\n            });\n          } else {\n            mapping.forEach(({ id, value }) => {\n              input = input.replace('${' + id + '}', `url(${value})`);\n            });\n          }\n          return input;\n        });\n      }\n    }\n\n    build_grid(compiled, grid) {\n      const { has_transition, has_animation } = compiled.props;\n      let has_delay = (has_transition || has_animation);\n\n      const { keyframes, host, container, cells } = compiled.styles;\n      let style_container = get_grid_styles(grid) + host + container;\n      let style_cells = has_delay ? '' : cells;\n      let svg_defs = this.build_svg_paths(compiled.paths);\n\n      const { uniforms } = compiled;\n\n      let replace = this.replace(compiled);\n\n      this.doodle.innerHTML = `\n      <style>${ get_basic_styles(uniforms) }</style>\n      <style class=\"style-keyframes\">${ keyframes }</style>\n      <style class=\"style-container\">${ style_container }</style>\n      <style class=\"style-cells\">${ style_cells }</style>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"0\" height=\"0\">\n        <defs class=\"svg-defs\">${ svg_defs }</defs>\n      </svg>\n      ${ create_grid(grid) }\n    `;\n\n      this.set_content('.style-container', replace(style_container));\n\n      if (has_delay) {\n        setTimeout(() => {\n          this.set_content('.style-cells', replace(cells));\n        }, 50);\n      } else {\n        this.set_content('.style-cells', replace(cells));\n      }\n\n      // might be removed in the future\n      const definitions = compiled.definitions;\n      if (window.CSS && window.CSS.registerProperty) {\n        try {\n          if (uniforms.time) {\n            this.register_uniform_time();\n          }\n          definitions.forEach(CSS.registerProperty);\n        } catch (e) { }\n      }\n    }\n\n    build_svg_paths(paths) {\n      let names = Object.keys(paths || {});\n      return names.map(name => `\n      <clipPath id=\"${ paths[name].id }\" clipPathUnits=\"objectBoundingBox\">\n        <path d=\"${ paths[name].commands }\" />\n      </clipPath>\n    `).join('');\n    }\n\n    register_uniform_time() {\n      if (!this.is_uniform_time_registered) {\n        try {\n          CSS.registerProperty({\n            name: '--' + uniform_time.name,\n            syntax: '<number>',\n            initialValue: 0,\n            inherits: true\n          });\n        } catch (e) {}\n        this.is_uniform_time_registered = true;\n      }\n    }\n\n    export({ scale, name, download, detail } = {}) {\n      return new Promise((resolve, reject) => {\n        let variables = get_all_variables(this);\n        let html = this.doodle.innerHTML;\n\n        let { width, height } = this.getBoundingClientRect();\n        scale = parseInt(scale) || 1;\n\n        let w = width * scale;\n        let h = height * scale;\n\n        let svg = minify(`\n        <svg xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"none\"\n          viewBox=\"0 0 ${ width } ${ height }\"\n          ${ is_safari() ? '' : `width=\"${ w }px\" height=\"${ h }px\"` }\n        >\n          <foreignObject width=\"100%\" height=\"100%\">\n            <div\n              class=\"host\"\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n              style=\"width: ${ width }px; height: ${ height }px; \"\n            >\n              <style>.host { ${variables} }</style>\n              ${ html }\n            </div>\n          </foreignObject>\n        </svg>\n      `);\n\n        if (download || detail) {\n          svg_to_png(svg, w, h, scale)\n            .then(({ source, url, blob }) => {\n              resolve({\n                width: w, height: h, svg, blob, source\n              });\n              if (download) {\n                let a = document.createElement('a');\n                a.download = normalize_png_name(name);\n                a.href = url;\n                a.click();\n              }\n            })\n            .catch(error => {\n              reject(error);\n            });\n        } else {\n          resolve({\n            width: w, height: h, svg: svg\n          });\n        }\n      });\n    }\n\n    set_content(selector, styles) {\n      if (styles instanceof Promise) {\n        styles.then(value => {\n          this.set_content(selector, value);\n        });\n      } else {\n        const el = this.shadowRoot.querySelector(selector);\n        el && (el.styleSheet\n          ? (el.styleSheet.cssText = styles )\n          : (el.innerHTML = styles));\n      }\n    }\n  }\n\n  if (!customElements.get('css-doodle')) {\n    customElements.define('css-doodle', Doodle);\n  }\n\n  function get_basic_styles(uniforms = {}) {\n    const inherited_grid_props = get_props(/grid/)\n      .map(n => `${ n }: inherit;`)\n      .join('');\n    return `\n    * {\n      box-sizing: border-box\n    }\n    *::after, *::before {\n      box-sizing: inherit\n    }\n    :host, .host {\n      display: block;\n      visibility: visible;\n      width: auto;\n      height: auto;\n      --${ uniform_time.name }: 0\n    }\n    :host([hidden]), .host[hidden] {\n      display: none\n    }\n    .container {\n      position: relative;\n      width: 100%;\n      height: 100%;\n      display: grid;\n      ${ inherited_grid_props }\n    }\n    cell:empty {\n      position: relative;\n      line-height: 1;\n      display: grid;\n      place-items: center\n    }\n    svg {\n      position: absolute;\n    }\n  `;\n  }\n\n  function get_grid_styles({x, y}) {\n    return `\n    :host, .host {\n      grid-template-rows: repeat(${ y }, 1fr);\n      grid-template-columns: repeat(${ x }, 1fr);\n    }\n  `;\n  }\n\n  function minify(input) {\n    return input\n      .replace(/\\n\\s+|^\\s+|\\n+/g, ' ')\n      .trim();\n  }\n\n  function create_cell(x, y, z) {\n    let cell = document.createElement('cell');\n    cell.id = cell_id(x, y, z);\n    return cell;\n  }\n\n  function create_grid({ x, y, z }) {\n    let grid = document.createElement('grid');\n    let root = document.createDocumentFragment();\n    if (z == 1) {\n      for (let j = 1; j <= y; ++j) {\n        for (let i = 1; i <= x; ++i) {\n          root.appendChild(create_cell(i, j, 1));\n        }\n      }\n    }\n    else {\n      let temp = null;\n      for (let i = 1; i <= z; ++i) {\n        let cell = create_cell(1, 1, i);\n        (temp || root).appendChild(cell);\n        temp = cell;\n      }\n      temp = null;\n    }\n    grid.className = 'container';\n    grid.appendChild(root);\n    return grid.outerHTML;\n  }\n\n  function CSSDoodle(input, ...vars) {\n    let get_value = v => is_nil(v) ? '' : v;\n    let rules = input.reduce((s, c, i) => s + c + get_value(vars[i]), '');\n    let doodle = document.createElement('css-doodle');\n    if (doodle.update) {\n      doodle.update(rules);\n    }\n    return doodle;\n  }\n\n  return CSSDoodle;\n\n})));\n"]},"metadata":{},"sourceType":"script"}