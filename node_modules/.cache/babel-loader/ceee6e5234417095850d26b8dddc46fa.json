{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Display(props){var display=props.display,evaluate=props.evaluate,number=props.number,result=props.result,deleted=props.deleted;var formatted=\"\";var infix=deleted?display:evaluate;if(result!=\"\"&&display===result){formatted=parseFloat(result).toLocaleString();console.log(\"FORMATTED : \".concat(formatted));}else{formatted=isNaN(parseFloat(number))?0:parseFloat(number).toLocaleString();}return/*#__PURE__*/_jsxs(\"div\",{className:\"display glass\",children:[formatted||'0',/*#__PURE__*/_jsx(\"div\",{className:\"preview\",children:infix.trim().toLocaleString()||'0'})]});}export default Display;","map":{"version":3,"sources":["/Users/macpro/GITHUB/REPOS/Calculator/src/components/Display.js"],"names":["React","Display","props","display","evaluate","number","result","deleted","formatted","infix","parseFloat","toLocaleString","console","log","isNaN","trim"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,QAASC,CAAAA,OAAT,CAAkBC,KAAlB,CAAyB,IACfC,CAAAA,OADe,CACgCD,KADhC,CACfC,OADe,CACNC,QADM,CACgCF,KADhC,CACNE,QADM,CACIC,MADJ,CACgCH,KADhC,CACIG,MADJ,CACYC,MADZ,CACgCJ,KADhC,CACYI,MADZ,CACoBC,OADpB,CACgCL,KADhC,CACoBK,OADpB,CAEvB,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,KAAK,CAAIF,OAAD,CAAYJ,OAAZ,CAAsBC,QAAlC,CAEE,GAAGE,MAAM,EAAG,EAAT,EAAeH,OAAO,GAAGG,MAA5B,CAAmC,CACjCE,SAAS,CAAGE,UAAU,CAACJ,MAAD,CAAV,CAAmBK,cAAnB,EAAZ,CACAC,OAAO,CAACC,GAAR,uBAA2BL,SAA3B,GAED,CAJD,IAIK,CAEHA,SAAS,CAAIM,KAAK,CAACJ,UAAU,CAACL,MAAD,CAAX,CAAN,CAA8B,CAA9B,CAAkCK,UAAU,CAACL,MAAD,CAAV,CAAmBM,cAAnB,EAA9C,CAED,CAEH,mBACE,aAAK,SAAS,CAAC,eAAf,WACGH,SAAS,EAAI,GADhB,cAEE,YAAK,SAAS,CAAC,SAAf,UAA0BC,KAAK,CAACM,IAAN,GAAaJ,cAAb,IAAiC,GAA3D,EAFF,GADF,CAMD,CAED,cAAeV,CAAAA,OAAf","sourcesContent":["import React from 'react'\n\nfunction Display (props) {\n  const { display, evaluate, number, result, deleted } = props\n  let formatted = \"\"\n  let infix = (deleted) ? display : evaluate;\n\n    if(result !=\"\" && display===result){\n      formatted = parseFloat(result).toLocaleString()\n      console.log(`FORMATTED : ${formatted}`)\n\n    }else{\n\n      formatted = (isNaN(parseFloat(number))) ? 0 : parseFloat(number).toLocaleString()\n      \n    }\n \n  return (\n    <div className='display glass'>\n      {formatted || '0'}\n      <div className='preview'>{infix.trim().toLocaleString() || '0'}</div>\n    </div>\n  )\n}\n\nexport default Display\n"]},"metadata":{},"sourceType":"module"}